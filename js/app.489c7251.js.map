{"version":3,"file":"js/app.489c7251.js","mappings":"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","sources":["webpack://vue-node-app/./src/App.vue","webpack://vue-node-app/./src/App.vue?7ccd","webpack://vue-node-app/./src/components/SignupForm.vue","webpack://vue-node-app/./src/components/SignupForm.vue?3956","webpack://vue-node-app/./src/components/LoginForm.vue","webpack://vue-node-app/./src/components/LoginForm.vue?dcb9","webpack://vue-node-app/./src/components/RequestPasswordReset.vue","webpack://vue-node-app/./src/components/RequestPasswordReset.vue?490f","webpack://vue-node-app/./src/components/ResetPassword.vue","webpack://vue-node-app/./src/components/ResetPassword.vue?e838","webpack://vue-node-app/./src/components/FindPassword.vue","webpack://vue-node-app/./src/components/FindPassword.vue?1f66","webpack://vue-node-app/./src/components/FindId.vue","webpack://vue-node-app/./src/components/FindId.vue?3faf","webpack://vue-node-app/./src/components/MypageEdit.vue","webpack://vue-node-app/./src/components/MypageEdit.vue?fc90","webpack://vue-node-app/./src/components/BoardForm.vue","webpack://vue-node-app/./src/components/BoardForm.vue?20b0","webpack://vue-node-app/./src/components/BoardDetail.vue","webpack://vue-node-app/./src/components/BoardDetail.vue?9bcd","webpack://vue-node-app/./src/components/patchNotesDisplay.vue","webpack://vue-node-app/./src/components/patchNotesDisplay.vue?936c","webpack://vue-node-app/./src/components/MatchQueue.vue","webpack://vue-node-app/./src/components/MatchQueue.vue?6775","webpack://vue-node-app/./src/components/ChatRoom.vue","webpack://vue-node-app/./src/components/ChatRoom.vue?b738","webpack://vue-node-app/./src/router/index.js","webpack://vue-node-app/./src/main.js","webpack://vue-node-app/webpack/bootstrap","webpack://vue-node-app/webpack/runtime/chunk loaded","webpack://vue-node-app/webpack/runtime/define property getters","webpack://vue-node-app/webpack/runtime/global","webpack://vue-node-app/webpack/runtime/hasOwnProperty shorthand","webpack://vue-node-app/webpack/runtime/make namespace object","webpack://vue-node-app/webpack/runtime/publicPath","webpack://vue-node-app/webpack/runtime/jsonp chunk loading","webpack://vue-node-app/webpack/startup"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 조건에 따라 다른 헤더를 표시 -->\n    <header v-if=\"showHeader\">\n      <template v-if=\"isLoggedIn\">\n        <!-- 로그인 상태일 때의 헤더 -->\n        <div class=\"header\">\n          <div class=\"logo\">\n            <div class=\"circle\"></div>\n            <span>안녕하세요, {{ userInfo.nickname }}님!</span>\n          </div>\n          <nav class=\"nav-links\">\n            <a v-if=\"userInfo.nickname\"><strong>닉네임:</strong> {{ userInfo.nickname }}</a>\n            <a @click=\"mypageopen = true\">마이페이지</a>\n            <router-link to=\"/board\">게시판</router-link> <!-- 게시판 링크 추가 -->\n            <router-link to=\"/patch-notes\">패치 노트</router-link> <!-- 새로운 패치 노트 링크 추가 -->\n            <div class=\"modal-overlay\" v-if=\"mypageopen == true\">\n              <div class=\"modal-content\">\n                <!-- 프로필 이미지 -->\n                <div class=\"profile-image\"></div>\n\n                <!-- 유저 정보 표시 -->\n                <div class=\"user-info-display\">\n                  <p v-if=\"userInfo.nickname\"><strong>닉네임:</strong> {{ userInfo.nickname }}</p>\n                  <p v-if=\"userInfo.email\"><strong>이메일:</strong> {{ userInfo.email }}</p>\n                  <p v-if=\"userInfo.birthdate\"><strong>생년월일:</strong> {{ userInfo.birthdate }}</p>\n                  <p v-if=\"userInfo.gender\"><strong>성별:</strong> {{ userInfo.gender }}</p>\n                </div>\n\n                <!-- 수정 버튼 -->\n                <button type=\"button\" class=\"edit-button\" href=\"/mypage-edit\">내 정보 수정</button>\n\n                <!-- 게임 정보 -->\n                <div class=\"gaming-info\">\n                  <h2>Gaming Information</h2>\n                  <p>Your gaming details</p>\n                  <div class=\"game-stats\">\n                    <div class=\"game-tier\">\n                      <img src=\"tier-icon.png\" alt=\"Game Tier\" />\n                      <p>Game Tier</p>\n                      <p>{{ userInfo.gameTier }}</p>\n                    </div>\n                    <div class=\"most-champions\">\n                      <p>Most Champion Top 3</p>\n                      <div class=\"champion-icons\">\n                        <img v-for=\"(champion, index) in userInfo.topChampions\" :key=\"index\" :src=\"champion.image\"\n                          :alt=\"champion.name\" />\n                      </div>\n                      <!-- <p>{{ userInfo.topChampions.map(c => c.name).join(', ') }}</p> -->\n                    </div>\n                  </div>\n                </div>\n\n                <!-- 회원 탈퇴 버튼 -->\n                <button class=\"delete-button\" @click=\"withdraw(), mypageopen = false\">회원탈퇴</button>\n\n                <button class=\"close-button\" @click=\"mypageopen = false\">닫기</button>\n              </div>\n            </div>\n            <a href=\"/mypage-edit\">내 정보 변경</a>\n            <a @click=\"logout()\">로그아웃</a>\n          </nav>\n        </div>\n      </template>\n      <template v-else>\n        <!-- 비로그인 상태일 때의 헤더 -->\n        <div class=\"header\">\n          <div class=\"logo\">\n            <div class=\"circle\"></div>\n            <span>Welcome</span>\n          </div>\n          <nav class=\"nav-links\">\n            <a href=\"#\">공지</a>\n            <router-link to=\"/signup\">회원가입</router-link>\n            <router-link to=\"/login\">로그인</router-link>\n          </nav>\n        </div>\n      </template>\n    </header>\n\n    <main class=\"main-content\">\n      <!-- 라우팅된 화면 표시 -->\n      <router-view></router-view>\n\n      <!-- 메인 페이지 컨텐츠 (로그인/회원가입 페이지 제외) -->\n      <div v-if=\"showPlaceholder\" class=\"placeholder\">\n        <!-- 비디오 추가 -->\n        <div class=\"background-video\">\n          <video autoplay loop muted>\n            <source src=\"@/assets/Duomate.mp4\" type=\"video/mp4\">\n            <strong>Your browser does not support the video tag.</strong>\n          </video>\n          <div class=\"overlay-text\">\n            <h1>Find your Duo Mate!</h1>\n            <p>Connect with gamers and build lasting friendships in our real-time chat platform designed for gamers!!!!\n            </p>\n            <button class=\"match-button\" @click=\"enterMatchQueue\">ENTER MATCH QUEUE</button>\n          </div>\n\n        </div>\n      </div>\n    </main>\n\n    <!-- 조건에 따라 푸터를 표시 -->\n    <footer v-if=\"showFooter\" class=\"footer\">\n      <nav class=\"footer-links\">\n        <a href=\"#\">Contact Us</a>\n        <a href=\"#\">About Us</a>\n        <a href=\"#\">Terms & Conditions</a>\n        <a href=\"#\">Privacy Policy</a>\n      </nav>\n    </footer>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      mypageopen: false,\n      isLoggedIn: false, // 로그인 상태\n      userInfo: {},\n    };\n  },\n\n\n  computed: {\n    // 로그인, 회원가입 페이지 여부 확인\n    isAuthPage() {\n      return ['/login', '/signup', '/find-password', '/find-id', '/mypage-edit', '/matchqueue', '/chatroom', '/board', '/patch-notes'].includes(this.$route.path);\n    },\n    // 헤더와 푸터 표시 여부\n    showHeader() {\n      return !this.isAuthPage;\n    },\n    showFooter() {\n      return !this.isAuthPage;\n    },\n    // 메인 페이지의 플레이스홀더 표시 여부\n    showPlaceholder() {\n      return !this.isAuthPage;\n    },\n    videoElement() {\n      return this.$refs.videoElement;\n    }\n  },\n  methods: {\n    enterMatchQueue() {\n      this.$router.push('/matchqueue');\n    },\n    playVideo() {\n      this.videoElement.play();\n    },\n    pauseVideo() {\n      this.videoElement.pause();\n    },\n    async checkLoginStatus() {\n      try {\n        const response = await fetch('http://localhost:3000/auth/check-login', {\n          method: 'GET',\n          credentials: 'include', // 쿠키 포함\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.isLoggedIn = data.loggedIn;\n          if (data.loggedIn) {\n            this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n          }\n        } else {\n          this.resetUserData();\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        this.resetUserData();\n      }\n    },\n    resetUserData() {\n      this.isLoggedIn = false;\n      this.userInfo = {}; // 사용자 정보 초기화\n    },\n    async logout() {\n      try {\n        const response = await fetch('http://localhost:3000/logout', {\n          method: 'GET',\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          this.isLoggedIn = false;\n          this.nickname = '';\n          this.$router.push('/'); // 로그아웃 후 로그인 페이지로 이동\n        }\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    },\n    async withdraw() {\n      const confirmation = confirm('정말로 회원탈퇴를 진행하시겠습니까?');\n      if (!confirmation) return;\n\n      try {\n        const response = await fetch('http://localhost:3000/withdraw', {\n          method: 'GET', // DELETE 메서드 사용 (백엔드 구현에 맞게 조정)\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          alert('회원탈퇴가 완료되었습니다.');\n          this.resetUserData();\n          this.$router.push('/'); // 기본 페이지로 이동\n        } else {\n          alert('회원탈퇴 중 오류가 발생했습니다. 다시 시도해주세요.');\n        }\n      } catch (error) {\n        console.error('Error withdrawing: ', error);\n        alert('회원탈퇴 중 오류가 발생했습니다. 다시 시도해주세요.');\n      }\n    },\n  },\n  mounted() {\n    this.checkLoginStatus(); // 컴포넌트가 마운트될 때 로그인 상태 확인\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n}\n\n#app {\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n}\n\n/* 헤더 스타일 */\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n.nav-links a,\n.nav-links router-link {\n  margin-left: 20px;\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 10px;\n}\n\n.nav-links a:hover,\n.nav-links router-link:hover {\n  text-decoration: underline;\n}\n\n/* 메인 컨텐츠 */\n.main-content {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #757575;\n}\n\n.placeholder {\n  width: 100%;\n  height: 60%;\n  background-color: #212121;\n}\n\n/* 푸터 스타일 */\n.footer {\n  background-color: #212121;\n  color: #FAFAFA;\n  padding: 90px 0;\n}\n\n.footer-links {\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n}\n\n.footer-links a {\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 16px;\n}\n\n.footer-links a:hover {\n  text-decoration: underline;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: #2a2a2a;\n  color: white;\n  width: 80%;\n  max-width: 500px;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n}\n\n.profile-image {\n  width: 100px;\n  height: 100px;\n  background-color: gray;\n  border-radius: 50%;\n  margin: 0 auto 20px;\n}\n\n.user-info-display p {\n  margin: 10px 0;\n}\n\n.edit-button {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #15513775;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.edit-button:hover {\n  background-color: #15513775;\n}\n\n.gaming-info {\n  margin-top: 20px;\n}\n\n.gaming-info h2 {\n  margin-bottom: 10px;\n}\n\n.game-stats {\n  display: flex;\n  justify-content: space-around;\n}\n\n.game-tier img,\n.most-champions img {\n  width: 50px;\n  height: 50px;\n}\n\n.champion-icons img {\n  margin: 0 5px;\n}\n\n.delete-button {\n  margin-right: 30px;\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-button:hover {\n  background-color: white;\n  color: black;\n}\n\n.close-button {\n  margin-left: 30px;\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.close-button:hover {\n  background-color: white;\n  color: black;\n}\n\n/* 비디오 스타일 */\n.background-video {\n  position: relative;\n  /* 자식 요소를 기준으로 위치 설정 가능 */\n  width: 100%;\n  height: 100%;\n}\n\n.background-video video {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  /* 비디오 크기를 화면에 맞게 조절 */\n  position: relative;\n  /* 비디오 위치 지정 */\n  z-index: 0;\n  /* 기본값으로 설정 */\n}\n\n.overlay-text {\n  position: absolute;\n  /* 비디오 위에 텍스트 겹치기 */\n  top: 30%;\n  /* 화면의 중앙 */\n  left: 50%;\n  /* 화면의 중앙 */\n  transform: translate(-50%, -50%);\n  /* 정확히 중앙 정렬 */\n  text-align: center;\n  /* 텍스트 중앙 정렬 */\n  color: white;\n  /* 텍스트 색상 */\n  z-index: 1;\n  /* 비디오보다 위에 표시 */\n}\n\n.overlay-text h1 {\n  font-size: 3rem;\n  /* 원하는 크기로 조정 */\n  margin-bottom: 10px;\n}\n\n.overlay-text p {\n  font-size: 1.5rem;\n}\n\n.match-button {\n  position: absolute;\n  flex: 1;\n  width: 200px;\n  height: 50px;\n  font-size: 16px;\n  background-color: #155137;\n  border: none;\n  color: #fff;\n  border-radius: 25px;\n  cursor: pointer;\n  text-align: center;\n  transform: translate(-50%, 140%);\n}\n\n.match-button:hover {\n  background-color: #15513775;\n}\n</style>\n","import { render } from \"./App.vue?vue&type=template&id=e22052b8&scoped=true\"\nimport script from \"./App.vue?vue&type=script&lang=js\"\nexport * from \"./App.vue?vue&type=script&lang=js\"\n\nimport \"./App.vue?vue&type=style&index=0&id=e22052b8&scoped=true&lang=css\"\n\nimport exportComponent from \"../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e22052b8\"]])\n\nexport default __exports__","<template>\n  <div id=\"app\">\n  <div class=\"signup-container\">\n    <header class=\"header\">\n      <div class=\"logo\">\n      <div class=\"circle\"></div>\n      <span>회원가입</span>\n      </div>\n      <nav>\n        <a href=\"/\">홈 화면</a>\n        <a href=\"/login\">로그인</a>\n        <a href=\"/contact\">Contact</a>\n      </nav>\n    </header>\n    <main>\n      <div class=\"form-container\">\n        <h2>계정 생성</h2>\n        <p>계정 생성에 필요한 정보를 입력해주세요. </p>\n        <form @submit.prevent=\"handleSubmit\">\n          <div class=\"form-group\">\n            <label for=\"userid\">아이디</label>\n            <input id=\"userid\" type=\"text\" placeholder=\"아이디를 입력해주세요\" v-model=\"form.userid\" @input=\"checkDuplicateUserId\" required />\n            <div :style=\"{ color: duplicateCheck.color }\">{{ duplicateCheck.message }}</div>\n          </div>\n          <div class=\"form-group password-field\">\n  <label for=\"password\">비밀번호</label>\n  <div class=\"password-container\">\n    <input\n      id=\"password\"\n      :type=\"passwordVisible ? 'text' : 'password'\"\n      placeholder=\"비밀번호를 입력해주세요\"\n      v-model=\"form.password\"\n      required\n    />\n    <img\n      :src=\"passwordVisible ? openIcon : closeIcon\"\n      alt=\"Show Password\"\n      class=\"toggle-password\"\n      @click=\"togglePasswordVisibility('password')\"\n    />\n  </div>\n</div>\n          <div class=\"form-group password-field\">\n            <label for=\"passwordcheck\">비밀번호 확인</label>\n            <div class=\"password-container\">\n              <input\n      id=\"passwordcheck\"\n      :type=\"passwordCheckVisible ? 'text' : 'password'\"\n      placeholder=\"비밀번호를 다시 입력해주세요\"\n      v-model=\"form.passwordcheck\"\n      required\n    />\n    <img\n      :src=\"passwordCheckVisible ? openIcon : closeIcon\"\n      alt=\"Show Password\"\n      class=\"toggle-password\"\n      @click=\"togglePasswordVisibility('passwordcheck')\"\n    />\n  </div>\n          </div>\n          <div class=\"form-group\">\n            <label for=\"email\">이메일</label>\n            <input id=\"email\" type=\"email\" v-model=\"form.email\" placeholder=\"이메일을 입력해주세요(비밀번호 또는 아이디 찾기에 사용)\" />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"nickname\">닉네임</label>\n            <input id=\"nickname\" type=\"text\" placeholder=\"닉네임을 입력해주세요\" v-model=\"form.nickname\" required />\n          </div>\n          <!-- <div class=\"form-group\">\n            <label for=\"birthdate\">생년월일</label>\n            <input id=\"birthdate\" type=\"date\" v-model=\"form.birthdate\" placeholder=\"생년월일을 입력해주세요\" />\n          </div> -->\n          <!-- <div class=\"form-group\">\n            <label for=\"gender\">성별</label>\n            <select id=\"gender\" v-model=\"form.gender\" require>\n              <option value=\"male\">남성</option>\n              <option value=\"female\">여성</option>\n              <option value=\"other\">기타</option>\n            </select>\n          </div> -->\n          <div class=\"button-group\">\n            <button type=\"button\" class=\"cancel-button\">Cancel</button>\n            <button type=\"submit\" class=\"signup-button\">Sign Up</button>\n          </div>\n          </form>\n          </div>\n          </main>\n      </div>\n  </div>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n      return {\n          form: {\n              userid: '',\n              password: '',\n              passwordcheck: '',\n              email: '',\n              nickname: '',\n              birthdate: '',\n              gender: 'other',\n          },\n          duplicateCheck: {\n              message: '',\n              color: '',\n          },\n          passwordVisible: false,\n          passwordCheckVisible: false,\n          openIcon: require('@/assets/open.png'), \n      closeIcon: require('@/assets/close.png'),\n      };\n  },\n  methods: {\n    togglePasswordVisibility(field) {\n      if (field === 'password') {\n      this.passwordVisible = !this.passwordVisible;\n    } else if (field === 'passwordcheck') {\n      this.passwordCheckVisible = !this.passwordCheckVisible;\n    }\n    },\n      async checkDuplicateUserId() {\n          const userid = this.form.userid;\n\n          if (!userid) {\n              this.duplicateCheck.message = '';\n              return;\n          }\n\n          try {\n              const response = await fetch('http://localhost:3000/check-duplicate', {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  credentials: 'include', // 쿠키를 포함한 요청\n                  body: JSON.stringify({ userid }),\n              });\n\n              const result = await response.json();\n              if (response.ok) {\n                  this.duplicateCheck.message = result.message;\n                  this.duplicateCheck.color = 'green';\n              } else {\n                  this.duplicateCheck.message = result.message;\n                  this.duplicateCheck.color = 'red';\n              }\n          } catch (error) {\n              console.error('Error checking duplicate:', error);\n              this.duplicateCheck.message = '중복 확인 중 오류가 발생했습니다.';\n              this.duplicateCheck.color = 'red';\n          }\n      },\n      async handleSubmit() {\n        const { userid, password, passwordcheck, nickname, email } = this.form;\n\n    if (!userid || !password || !passwordcheck || !nickname || !email) {\n        alert('모든 항목을 입력해주세요.');\n        return;\n    }\n          if (this.form.password !== this.form.passwordcheck) {\n              alert('비밀번호가 일치하지 않습니다.');\n              return;\n          }\n\n          try {\n              const response = await fetch('http://localhost:3000/signup', {\n                  method: 'POST',\n                  headers: { 'Content-Type': 'application/json' },\n                  body: JSON.stringify(this.form),\n              });\n\n              const result = await response.json();\n              if (response.ok) {\n                  alert(result.message);\n                  window.location.href = '/';\n              } else {\n                  alert(result.message);\n              }\n          } catch (error) {\n              console.error('Signup error:', error);\n              alert('회원가입 중 오류가 발생했습니다.');\n          }\n      },\n    },\n    \n};\n</script>\n\n<style scoped>\n\n/* 전체 스타일 초기화 */\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n\nhtml,body {\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100%;\n}\n\nbody {\nmargin: 0;\nfont-family: Arial, sans-serif;\nbackground-color: #212121;\n}\n#app {\n  width : 120vw;\n  height : 120vh;\n  background-color: #212121;\n}\n\n/* 전체 레이아웃 스타일 */\n.signup-container {\nfont-family: Arial, sans-serif;\nbackground-color: #212121;\ncolor: #FAFAFA;\nheight: 100vh;\ndisplay: flex;\nflex-direction: column;\nalign-items: center;\njustify-content: start;\n}\n\n/* 헤더 스타일 */\n.header {\nwidth: 100%;\npadding: 10px;\ndisplay: flex;\njustify-content: space-between;\nalign-items: center;\nbackground-color: #424242;\n}\n\n.header h1 {\nmargin: 0;\nfont-size: 16px;\n}\n\n.header nav a {\ncolor: #FAFAFA;\ntext-decoration: none;\nmargin-left: 15px;\nfont-size: 10px;\n}\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n.circle {\nwidth: 20px;\nheight: 20px;\nborder-radius: 50%;\nbackground-color: #15513775;\n}\n\n/* 폼 컨테이너 */\n.form-container {\nbackground-color: #212121;\npadding: 20px 20px;\nborder-radius: 8px;\nmax-width: 400px;\nwidth: 200vw;\n}\n\n.form-container h2 {\nfont-size: 24px;\nmargin-bottom: 10px;\n}\n\n.form-container p {\nfont-size: 14px;\nmargin-bottom: 20px;\n}\n\n/* 폼 그룹 스타일 */\n.form-group {\nmargin-bottom: 20px;\n}\n\n.form-group label {\ndisplay: block;\nfont-size: 14px;\nmargin-bottom: 5px;\n}\n\n.form-group input {\nwidth: 100%;\npadding: 10px;\nborder: none;\nborder-radius: 4px;\nfont-size: 14px;\nbackground-color: #FAFAFA;\ncolor: black;\n}\n.form-group select{\n  width: 100%;\n  height: 40px;\n  padding: 10px;\n  background-color:  #FAFAFA;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #424242;\n  border: none;\n  cursor: pointer;\n}\n\n/* 버튼 스타일 */\n.button-group {\ndisplay: flex;\ngap: 10px;\n}\n\n.cancel-button,\n.signup-button {\npadding: 10px 60px;\nborder: none;\nborder-radius: 4px;\nfont-size: 14px;\ncursor: pointer;\n}\n\n.cancel-button {\nbackground-color: #424242;\ncolor: #FAFAFA;\n}\n\n.signup-button {\nbackground-color: #15513775;\ncolor: #FAFAFA;\n}\n\n.cancel-button:hover {\nbackground-color: #727272;\n}\n\n.signup-button:hover {\nbackground-color: #15513775;\n}\n.password-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n/* 비밀번호 입력칸 */\n.password-container input {\n  width: 100%;\n  padding-right: 40px; /* 아이콘이 들어갈 공간 확보 */\n}\n\n/* 눈 모양 아이콘 */\n.toggle-password {\n  position: absolute;\n  right: 10px;\n  width: 24px; /* 추천 사이즈 */\n  height: 24px;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: opacity 0.2s;\n}\n\n.toggle-password:hover {\n  opacity: 1;\n}\n</style>","import { render } from \"./SignupForm.vue?vue&type=template&id=e6d66740&scoped=true\"\nimport script from \"./SignupForm.vue?vue&type=script&lang=js\"\nexport * from \"./SignupForm.vue?vue&type=script&lang=js\"\n\nimport \"./SignupForm.vue?vue&type=style&index=0&id=e6d66740&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e6d66740\"]])\n\nexport default __exports__","<template>\n  <div id=\"app\">\n  <div class=\"login-container\">\n    <header class=\"header\">\n      <div class=\"logo\">\n      <div class=\"circle\"></div>\n      <span>로그인</span>\n      </div>\n      <nav class=\"nav-links\">\n        <router-link to =\"/\">홈</router-link>\n        <router-link to =\"/signup\">회원가입</router-link>\n      </nav>\n    </header>\n\n    <main class=\"login-main\">\n      <div class=\"login-box\">\n        <h1 class=\"login-title\">로그인 정보를 입력해주세요</h1>\n        <form @submit.prevent=\"handleLogin\">\n          <div class=\"input-group\">\n            <input type=\"text\" v-model=\"form.userid\" placeholder=\"아이디\" required />\n          </div>\n          <div class=\"input-group\">\n            <input type=\"password\" v-model=\"form.password\" placeholder=\"비밀번호\" required />\n          </div>\n          <button type=\"submit\" class=\"login-button\">로그인</button>\n          <p class=\"error-message\" v-if=\"errorMessage\">{{ errorMessage }}</p>\n        </form>\n        <div class=\"actions-link\">\n          <a @click=\"rqid=true\">아이디 찾기</a>\n          <div class=\"modal-overlay\" v-if=\"rqid==true\">\n          <div class=\"modal-content\">\n            <h1>아이디 찾기</h1>\n            <form @submit.prevent=\"requestUserId\">\n            <div>\n                <label for=\"email\">이메일: </label>\n                <input type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"이메일을 입력하세요\" required />\n            </div>\n            <button class=\"submit-button\" type=\"submit\" :disabled=\"isButtonDisabledId\">{{ isButtonDisabledId ? `${timerId}초 후 다시 요청` : '아이디 보내기' }}</button>\n            <button class=\"cancel-button\" @click=\"rqid=false\">닫기</button>\n        </form>\n        <br /><p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n          </div>\n\n          </div>\n          <a @click=\"rqpassword=true\">비밀번호 재설정</a>\n          <div class=\"modal-overlay\" v-if=\"rqpassword==true\">\n          <div class=\"modal-content\">\n            <h1>비밀번호 재설정 요청</h1>\n        <form @submit.prevent=\"requestResetLink\">\n            <div>\n                <label for=\"email\">이메일: </label>\n                <input type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"이메일을 입력하세요\" required />\n            </div>\n            <button class=\"submit-button\" type=\"submit\" :disabled=\"isButtonDisabledPassword\">{{ isButtonDisabledPassword ? `${timerPassword}초 후 다시 요청` : '비밀번호 재설정 링크 전송' }}</button>\n            <button class=\"cancel-button\" @click=\"rqpassword=false\">닫기</button>\n        </form>\n       <br /> <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n          </div>\n          </div>        \n          </div>\n          </div>\n      </main>\n      </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n      return {\n          form: {\n              userid: '',\n              password: '',\n          },\n          errorMessage: '',\n          rqpassword: false,\n          rqid: false,\n          isButtonDisabledId: false, // 아이디 찾기 버튼 비활성화 여부\n          isButtonDisabledPassword: false, // 비밀번호 재설정 버튼 비활성화 여부\n          timerId: 0, // 아이디 찾기 타이머\n          timerPassword: 0, // 비밀번호 재설정 타이머\n      };\n  },\n  methods: {\n      async handleLogin() {\n          try {\n              const response = await fetch('http://localhost:3000/login', {\n                  method: 'POST',\n                  headers: {\n                      'Content-Type': 'application/json',\n                  },\n                  credentials: 'include', // 쿠키 포함\n                  body: JSON.stringify(this.form),\n              });\n\n              if (response.ok) {\n                  // 성공적으로 로그인하면 홈으로 이동\n                  window.location.href = '/';\n              } else {\n                  // 에러 메시지 처리\n                  const errorText = await response.json();\n                  this.errorMessage = errorText.message;\n              }\n          } catch (error) {\n              console.error('Login error:', error);\n              this.errorMessage = '로그인 중 오류가 발생했습니다. 다시 시도해주세요.';\n          }\n      },\n      async requestUserId() {\n        if (this.isButtonDisabledId) return;\n\nthis.isButtonDisabledId = true;\nthis.timerId = 180;\n\nconst countdownId = setInterval(() => {\n    this.timerId -= 1;\n    if (this.timerId <= 0) {\n        clearInterval(countdownId);\n        this.isButtonDisabledId = false;\n    }\n}, 1000);\n\ntry {\n    const response = await fetch('http://localhost:3000/request-userid', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email: this.email }),\n    });\n\n    const result = await response.json();\n\n    if (result.success) {\n        this.success = true;\n        this.message = '아이디가 이메일로 전송되었습니다.';\n    } else {\n        this.success = false;\n        this.message = result.message;\n    }\n} catch (error) {\n    console.error('Error requesting user ID:', error);\n    this.success = false;\n    this.message = '아이디 요청 중 오류가 발생했습니다.';\n}\n  },\n      async requestResetLink() {\n        if (this.isButtonDisabledPassword) return; // 버튼이 비활성화된 상태면 요청 막기\n\n          this.isButtonDisabledPassword = true; // 버튼 비활성화\n          this.timerPassword = 180; // 10초 대기 시간 설정\n\n          const countdown = setInterval(() => {\n          this.timerPassword -= 1;\n        if (this.timerPassword <= 0) {\n          clearInterval(countdown);\n          this.isButtonDisabledPassword = false; // 대기 시간 종료 시 버튼 활성화\n        }\n          }, 1000);\n            try {\n                const response = await fetch('http://localhost:3000/request-password-reset', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ email: this.email }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error requesting password reset:', error);\n                this.success = false;\n                this.message = '비밀번호 재설정 요청 중 오류가 발생했습니다.';\n            }\n        },\n  },\n};\n</script>\n\n\n\n<style scoped>\n/* 전체 스타일 초기화 */\n* {\nmargin: 0;\npadding: 0;\nbox-sizing: border-box;\n}\n\nhtml,body {\nmargin: 0;\npadding: 0;\nwidth: 100%;\nheight: 100%;\n}\n\nbody {\nmargin: 0;\nfont-family: Arial, sans-serif;\nbackground-color: #f4f4f4;\n}\n#app {\n  width : 100vw;\n  height : 100vh;\n}\n.login-container {\nheight: 100vh;\ndisplay: flex;\nwidth: 100%;\nheight: 100%;\nflex-direction: column;\nbackground-color: #212121;\ncolor: #fff;\nfont-family: 'Arial', sans-serif;\n}\n\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n.circle {\nwidth: 20px;\nheight: 20px;\nborder-radius: 50%;\nbackground-color: #15513775;\n}\n\n.nav-links a,\n.nav-links router-link {\n  gap: 10px;\n  margin-left: 20px;\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 10px;\n}\n\n.nav-links a:hover,\n.nav-links router-link:hover {\n  text-decoration: underline;\n}\n\n.login-main {\nflex: 1;\ndisplay: flex;\njustify-content: center;\nalign-items: center;\n}\n\n.login-box {\nbackground-color: #212121;\npadding: 40px;\nborder-radius: 10px;\nbox-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\nwidth: 100%;\nmax-width: 400px;\ntext-align: center;\n}\n\n.login-title {\nfont-size: 20px;\nmargin-bottom: 20px;\n}\n\n.input-group {\nmargin-bottom: 15px;\n}\n\ninput[type=\"text\"],\ninput[type=\"password\"] {\nwidth: 100%;\npadding: 10px;\nborder: none;\nborder-radius: 4px;\nfont-size: 14px;\n}\n\n.login-button {\nwidth: 40%;\npadding: 8px;\nbackground-color: #15513775;\ncolor: #fafafa;\nborder: none;\nborder-radius: 4px;\nfont-size: 16px;\ncursor: pointer;\n}\n\n.login-button:hover {\nbackground-color: #15513775;\n}\n\n.actions-link a,\n.actions-link router-link {\n  color: #fafafa;\n  text-decoration: none;\n  font-size: 12px;\n  margin: 0px 10px 0px 10px;\n}\n\n.action-link a:hover,\n.action-link router-link:hover {\ntext-decoration: underline;\n}\n.error-message{\ncolor: red;\nmargin-top: 10px;\n}\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: #2a2a2a;\n  color: white;\n  width: 80%;\n  max-width: 500px;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n}\n.modal-content h1{\n  font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n.modal-content label {\n    font-size: 14px;\n    margin-bottom: 5px;\n  }\n  \n.modal-content input {\n    padding: 8px;\n    font-size: 14px;\n    border: 1px solid #555;\n    border-radius: 4px;\n    background-color: #FFFFFF;\n    color: #fff;\n    width: 90%; /* 인풋 박스 너비를 늘림 */\n    max-width: 300px; /* 최대 너비 제한 */\n  }\n  \n.modal-content input::placeholder {\n    color: #888;\n  }\n  \n.modal-content input:focus {\n    outline: none;\n    border-color: #15513775;\n  }\n  .cancel-button {\n    flex: 1;\n    padding: 8px;\n    font-size: 14px;\n    background-color: transparent;\n    border: 1px solid #fafafa;\n    color: #fff;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 10px; /* 버튼과 위 요소 사이 간격 */\n    margin-left: 10px;\n    \n  }\n  \n.cancel-button:hover {\n    background-color: #444;\n  }\n  \n.submit-button {\n    flex: 1;\n    padding: 8px;\n    font-size: 14px;\n    background-color: #15513775;\n    border: none;\n    color: #fff;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-top: 10px; /* 버튼과 위 요소 사이 간격 */\n    margin-right: 30px;\n  }\n  \n.submit-button:hover {\n    background-color: #15513775;\n  }\n</style>","import { render } from \"./LoginForm.vue?vue&type=template&id=7e382d12&scoped=true\"\nimport script from \"./LoginForm.vue?vue&type=script&lang=js\"\nexport * from \"./LoginForm.vue?vue&type=script&lang=js\"\n\nimport \"./LoginForm.vue?vue&type=style&index=0&id=7e382d12&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-7e382d12\"]])\n\nexport default __exports__","<template>\n    <div class=\"request-password-reset\">\n        <h1>비밀번호 재설정 요청</h1>\n        <form @submit.prevent=\"requestResetLink\">\n            <div>\n                <label for=\"email\">이메일:</label>\n                <input type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"이메일을 입력하세요\" required />\n            </div>\n            <button type=\"submit\">비밀번호 재설정 링크 보내기</button>\n        </form>\n        <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            email: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async requestResetLink() {\n            try {\n                const response = await fetch('http://localhost:3000/request-password-reset', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ email: this.email }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error requesting password reset:', error);\n                this.success = false;\n                this.message = '비밀번호 재설정 요청 중 오류가 발생했습니다.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n</style>","import { render } from \"./RequestPasswordReset.vue?vue&type=template&id=2dad34e3&scoped=true\"\nimport script from \"./RequestPasswordReset.vue?vue&type=script&lang=js\"\nexport * from \"./RequestPasswordReset.vue?vue&type=script&lang=js\"\n\nimport \"./RequestPasswordReset.vue?vue&type=style&index=0&id=2dad34e3&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-2dad34e3\"]])\n\nexport default __exports__","<template>\n    <div class=\"reset-password\">\n        <h1>비밀번호 변경</h1>\n        <form @submit.prevent=\"resetPassword\">\n            <div>\n                <label for=\"newPassword\">새 비밀번호:</label>\n                <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" placeholder=\"새 비밀번호를 입력하세요\" required />\n            </div>\n            <div>\n                <label for=\"confirmPassword\">비밀번호 확인:</label>\n                <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" placeholder=\"비밀번호를 다시 입력하세요\"\n                    required />\n            </div>\n            <button type=\"submit\">비밀번호 변경</button>\n        </form>\n        <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            newPassword: '',\n            confirmPassword: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async resetPassword() {\n            const token = new URLSearchParams(window.location.search).get('token');\n            if (!token) {\n                this.success = false;\n                this.message = '유효하지 않은 요청입니다.';\n                return;\n            }\n\n            if (this.newPassword !== this.confirmPassword) {\n                this.success = false;\n                this.message = '비밀번호가 일치하지 않습니다.';\n                return;\n            }\n\n            try {\n                const response = await fetch('http://localhost:3000/reset-password', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ token, newPassword: this.newPassword }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error resetting password:', error);\n                this.success = false;\n                this.message = '비밀번호 변경 중 오류가 발생했습니다.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n</style>","import { render } from \"./ResetPassword.vue?vue&type=template&id=e29f8f3a&scoped=true\"\nimport script from \"./ResetPassword.vue?vue&type=script&lang=js\"\nexport * from \"./ResetPassword.vue?vue&type=script&lang=js\"\n\nimport \"./ResetPassword.vue?vue&type=style&index=0&id=e29f8f3a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-e29f8f3a\"]])\n\nexport default __exports__","<template>\n    <div id=\"app\">\n    <div class=\"find-password-page\">\n      <!-- 상단 헤더 -->\n      <header class=\"header\">\n        <div class=\"logo\">\n            <div class=\"circle\"></div>\n            비밀번호 찾기</div>\n        <nav class=\"nav-links\">\n          <a href=\"/\">홈 화면</a>\n          <a href=\"/login\">로그인</a>\n          <a href=\"/contact\" >Contact</a>\n        </nav>\n      </header>\n  \n      <!-- 비밀번호 찾기 섹션 -->\n      <main class=\"main-content\">\n        <h1 class=\"title\">비밀번호 재설정</h1>\n        <form class=\"form\">\n          <div class=\"form-group\">\n            <label for=\"newPassword\" class=\"form-label\">새 비밀번호</label>\n            <input\n              type=\"password\"\n              id=\"newPassword\"\n              class=\"form-input\"\n              v-model=\"newPassword\"\n              placeholder=\"새 비밀번호를 입력해주세요\"\n            />\n          </div>\n          <div class=\"form-group\">\n            <label for=\"confirmPassword\" class=\"form-label\">새 비밀번호 확인</label>\n            <input\n              type=\"password\"\n              id=\"confirmPassword\"\n              class=\"form-input\"\n              v-model=\"confirmPassword\"\n              placeholder=\"새 비밀번호를 다시 입력해주세요\"\n            />\n          </div>\n          <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n          <div class=\"button-group\">\n            <button type=\"button\" class=\"cancel-button\">취소</button>\n            <button type=\"submit\" class=\"submit-button\">확인</button>\n          </div>\n        </form>\n      </main>\n    </div>\n    </div>\n</template>\n  \n<script>\n  export default {\n    data() {\n        return {\n            newPassword: '',\n            confirmPassword: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async resetPassword() {\n            const token = new URLSearchParams(window.location.search).get('token');\n            if (!token) {\n                this.success = false;\n                this.message = '유효하지 않은 요청입니다.';\n                return;\n            }\n\n            if (this.newPassword !== this.confirmPassword) {\n                this.success = false;\n                this.message = '비밀번호가 일치하지 않습니다.';\n                return;\n            }\n\n            try {\n                const response = await fetch('http://localhost:3000/reset-password', {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ token, newPassword: this.newPassword }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error resetting password:', error);\n                this.success = false;\n                this.message = '비밀번호 변경 중 오류가 발생했습니다.';\n            }\n        },\n    },\n  };\n</script>\n  \n<style scoped>\n\n  \n /* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,body {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n}\n\n#app {\n    width : 100vw;\n  height : 100vh;\n  background-color: #212121;\n}\n/* 전체 페이지 스타일 */\n.find-password-page {\n  background-color: #212121;\n  color: #fafafa;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Arial\", sans-serif;\n  justify-content: start;\n}\n\n/* 헤더 스타일 */\n.header {\n    width: 100%;\n    display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n.nav-links a,\n.nav-links router-link {\n  margin-left: 20px;\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 10px;\n}\n\n.nav-links a:hover,\n.nav-links router-link:hover {\n  text-decoration: underline;\n}\n  /* 메인 콘텐츠 */\n.main-content {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    max-width: 400px;\n    width: 200vw;\n}\n  \n.title {\n    font-size: 24px;\n    font-weight: bold;\n    margin-bottom: 20px;\n}\n  \n  /* 폼 스타일 */\n.form {\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n  }\n  \n.form-group {\n    display: flex;\n    flex-direction: column;\n  }\n  \n.form-label {\n    font-size: 14px;\n    margin-bottom: 5px;\n  }\n  \n.form-input {\n    padding: 10px;\n    font-size: 14px;\n    border: 1px solid #555;\n    border-radius: 4px;\n    background-color: #FFFFFF;\n    color: #212121;;\n  }\n  \n.form-input::placeholder {\n    color: #888;\n  }\n  \n.form-input:focus {\n    outline: none;\n    border-color: #15513775;\n  }\n  \n  /* 버튼 그룹 */\n.button-group {\n    display: flex;\n    justify-content: space-between;\n    gap: 10px;\n  }\n  \n.cancel-button {\n    flex: 1;\n    padding: 10px;\n    font-size: 14px;\n    background-color: transparent;\n    border: 1px solid #fafafa;\n    color: #fff;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n  \n.cancel-button:hover {\n    background-color: #444;\n  }\n  \n.submit-button {\n    flex: 1;\n    padding: 10px;\n    font-size: 14px;\n    background-color: #15513775;\n    border: none;\n    color: #fff;\n    border-radius: 4px;\n    cursor: pointer;\n  }\n  \n.submit-button:hover {\n    background-color: #15513775;\n  }\n  .success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n  </style>\n","import { render } from \"./FindPassword.vue?vue&type=template&id=52acc9e6&scoped=true\"\nimport script from \"./FindPassword.vue?vue&type=script&lang=js\"\nexport * from \"./FindPassword.vue?vue&type=script&lang=js\"\n\nimport \"./FindPassword.vue?vue&type=style&index=0&id=52acc9e6&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-52acc9e6\"]])\n\nexport default __exports__","<template>\n  <div id=\"app\">\n    <div class=\"find-id-page\">\n      <!-- 상단 헤더 -->\n      <header class=\"header\">\n        <div class=\"logo\">\n          <div class=\"circle\"></div>\n          아이디 찾기\n        </div>\n        <nav class=\"nav-links\">\n          <a href=\"/\">홈 화면</a>\n          <a href=\"/login\">로그인</a>\n          <a href=\"/contact\">Contact</a>\n        </nav>\n      </header>\n\n      <!-- 비밀번호 찾기 섹션 -->\n      <main class=\"main-content\">\n        <h1 class=\"title\">아이디 찾기</h1>\n        <form class=\"form\">\n          <div class=\"form-group\">\n            <label for=\"email\" class=\"form-label\">이메일</label>\n            <input type=\"email\" id=\"email\" class=\"form-input\" placeholder=\"이메일을 입력해주세요\" />\n          </div>\n\n          <div class=\"button-group\">\n            <button type=\"button\" class=\"cancel-button\">취소</button>\n            <button type=\"submit\" class=\"submit-button\">인증메일 발송</button>\n          </div>\n        </form>\n      </main>\n    </div>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"FindId\",\n};\n</script>\n\n<style scoped>\n/* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n}\n\n#app {\n  width: 100vw;\n  height: 100vh;\n  background-color: #212121;\n}\n\n/* 전체 페이지 스타일 */\n.find-id-page {\n  background-color: #212121;\n  color: #fafafa;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  font-family: \"Arial\", sans-serif;\n  justify-content: start;\n}\n\n/* 헤더 스타일 */\n.header {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n.nav-links a,\n.nav-links router-link {\n  margin-left: 20px;\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 10px;\n}\n\n.nav-links a:hover,\n.nav-links router-link:hover {\n  text-decoration: underline;\n}\n\n/* 메인 콘텐츠 */\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  max-width: 400px;\n  width: 200vw;\n}\n\n.title {\n  font-size: 24px;\n  font-weight: bold;\n  margin-bottom: 20px;\n}\n\n/* 폼 스타일 */\n.form {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-label {\n  font-size: 14px;\n  margin-bottom: 5px;\n}\n\n.form-input {\n  padding: 10px;\n  font-size: 14px;\n  border: 1px solid #555;\n  border-radius: 4px;\n  background-color: #FFFFFF;\n  color: #fff;\n}\n\n.form-input::placeholder {\n  color: #888;\n}\n\n.form-input:focus {\n  outline: none;\n  border-color: #15513775;\n}\n\n/* 버튼 그룹 */\n.button-group {\n  display: flex;\n  justify-content: space-between;\n  gap: 10px;\n}\n\n.cancel-button {\n  flex: 1;\n  padding: 10px;\n  font-size: 14px;\n  background-color: transparent;\n  border: 1px solid #fafafa;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.cancel-button:hover {\n  background-color: #444;\n}\n\n.submit-button {\n  flex: 1;\n  padding: 10px;\n  font-size: 14px;\n  background-color: #15513775;\n  border: none;\n  color: #fff;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.submit-button:hover {\n  background-color: #15513775;\n}\n</style>","import { render } from \"./FindId.vue?vue&type=template&id=022ca50a&scoped=true\"\nimport script from \"./FindId.vue?vue&type=script&lang=js\"\nexport * from \"./FindId.vue?vue&type=script&lang=js\"\n\nimport \"./FindId.vue?vue&type=style&index=0&id=022ca50a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-022ca50a\"]])\n\nexport default __exports__","<template>\n    <div id=\"app\">\n    <div class=\"mypage-edit\">\n      <!-- Header Section -->\n      <header class=\"header\">\n        <div class=\"logo\">\n            <div class=\"circle\"></div>\n            내 정보 변경</div>\n        <nav class=\"nav-links\">\n          <a href=\"/\" class=\"nav-links\">홈</a>\n          <a href=\"#\" class=\"nav-links\">공지</a>\n          <a href=\"#\" class=\"nav-links\">게시판</a>\n        </nav>\n      </header>\n  \n      <!-- Profile Section -->\n      <section class=\"profile-section\">\n        <div class=\"profile-header\">\n          <div class=\"profile-picture\">\n            <!-- <div class=\"add-icon\" @click=\"triggerFileUpload\">+</div> -->\n            <img v-if=\"riotInfo.profileIconId\" \n                 :src=\"`https://ddragon.leagueoflegends.com/cdn/14.3.1/img/profileicon/${riotInfo.profileIconId}.png`\" \n                 alt=\"Summoner Icon\" />\n          </div>\n          <input\n            type=\"file\"\n            id=\"file-upload\"\n            accept=\"image/*\"\n            ref=\"fileInput\"\n            @change=\"handleFileChange\"\n            style=\"display: none;\"\n          />\n          <div class=\"profile-info\">\n            <h2>{{ userInfo.nickname }} 님</h2>\n          </div>\n        </div>\n      </section>\n  \n      <!-- Form Section -->\n      <section class=\"form-section\">\n        <div class=\"form-container\">\n          <h2>프로필 편집</h2>\n          <p>Update your personal information</p><br />\n          <form @submit.prevent=\"updateUserProfile\">\n            <label for=\"birthdate\">닉네임</label>\n            <input id=\"nickname\" type=\"text\" :placeholder=\"userInfo.nickname || '닉네임을 입력하세요'\" v-model=\"userInfo.nickname\" />\n            <label for=\"birthdate\">이메일</label>\n            <input type=\"email\" :placeholder=\"userInfo.email || '메일을 입력하세요'\" v-model=\"userInfo.email\" />\n            <label for=\"birthdate\">성별</label>\n            <select id=\"gender\" v-model=\"userInfo.gender\">\n            <option value=\"\" disabled>성별을 선택하세요</option>\n            <option value=\"male\">남성</option>\n            <option value=\"female\">여성</option>\n            <option value=\"other\">기타</option>\n          </select>\n          <label for=\"birthdate\">생년월일</label>\n          <input id=\"birthdate\" type=\"date\" v-model=\"userInfo.birthdate\" />\n            <!-- <input type=\"text\" placeholder=\"새 비밀번호를 입력하세요\" />\n            <input type=\"text\" placeholder=\"새 비밀번호를 다시 입력하세요\" /> -->\n            <button type=\"submit\" class=\"submit-btn\">저장</button>\n          </form>\n        </div>\n        \n      </section>\n  \n      <!-- Gaming Information Section -->\n      <section class=\"gaming-info\">\n        <h2>Gaming Information</h2>\n        <p>Your gaming details</p>\n        <br />\n        <p v-if=\"riotInfo.summonerName\">{{ summonerName }}님</p>\n        <p v-else>연동이 필요합니다.</p>\n\n        <div class=\"gaming-details\">\n          <!-- <div class=\"detail-item\">\n             <img v-if=\"riotInfo.profileIconId\" \n                 :src=\"`https://ddragon.leagueoflegends.com/cdn/14.3.1/img/profileicon/${riotInfo.profileIconId}.png`\" \n                 alt=\"Summoner Icon\" /> \n            <p>{{ summonerName || \"연동이 필요합니다\" }} 님</p>\n          </div> -->\n\n          <div class=\"detail-item\">\n            <img src=\"tier-icon.png\" alt=\"Tier Icon\" />\n            <p>Game Tier</p>\n            <h3>{{ riotInfo.summonerRank.tier || \"정보 없음\" }}</h3>\n          </div>\n\n          <div class=\"detail-item\">\n            <img src=\"level-icon.png\" alt=\"Level Icon\" />\n            <p>In-game Level</p>\n            <h3>{{ riotInfo.summonerInfo.summonerLevel || \"정보 없음\" }}</h3>\n          </div>\n        </div>\n\n        <!-- Most Played Champions -->\n        <div class=\"champions-container\">\n          <h2>Most Played Champions</h2>\n          <div class=\"champion-list\">\n            <div class=\"champion-item\" v-for=\"(champ, index) in riotInfo.top5Champions\" :key=\"index\">\n              <img :src=\"`https://ddragon.leagueoflegends.com/cdn/14.3.1/img/champion/${champ}.png`\" \n                   alt=\"Champion Image\" />\n              <p>{{ champ }}</p>\n            </div>\n          </div>\n        </div>\n\n        <br /><br /><button class=\"riot-btn\" @click=\"showRiotModal=true\">Riot 연동</button>\n      </section>\n      <!-- Riot 연동 모달 -->\n      <div v-if=\"showRiotModal==true\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h2>Riot 연동</h2>\n          <label for=\"summoner\">소환사 이름</label>\n          <input type=\"text\" v-model=\"summonerName\" placeholder=\"소환사 이름 입력\" />\n          <label for=\"tag\">태그</label>\n          <input type=\"text\" v-model=\"tag\" placeholder=\"태그 입력 (예: KR1)\" />\n          <button type=\"button\" @click=\"linkRiotAccount\">연동하기</button>\n          <button @click=\"showRiotModal=false\">닫기</button>\n        </div>\n      </div>\n  \n        </div>\n    </div>\n  </template>\n  <script>\n  export default {\n    name: 'MypageEdit',\n    data() {\n    return {\n      userInfo: {\n        nickname: '', // 닉네임 초기값\n        email: '',\n        gender: '',\n        birthdate: '',\n      },\n      riotInfo: {\n        summonerRank: {\n        tier: '',\n        rank: '',\n        },\n        summonerInfo:{\n          summonerLevel: '',\n          profileIconId: '',\n        },\n        top5Champions: [],\n      },\n      showRiotModal: false,\n      summonerName: '',\n      tag: '',\n    };\n    // if (this.userInfo.password !== this.userInfo.passwordcheck) {\n    //           alert('비밀번호가 일치하지 않습니다.');\n    //           return;\n    //       }\n  },\n  mounted() {\n    this.checkLoginStatus();\n  },\n  methods: {\n    async checkLoginStatus() {\n      try {\n        const response = await fetch('http://localhost:3000/auth/check-login', {\n          method: 'GET',\n          credentials: 'include', // 쿠키 포함\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.isLoggedIn = data.loggedIn;\n          if (data.loggedIn) {\n            this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n          }\n        } else {\n          this.resetUserData();\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        this.resetUserData();\n        }\n      },\n\n    async updateUserProfile() {\n    try {\n      const response = await fetch('http://localhost:3000/change-userprofile', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        credentials: 'include', // 쿠키를 포함한 요청\n        body: JSON.stringify({\n          nickname: this.userInfo.nickname,\n          birthdate: this.userInfo.birthdate,  \n          gender: this.userInfo.gender,\n          email: this.userInfo.email,\n        }),\n      });\n\n      if (response.ok) {\n        const result = await response.json();\n        if (result.success) {\n          alert('내 정보가 성공적으로 업데이트되었습니다.');\n        } else {\n          alert(result.message || '내 정보 변경 실패');\n        }\n      } else {\n        console.error('Error updating profile:', response.statusText);\n        alert('서버 요청에 실패했습니다.');\n      }\n    } catch (error) {\n      console.error('Error updating profile:', error);\n      alert('알 수 없는 오류가 발생했습니다.');\n    }\n  },\n  \n    \n    async linkRiotAccount() {\n      console.log(\"연동하기 버튼 클릭됨\"); // 디버깅 로그\n\n      if (!this.summonerName || !this.tag) {\n        alert(\"소환사 이름과 태그를 입력해주세요.\");\n        return;\n      }\n\n      try {\n\n        console.log(\"소환사 이름:\", this.summonerName);\n        console.log(\"태그:\", this.tag);\n\n        console.log(\"연동 요청 보냄:\", this.summonerName, this.tag);  // 요청 전 콘솔 로그 추가\n        const response = await fetch(\"http://localhost:3000/summonerInfo\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n          body: JSON.stringify({\n            summonerName: this.summonerName, \n            tag: this.tag, \n          }),\n        });\n        console.log(\"서버 응답 상태 코드:\", response.status); // 응답 상태 확인\n        const result = await response.json();\n        console.log(\"서버 응답 데이터:\", result); // 응답 데이터 확인\n\n        if (result.success) {\n          alert(\"라이엇 연동 완료\");\n          // Riot API 데이터 업데이트\n          this.riotInfo = {\n            tier: result.tier || \"정보 없음\",\n            summonerLevel: result.summonerLevel || \"정보 없음\",\n            profileIconId: result.profileIconId || '',\n            top5Champions: result.top5Champions || [],\n          };\n          this.showRiotModal = false;\n        } else {\n          alert(\"라이엇 연동 실패: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"Error linking Riot account:\", error);\n        alert(\"연동 중 오류가 발생했습니다.\");\n      }\n    },\n  }\n};\n</script>\n  \n  <style scoped>\n /* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #f4f4f4;\n}\n\n#app {\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width : 140vw;\n  height : 160vh;\n  background-color: #212121;\n}\n\n/* 헤더 스타일 */\n.header {\n    width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n.nav-links a,\n.nav-links router-link {\n  margin-left: 20px;\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 10px;\n}\n\n.nav-links a:hover,\n.nav-links router-link:hover {\n  text-decoration: underline;\n}\n  \n  /* Profile Section */\n  .profile-section {\n    display: flex;\n    align-items: center;\n    padding: 20px 0;\n    background-color: #757575;\n  }\n  .profile-header {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n  }\n  .profile-picture {\n    width: 100px;\n    height: 100px;\n    background-color: #424242;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-size: 30px;\n    color: #fff;\n    position: relative;\n    margin-left:240px;\n  }\n  .profile-picture img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n}\n  .add-icon {\n    font-size: 24px;\n    position: absolute;\n    bottom: -10px;\n    right: -10px;\n    background-color: #424242;\n    border-radius: 50%;\n    width: 30px;\n    height: 30px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n  .profile-info h2, .profile-info data {\n    margin: 0;\n    font-size: 24px;\n    color: #212121;\n  }\n  .membership {\n    font-size: 14px;\n    color: #ccc;\n  }\n  \n  /* Form Section */\n  .form-section {\n    padding: 20px;\n  }\n  .form-container {\n    background-color: #212121;\n    padding: 20px;\n    border-radius: 10px;\n    color:#FAFAFA;\n    margin: 20px 200px;\n  }\n  .form-container label{\n    color:#FAFAFA;\n    font-size:14px;\n  }\n  form {\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n    width : 100;\n    height : 100;\n  }\n  input,\nselect {\n  padding: 10px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  background-color: #FAFAFA;\n  color: #212121;\n}\nselect {\n  cursor: pointer;\n  color: #757575;\n}\n  .submit-btn {\n    background-color: #006400;\n    color: #fff;\n    border: none;\n    padding: 10px;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  \n  /* Gaming Information Section */\n  .gaming-info {\n    padding: 20px 0;\n    color: #FAFAFA;\n  }\n  .gaming-info h2, \n  .gaming-info p{\n    color: #FAFAFA;\n    margin-left:240px;\n  }\n  .gaming-details {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n    padding: 20px 0;\n    color: #FAFAFA;\n  }\n  .detail-item {\n    text-align: center;\n  }\n  .detail-item img {\n    width: 80px;\n    height: 80px;\n  }\n  .detail-item p{\n    margin:0;\n  }\n  .riot-btn {\n    background-color: #006400;\n    color: #fff;\n    border: none;\n    padding: 10px;\n    border-radius: 5px;\n    cursor: pointer;\n    width: 200px;\n    height: 40px;\n    justify-content: center;\n    margin-left: 42%;\n  }\n  \n  /* Footer */\n  footer {\n    text-align: center;\n    margin-top: 20px;\n  }\n  .logout-btn {\n    background-color: transparent;\n    border: 1px solid #fff;\n    color: #fff;\n    padding: 10px;\n    border-radius: 5px;\n    cursor: pointer;\n  }\n  /* Riot 연동 모달 스타일 */\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #212121;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  border-radius: 10px;\n  color:#FAFAFA;\n  width: 400px;\n  height: 300px;\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-content h2 {\n  margin-bottom: 10px;\n}\n\n.modal-content input {\n  margin: 5px 0;\n  padding: 8px;\n  font-size: 14px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.modal-content button {\n  margin-top: 10px;\n  padding: 8px;\n  border: none;\n  cursor: pointer;\n  background-color: #006400;\n  color:#FAFAFA;\n  border-radius: 5px;\n}\n\n/* .riot-btn {\n  background-color: #006400;\n  color: white;\n  padding: 10px;\n  border-radius: 5px;\n  width: 200px;\n  height: 40px;\n} */\n/* Most Played Champions 스타일 */\n.champions-container {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.champion-list {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n}\n\n.champion-item {\n  text-align: center;\n}\n\n.champion-item img {\n  width: 80px;\n  height: 80px;\n}\n  </style>\n  ","import { render } from \"./MypageEdit.vue?vue&type=template&id=1da15b88&scoped=true\"\nimport script from \"./MypageEdit.vue?vue&type=script&lang=js\"\nexport * from \"./MypageEdit.vue?vue&type=script&lang=js\"\n\nimport \"./MypageEdit.vue?vue&type=style&index=0&id=1da15b88&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-1da15b88\"]])\n\nexport default __exports__","<template>\n  <div>\n    <h1>게시판</h1>\n\n    <!-- 검색 필터 (게시글 작성 페이지에서는 보이지 않도록) -->\n    <div v-if=\"currentPage === 'board'\">\n      <label for=\"search\">검색:</label>\n      <input v-model=\"searchQuery\" @keyup.enter=\"filterPosts\" type=\"text\" id=\"search\" placeholder=\"검색어를 입력하세요\" />\n      \n      <!-- 검색 조건 선택 -->\n      <select v-model=\"searchType\">\n        <option value=\"title\">제목</option>\n        <option value=\"content\">내용</option>\n        <option value=\"author\">등록자명</option>\n      </select>\n\n      <button @click=\"resetSearch\">초기화</button> <!-- 초기화 버튼 추가 -->\n    </div>\n\n    <!-- 정렬 옵션 (게시글 작성 페이지에서는 보이지 않도록) -->\n    <div v-if=\"currentPage === 'board'\">\n      <label for=\"sort\">정렬:</label>\n      <select id=\"sort\" v-model=\"sortOrder\" @change=\"sortPosts\">\n        <option value=\"latest\">최신순</option>\n        <option value=\"oldest\">오래된순</option>\n        <option value=\"likes\">좋아요순</option>\n        <option value=\"views\">조회수순</option>\n      </select>\n    </div>\n\n    <!-- 게시글 작성 버튼 -->\n    <button @click=\"goToWritePage\" v-if=\"currentPage === 'board'\">게시글 작성</button>\n\n    <!-- 게시글 목록 -->\n    <div v-if=\"currentPage === 'board'\">\n      <div v-if=\"loading\">로딩 중...</div>\n      <div v-else-if=\"error\" class=\"error\">게시글을 불러오는 데 실패했습니다.</div>\n      <ul v-else-if=\"sortedPosts.length\">\n        <li v-for=\"post in sortedPosts\" :key=\"post._id\">\n          <h2 @click=\"goToDetailPage(post._id)\">{{ post.title }}</h2>\n          <p v-html=\"convertNewLinesToBreaks(post.content)\"></p>\n          <small>{{ post.author || '작성자 없음' }} - {{ formatDate(post.createdAt) }}</small>\n          <div>\n            <span>👍 {{ post.likes || 0 }}</span> | <span>👎 {{ post.dislikes || 0 }}</span>\n          </div>\n          <div>\n            조회수 : {{ post.views || 0 }}\n          </div>\n        </li>\n      </ul>\n      <div v-else>\n        게시글이 없습니다.\n      </div>\n    </div>\n\n    <!-- 게시글 작성 폼 -->\n    <div v-if=\"currentPage === 'write'\">\n      <h2>게시글 작성</h2>\n      <form @submit.prevent=\"submitPost\">\n        <div>\n          <label for=\"title\">제목</label>\n          <input v-model=\"title\" type=\"text\" id=\"title\" required />\n        </div>\n        <div>\n          <label for=\"content\">내용</label>\n          <textarea v-model=\"content\" id=\"content\" required></textarea>\n        </div>\n        <button type=\"submit\">게시글 작성</button>\n        <button type=\"button\" @click=\"goToBoardPage\">취소</button>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      posts: [], // 게시글 목록\n      filteredPosts: [], // 필터링된 게시글 목록\n      loading: true, // 로딩 상태\n      error: false, // 오류 상태\n      title: '', // 게시글 제목\n      content: '', // 게시글 내용\n      currentPage: 'board', // 현재 페이지 상태 ('board', 'write')\n      currentUser: null, // 현재 로그인한 사용자 정보\n      sortOrder: 'latest', // 정렬 기준 ('latest' or 'oldest')\n      searchQuery: '', // 검색어\n      searchType: 'title', // 검색 항목 (제목, 내용, 등록자명)\n    };\n  },\n  computed: {\n    // 검색된 게시글 목록을 기준으로 정렬된 게시글을 반환하는 계산된 속성\n    sortedPosts() {\n      return [...this.filteredPosts].sort((a, b) => {\n        if (this.sortOrder === 'latest') {\n          return new Date(b.createdAt) - new Date(a.createdAt); // 최신순\n        } else if (this.sortOrder === 'oldest') {\n          return new Date(a.createdAt) - new Date(b.createdAt); // 오래된순\n        } else if (this.sortOrder === 'likes') {\n          return (b.likes || 0) - (a.likes || 0); // 좋아요순\n        } else if (this.sortOrder === 'views') {\n          return (b.views || 0) - (a.views || 0); // 조회수순\n        }\n      });\n    }\n  },\n  created() {\n    this.initData(); // 초기 데이터 로드\n    this.checkLoginStatus(); // 로그인 상태 확인\n  },\n  methods: {\n    // 로그인 상태 확인\n    async checkLoginStatus() {\n      try {\n        const response = await axios.get('http://localhost:3000/auth/check-login', { withCredentials: true });\n        this.currentUser = response.data.user || null; // 로그인한 사용자 정보 저장\n      } catch (error) {\n        console.error('로그인 상태 확인 중 오류 발생:', error);\n        this.currentUser = null; // 로그아웃 상태\n      }\n    },\n    // 초기 데이터 로드\n    async initData() {\n      this.loading = true;\n      this.error = false;\n      try {\n        await this.fetchPosts();\n      } catch (error) {\n        console.error('초기 데이터를 가져오는 중 오류 발생:', error);\n        this.error = true;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    // 게시글 목록 가져오기\n    async fetchPosts() {\n      try {\n        const response = await axios.get('http://localhost:3000/api/board', { withCredentials: true });\n        this.posts = response.data;\n        this.filteredPosts = [...this.posts]; // 처음에는 모든 게시글을 필터링된 게시글로 설정\n      } catch (error) {\n        console.error('게시글을 가져오는 중 오류 발생:', error);\n        this.error = true;\n      }\n    },\n\n    // 게시글을 검색어로 필터링\n    filterPosts() {\n      if (this.searchQuery.trim()) {\n        if (this.searchType === 'title') {\n          this.filteredPosts = this.posts.filter(post =>\n            post.title.toLowerCase().includes(this.searchQuery.toLowerCase())\n          );\n        } else if (this.searchType === 'content') {\n          this.filteredPosts = this.posts.filter(post =>\n            post.content.toLowerCase().includes(this.searchQuery.toLowerCase())\n          );\n        } else if (this.searchType === 'author') {\n          this.filteredPosts = this.posts.filter(post =>\n            post.author.toLowerCase().includes(this.searchQuery.toLowerCase())\n          );\n        }\n      } else {\n        this.filteredPosts = [...this.posts]; // 검색어가 없으면 모든 게시글을 표시\n      }\n    },\n\n    // 게시글 작성 요청\n    async submitPost() {\n      try {\n        await axios.post('http://localhost:3000/api/board', { title: this.title, content: this.content }, { withCredentials: true });\n        this.goToBoardPage();\n        this.initData();\n      } catch (error) {\n        console.error('게시글 작성 중 오류 발생:', error);\n      }\n    },\n\n    // 페이지 이동 핸들러\n    goToBoardPage() {\n      this.currentPage = 'board';\n      this.title = '';\n      this.content = '';\n    },\n    goToWritePage() {\n      if (!this.currentUser) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n      this.currentPage = 'write';\n    },\n    goToDetailPage(postId) {\n      this.$router.push({ name: 'BoardDetail', params: { id: postId } });\n    },\n\n    // 날짜 형식 변경\n    formatDate(dateString) {\n      return new Date(dateString).toLocaleDateString(undefined, {\n        year: 'numeric',\n        month: 'short',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit'\n      });\n    },\n\n    // 초기화 버튼 클릭 시 검색어와 게시글 필터링 초기화\n    resetSearch() {\n      this.searchQuery = ''; // 검색어 초기화\n      this.filteredPosts = [...this.posts]; // 모든 게시글 다시 표시\n    },\n    convertNewLinesToBreaks(text) {\n      return text.replace(/\\n/g, '<br>');\n    },\n  }\n};\n</script>\n\n<style scoped>\n.error {\n  color: red;\n}\nbutton {\n  margin: 5px;\n}\n</style>","import { render } from \"./BoardForm.vue?vue&type=template&id=6e4f7448&scoped=true\"\nimport script from \"./BoardForm.vue?vue&type=script&lang=js\"\nexport * from \"./BoardForm.vue?vue&type=script&lang=js\"\n\nimport \"./BoardForm.vue?vue&type=style&index=0&id=6e4f7448&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-6e4f7448\"]])\n\nexport default __exports__","<template>\n  <div>\n    <!-- 게시글이 로드되었을 때만 렌더링 -->\n    <div v-if=\"post\">\n      <!-- 게시글 수정 모드 -->\n      <div v-if=\"isEditing\">\n        <h1>게시글 수정</h1>\n        <form @submit.prevent=\"updatePost\">\n          <div>\n            <label for=\"title\">제목</label>\n            <input v-model=\"editedTitle\" id=\"title\" type=\"text\" required />\n          </div>\n          <div>\n            <label for=\"content\">내용</label>\n            <textarea v-model=\"editedContent\" id=\"content\" required></textarea>\n          </div>\n          <button type=\"submit\">수정 완료</button>\n          <button type=\"button\" @click=\"cancelEdit\">취소</button>\n        </form>\n      </div>\n\n      <!-- 게시글 보기 모드 -->\n      <div v-else>\n        <h1>{{ post.title }}</h1>\n        <p v-html=\"convertNewLinesToBreaks(post.content)\"></p>\n        <small>작성자: {{ post.author || '작성자 없음' }}</small>\n        <br />\n        <small>작성 시간: {{ formatDate(post.createdAt) }}</small>\n        <br />\n        <small>조회수 : {{ post.views || 0 }}</small> <!-- 조회수 추가 -->\n\n        <!-- 좋아요/싫어요 버튼 -->\n        <div>\n          <button @click=\"likePost\">좋아요 ({{ post.likes }})</button>\n          <button @click=\"dislikePost\">싫어요 ({{ post.dislikes }})</button>\n        </div>\n\n        <!-- 게시글 수정/삭제 버튼 -->\n        <div v-if=\"isAuthor\">\n          <button @click=\"enterEditMode\">수정</button>\n          <button @click=\"deletePost\">삭제</button>\n        </div>\n      </div>\n\n      <!-- 댓글 정렬 옵션 -->\n      <div v-if=\"comments.length > 0\">\n        <h3>댓글 ({{ comments.length }})</h3>\n        <div>\n          <label for=\"comment-sort\">정렬 기준:</label>\n          <select id=\"comment-sort\" v-model=\"sortOrder\" @change=\"sortComments\">\n            <option value=\"latest\">최신순</option>\n            <option value=\"oldest\">오래된순</option>\n            <option value=\"likes\">좋아요순</option>\n          </select>\n        </div>\n\n        <!-- 댓글 리스트 -->\n        <ul>\n          <li v-for=\"comment in sortedComments\" :key=\"comment._id\" class=\"comment-item\">\n            <div class=\"comment-header\">\n              <strong>{{ comment.nickname }}</strong>\n              <small>{{ formatDate(comment.createdAt) }}</small>\n\n              <!-- 댓글 수정/삭제 버튼 -->\n              <div v-if=\"currentUser?.userid === comment.userId\" class=\"comment-actions\">\n                <button @click=\"startEditingComment(comment._id, comment.content)\">댓글 수정</button>\n                <button @click=\"deleteComment(comment._id)\">댓글 삭제</button>\n              </div>\n            </div>\n\n            <!-- 댓글 수정 모드 -->\n            <div v-if=\"editingCommentId === comment._id\">\n              <textarea v-model=\"editingContent\"></textarea>\n              <button @click=\"saveEditedComment(comment._id)\">저장</button>\n              <button @click=\"cancelEditing\">취소</button>\n            </div>\n\n            <!-- 댓글 내용 -->\n            <div v-else>\n              <p v-html=\"convertNewLinesToBreaks(comment.content)\"></p>\n            </div>\n            <!-- 댓글 좋아요/싫어요 버튼 -->\n            <div>\n              <button @click=\"likeComment(comment._id)\">좋아요 ({{ comment.likes || 0 }})</button>\n              <button @click=\"dislikeComment(comment._id)\">싫어요 ({{ comment.dislikes || 0 }})</button>\n            </div>\n          </li>\n        </ul>\n      </div>\n\n      <!-- 댓글 작성 -->\n      <div v-if=\"currentUser\">\n        <textarea v-model=\"newComment\" placeholder=\"댓글을 입력하세요\"></textarea>\n        <button @click=\"submitComment\">댓글 작성</button>\n      </div>\n    </div>\n\n    <!-- 로딩 중 -->\n    <div v-else-if=\"loading\">\n      <h2>로딩 중...</h2>\n    </div>\n\n    <!-- 에러 상태 -->\n    <div v-else>\n      <h2>게시글을 불러오지 못했습니다.</h2>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['id'], // 게시글 ID를 props로 전달받음\n  data() {\n    return {\n      post: null, // 게시글 데이터\n      currentUser: null, // 현재 로그인한 사용자 정보\n      loading: true, // 로딩 상태\n      isEditing: false, // 게시글 수정 모드 여부\n      editedTitle: '', // 수정 중인 제목\n      editedContent: '', // 수정 중인 내용\n      comments: [], // 댓글 리스트\n      newComment: '', // 새 댓글 내용\n      editingCommentId: null, // 수정 중인 댓글의 ID\n      editingContent: '', // 수정 중인 댓글의 내용\n      sortOrder: 'latest', // 댓글 정렬 기준\n    };\n  },\n  computed: {\n    isAuthor() {\n      return this.currentUser?.nickname === this.post?.author;\n    },\n    sortedComments() {\n      return [...this.comments].sort((a, b) => {\n        if (this.sortOrder === 'latest') {\n          return new Date(b.createdAt) - new Date(a.createdAt); // 최신순\n        } else if (this.sortOrder === 'oldest') {\n          return new Date(a.createdAt) - new Date(b.createdAt); // 오래된순\n        } else if (this.sortOrder === 'likes') {\n          return (b.likes || 0) - (a.likes || 0); // 좋아요순\n        }\n      });\n    },\n  },\n  methods: {\n    async loadData() {\n      this.loading = true;\n      try {\n        await Promise.all([this.fetchPost(), this.fetchComments(), this.fetchCurrentUser()]);\n      } catch (error) {\n        console.error('데이터를 가져오는 중 오류 발생:', error);\n      } finally {\n        this.loading = false;\n      }\n    },\n    async fetchPost() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/board/${this.id}`, { withCredentials: true });\n        this.post = response.data;\n        this.editedTitle = this.post.title;\n        this.editedContent = this.post.content;\n      } catch (error) {\n        console.error('게시글을 가져오는 중 오류 발생:', error);\n        this.post = null;\n      }\n    },\n    async fetchComments() {\n      try {\n        const response = await axios.get(`http://localhost:3000/api/board/${this.id}/comments`, { withCredentials: true });\n        this.comments = response.data;\n      } catch (error) {\n        console.error('댓글을 가져오는 중 오류 발생:', error);\n      }\n    },\n    async fetchCurrentUser() {\n      try {\n        const response = await axios.get('http://localhost:3000/auth/check-login', { withCredentials: true });\n        if (response.data.loggedIn) {\n          this.currentUser = response.data.user;\n        }\n      } catch (error) {\n        console.error('현재 사용자 정보를 가져오는 데 실패했습니다:', error);\n        this.currentUser = null;\n      }\n    },\n    formatDate(dateString) {\n      const date = new Date(dateString);\n      return date.toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric',\n        hour: '2-digit',\n        minute: '2-digit',\n      });\n    },\n    // 게시글 수정 관련 메서드\n    enterEditMode() {\n      this.isEditing = true;\n    },\n    cancelEdit() {\n      this.isEditing = false;\n      this.editedTitle = this.post.title;\n      this.editedContent = this.post.content;\n    },\n    async updatePost() {\n      try {\n        const updatedData = {\n          title: this.editedTitle,\n          content: this.editedContent,\n        };\n        await axios.put(`http://localhost:3000/api/board/${this.id}`, updatedData, { withCredentials: true });\n        this.post.title = this.editedTitle;\n        this.post.content = this.editedContent;\n        this.isEditing = false;\n        alert('게시글이 수정되었습니다.');\n      } catch (error) {\n        console.error('게시글 수정 중 오류 발생:', error);\n        alert('게시글 수정에 실패했습니다.');\n      }\n    },\n    async deletePost() {\n      try {\n        await axios.delete(`http://localhost:3000/api/board/${this.id}`, { withCredentials: true });\n        alert('게시글이 삭제되었습니다.'); // 성공 메시지\n        this.$router.push('/board');\n      } catch (error) {\n        console.error('게시글 삭제 중 오류 발생:', error);\n      }\n    },\n    async likePost() {\n      if (!this.currentUser) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n      try {\n        const response = await axios.put(\n          `http://localhost:3000/api/board/${this.id}/like`,\n          { action: 'like' },\n          { withCredentials: true }\n        );\n        this.post.likes = response.data.likes;\n        this.post.dislikes = response.data.dislikes;\n      } catch (error) {\n        console.error('좋아요 처리 중 오류 발생:', error);\n        alert('좋아요 처리에 실패했습니다.');\n      }\n    },\n    async dislikePost() {\n      if (!this.currentUser) {\n        alert('로그인이 필요합니다.');\n        return;\n      }\n      try {\n        const response = await axios.put(\n            `http://localhost:3000/api/board/${this.id}/like`,\n            { action: 'dislike' },\n            { withCredentials: true }\n        );\n        this.post.likes = response.data.likes;\n        this.post.dislikes = response.data.dislikes;\n      } catch (error) {\n        console.error('싫어요 처리 중 오류 발생:', error);\n        alert('싫어요 처리에 실패했습니다.');\n      }\n    },\n    // 댓글 수정 관련 메서드\n    startEditingComment(commentId, content) {\n      this.editingCommentId = commentId;\n      this.editingContent = content;\n    },\n    cancelEditing() {\n      this.editingCommentId = null;\n      this.editingContent = '';\n    },\n    async saveEditedComment(commentId) {\n      if (!this.editingContent.trim()) {\n        alert('수정할 내용을 입력해주세요.');\n        return;\n      }\n\n      try {\n        await axios.put(\n          `http://localhost:3000/api/board/comments/${commentId}`,\n          { content: this.editingContent },\n          { withCredentials: true }\n        );\n        const comment = this.comments.find((c) => c._id === commentId);\n        if (comment) {\n          comment.content = this.editingContent;\n        }\n        this.cancelEditing();\n        alert('댓글이 수정되었습니다.');\n      } catch (error) {\n        console.error('댓글 수정 중 오류 발생:', error);\n        alert('댓글 수정에 실패했습니다.');\n      }\n    },\n    async deleteComment(commentId) {\n      try {\n        await axios.delete(`http://localhost:3000/api/board/comments/${commentId}`, { withCredentials: true });\n        this.comments = this.comments.filter((comment) => comment._id !== commentId);\n        alert('댓글이 삭제되었습니다.'); // 메시지 추가\n      } catch (error) {\n        console.error('댓글 삭제 중 오류 발생:', error);\n        alert('댓글 삭제에 실패했습니다.');\n      }\n    },\n    async submitComment() {\n      if (!this.newComment.trim()) {\n        alert('댓글 내용을 입력해주세요.');\n        return;\n      }\n\n      try {\n        const response = await axios.post(\n          `http://localhost:3000/api/board/${this.id}/comments`,\n          { content: this.newComment },\n          { withCredentials: true }\n        );\n        this.comments.push(response.data);\n        this.newComment = '';\n      } catch (error) {\n        console.error('댓글 작성 중 오류 발생:', error);\n        alert('댓글 작성에 실패했습니다.');\n      }\n    },\n    async likeComment(commentId) {\n      if (!this.currentUser) {\n        // 로그인이 안 된 상태\n        alert('로그인이 필요합니다.');\n        return;\n      }\n      try {\n        await axios.put(\n          `http://localhost:3000/api/board/comments/${commentId}/like`,\n          { action: 'like' },\n          { withCredentials: true }\n        );\n        await this.fetchComments(); // 댓글 데이터 새로고침\n      } catch (error) {\n        console.error('댓글 좋아요 처리 중 오류 발생:', error);\n      }\n    },\n    async dislikeComment(commentId) {\n      if (!this.currentUser) {\n        // 로그인이 안 된 상태\n        alert('로그인이 필요합니다.');\n        return;\n      }\n      try {\n        await axios.put(\n          `http://localhost:3000/api/board/comments/${commentId}/like`,\n          { action: 'dislike' },\n          { withCredentials: true }\n        );\n        await this.fetchComments(); // 댓글 데이터 새로고침\n      } catch (error) {\n        console.error('댓글 싫어요 처리 중 오류 발생:', error);\n      }\n    },\n    sortComments() {\n      console.log(`정렬 기준이 ${this.sortOrder}로 변경되었습니다.`);\n    },\n    \n    async incrementViews() {\n      try {\n        const response = await axios.post(`http://localhost:3000/api/board/${this.id}/views`, {}, { withCredentials: true });\n        if (response.status === 200) {\n          // 서버에서 조회수 증가가 성공하면 클라이언트 데이터 업데이트\n          this.post.views += 1;\n        }\n      } catch (error) {\n        console.error('조회수 증가 요청 중 오류 발생:', error);\n      }\n    },\n    convertNewLinesToBreaks(text) {\n      return text.replace(/\\n/g, '<br>');\n    },\n  },\n  created() {\n    this.loadData().then(() => {\n      this.incrementViews();\n    });\n  },\n};\n</script>\n\n<style>\n.comment-item {\n  margin-bottom: 15px;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n}\n.comment-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n</style>","import { render } from \"./BoardDetail.vue?vue&type=template&id=6f6b4a86\"\nimport script from \"./BoardDetail.vue?vue&type=script&lang=js\"\nexport * from \"./BoardDetail.vue?vue&type=script&lang=js\"\n\nimport \"./BoardDetail.vue?vue&type=style&index=0&id=6f6b4a86&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n  <div class=\"contents\">  <!-- 전체 콘텐츠 컨테이너 -->\n      <section class=\"contents-header\">\n          <div class=\"header-right\">\n              <div class=\"search-box\">\n                  <input v-model=\"searchQuery\" type=\"text\" placeholder=\"검색\" class=\"search-input\">\n                  <span class=\"search-icon\">🔍</span>\n              </div>\n          </div>\n      </section>\n\n      <section class=\"patch-list\">\n          <div v-if=\"patchNotes.length === 0\">\n              <p>패치 노트를 불러오는 중...</p>\n          </div>\n          <div class=\"patch-item\" v-for=\"(patch, index) in filteredPatchNotes\" :key=\"index\">\n              <img src=\"@/assets/icon_lol.png\" alt=\"패치 아이콘\" class=\"patch-icon\" />\n              <div class=\"patch-info\">\n                  <a :href=\"patch.link\" target=\"_blank\" class=\"patch-title\">{{ patch.title }}</a>\n                  <p class=\"patch-date\">{{ patch.date }}</p>\n              </div>\n          </div>\n      </section>\n\n      <button v-if=\"canLoadMore\" @click=\"loadMore\">더보기</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  data() {\n      return {\n          patchNotes: [],\n          skip: 0,\n          limit: 12,\n          canLoadMore: true,\n          searchQuery: '',\n      };\n  },\n  computed: {\n      filteredPatchNotes() {\n          return this.patchNotes.filter(patch =>\n              patch.title.toLowerCase().includes(this.searchQuery.toLowerCase())\n          );\n      }\n  },\n  mounted() {\n      this.fetchPatchNotes();\n  },\n  methods: {\n      async fetchPatchNotes() {\n          try {\n              const response = await fetch(`http://localhost:3000/api/patch-notes/patch-notes?skip=${this.skip}&limit=${this.limit}`, {\n                  method: 'GET',\n                  credentials: 'include',\n              });\n\n              if (response.ok) {\n                  const data = await response.json();\n                  this.patchNotes = data;\n              } else {\n                  console.error('Error fetching patch notes');\n              }\n          } catch (error) {\n              console.error('Error fetching patch notes:', error);\n          }\n      },\n      async loadMore() {\n          try {\n              const response = await fetch(`http://localhost:3000/api/patch-notes/patch-notes?skip=${this.skip}&limit=${this.limit}`, {\n                  method: 'GET',\n                  credentials: 'include',\n              });\n\n              if (response.ok) {\n                  const data = await response.json();\n                  this.patchNotes = [...this.patchNotes, ...data];\n                  if (data.length < this.limit) {\n                      this.canLoadMore = false;\n                  }\n                  this.skip += this.limit;\n              } else {\n                  console.error('Error fetching patch notes');\n              }\n          } catch (error) {\n              console.error('Error fetching patch notes:', error);\n          }\n      },\n      sortBy(type) {\n          if (type === 'latest') {\n              this.patchNotes.sort((a, b) => new Date(b.date) - new Date(a.date));\n          } else if (type === 'popular') {\n              // 인기순 정렬 (예: 좋아요 개수 기준, 데이터 형식에 맞게 수정 필요)\n          }\n      }\n  }\n};\n</script>\n\n<style scoped>\n.contents {\n  width: 100%;\n  max-width: 1260px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n  padding: 20px 50px;\n  border-radius: 0.5rem;\n}\n\n.contents-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #424242;\n  padding: 15px;\n  border-radius: 10px;\n}\n\n.header-left, .header-right {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.filter-button {\n  background-color: #333;\n  color: white;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.search-box {\n  display: flex;\n  align-items: center;\n  background-color: black;\n  border-radius: 20px;\n  padding: 5px 10px;\n}\n\n.search-input {\n  background: none;\n  border: none;\n  color: white;\n  outline: none;\n}\n\n.patch-list {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.patch-item {\n  display: flex;\n  align-items: center;\n  background-color: #333;\n  padding: 15px;\n  border-radius: 8px;\n  gap: 15px;\n}\n\n.patch-icon {\n  width: 40px;\n  height: 40px;\n}\n\n.patch-info {\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  color: white;\n}\n\n.patch-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: white;\n  text-decoration: none;\n}\n\n.patch-title:hover {\n  text-decoration: underline;\n}\n\n.patch-date {\n  font-size: 14px;\n  color: gray;\n}\n\nbutton {\n  background-color: #008cba;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  cursor: pointer;\n  margin-top: 20px;\n  border-radius: 5px;\n}\n\nbutton:hover {\n  background-color: #0077a3;\n}\n</style>\n","import { render } from \"./patchNotesDisplay.vue?vue&type=template&id=263432c9&scoped=true\"\nimport script from \"./patchNotesDisplay.vue?vue&type=script&lang=js\"\nexport * from \"./patchNotesDisplay.vue?vue&type=script&lang=js\"\n\nimport \"./patchNotesDisplay.vue?vue&type=style&index=0&id=263432c9&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-263432c9\"]])\n\nexport default __exports__","<template>\n    <div class=\"match-queue\">\n        <div class=\"match-container\">\n            <!-- ✅ 프로필 & 티어 정보 & 전적 갱신 버튼을 한 줄로 배치 -->\n            <div class=\"profile-rank-container\">\n                <!-- 프로필 -->\n                <div class=\"profile-section\">\n                    <div class=\"profile-picture\">\n                        <!-- 🔹 소환사 아이콘 추가 -->\n                        <img :src=\"`http://ddragon.leagueoflegends.com/cdn/14.22.1/img/profileicon/${userInfo.summonerInfo?.profileIconId}.png`\" alt=\"소환사 아이콘\" class=\"summoner-icon\" />\n                    </div>\n                    <span>안녕하세요, {{ userInfo.nickname }}님!</span>\n                    <!-- 티어 정보 & 전적 갱신 버튼 -->\n                <div class=\"user-rank-container\">\n                    <div class=\"rank-info\">\n                        <img :src=\"`https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/${userInfo.summonerRank?.tier.toLowerCase()}.png`\" alt=\"티어 아이콘\" class=\"rank-icon\" />\n                        <span class=\"rank-text\">{{ userInfo.summonerRank?.tier }}</span>\n                    </div>\n                    <button class=\"refresh-button\" @click=\"fetchLatestMatchData\">전적 갱신</button>\n                </div>\n                </div>\n    \n                \n            </div>\n    \n                <!-- 포지션 선택 -->\n                <div class=\"selection-section\">\n                    <h2>포지션 (중복 2개 가능)</h2>\n                    <div class=\"position-options\">\n                        <div v-for=\"pos in positions\" :key=\"pos.value\"\n                            :class=\"{ selected: selectedPositions.includes(pos.value) }\" @click=\"togglePosition(pos.value)\">\n                            <img :src=\"pos.icon\" :alt=\"pos.label\" />\n                            <span>{{ pos.label }}</span>\n                        </div>\n                    </div>\n                </div>\n    \n                <!-- 음성 채팅 사용 여부 -->\n                <div class=\"selection-section\">\n                    <h2>음성 채팅 사용 여부</h2>\n                    <div class=\"voice-options\">\n                        <div v-for=\"voice in voiceOptions\" :key=\"voice.value\"\n                            :class=\"{ active: microphone === voice.value }\" @click=\"microphone = voice.value\">\n                            <img :src=\"voice.icon\" :alt=\"voice.label\" />\n                            <span>{{ voice.label }}</span>\n                        </div>\n                    </div>\n                </div>\n    \n                <!-- 일반/랭크 선택 -->\n                <div class=\"selection-section\">\n                    <h2>일반 / 랭크</h2>\n                    <div class=\"game-mode-options\">\n                        <div v-for=\"mode in gameModes\" :key=\"mode.value\" :class=\"{ active: matchType === mode.value }\"\n                            @click=\"matchType = mode.value\">\n                            <img :src=\"mode.icon\" :alt=\"mode.label\" />\n                            <span>{{ mode.label }}</span>\n                        </div>\n                    </div>\n                </div>\n    \n                <!-- 매칭 버튼 -->\n                <button @click=\"startMatching\" :disabled=\"isMatching\" class=\"match-button\">매칭 시작</button>\n            </div>\n    \n            <!-- ✅ 매칭 완료 화면 -->\n            <div class=\"match-confirmation\" v-if=\"matchFound\">\n    <div class=\"match-info\">\n        <p class=\"match-text\">매칭 완료!!</p>\n    </div>\n    <div class=\"match-buttons\">\n        <button class=\"reject-button\" @click=\"rejectMatch\">거절</button>\n        <button class=\"accept-button\" @click=\"acceptMatch\">수락</button>\n    </div>\n</div>\n    \n            <!-- ✅ 기존 매칭 중 UI 유지 -->\n            <div class=\"popup-overlay\" v-if=\"isMatching && !matchFound\">\n                <div class=\"popup-content\">\n                    <img src=\"/icons/loading.png\" alt=\"Loading\" class=\"loading-icon\" />\n                    <p class=\"waiting-time\">{{ formattedTime }}</p>\n                    <p>상대를 찾고 있습니다. 잠시만 기다려 주세요.</p>\n                    <button @click=\"cancelMatching\">취소</button>\n                </div>\n            </div>\n        </div>\n    </template>\n\n<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n    data() {\n        return {\n            socket: null,\n            isLoggedIn: false,\n            userInfo: {},\n            selectedPositions: [],\n            microphone: \"미사용\",\n            matchType: \"일반\",\n            isMatching: false,\n            matchFound: false,\n            matchId: null,\n            waitingTime: 0,\n            timer: null,\n\n            positionIconSize: 40,\n            voiceIconWidth: 50,\n            voiceIconHeight: 80,\n            gameModeIconSize: 120,\n\n            positions: [\n                { label: \"탑\", value: \"탑\", icon: \"/icons/top.png\" },\n                { label: \"정글\", value: \"정글\", icon: \"/icons/jungle.png\" },\n                { label: \"미드\", value: \"미드\", icon: \"/icons/mid.png\" },\n                { label: \"원딜\", value: \"원딜\", icon: \"/icons/adc.png\" },\n                { label: \"서포터\", value: \"서포터\", icon: \"/icons/support.png\" },\n                { label: \"없음\", value: \"없음\", icon: \"/icons/none.png\" },\n            ],\n\n            voiceOptions: [\n                { label: \"사용\", value: \"사용\", icon: \"/icons/mic-on.png\" },\n                { label: \"미사용\", value: \"미사용\", icon: \"/icons/mic-off.png\" }\n            ],\n\n            gameModes: [\n                { label: \"일반\", value: \"일반\", icon: \"/icons/normal.png\" },\n                { label: \"랭크\", value: \"랭크\", icon: \"/icons/rank.png\" }\n            ]\n        };\n    },\n\n\n    async mounted() {\n        await this.checkLoginStatus(); // 로그인 상태 확인\n        this.initializeSocket();\n    },\n\n    methods: {\n        async checkLoginStatus() {\n            try {\n                const response = await fetch('http://localhost:3000/auth/check-login', {\n                    method: 'GET',\n                    credentials: 'include', // 쿠키 포함\n                });\n\n                if (response.ok) {\n                    const data = await response.json();\n                    this.isLoggedIn = data.loggedIn;\n                    if (data.loggedIn) {\n                        this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n                        console.log(\"📢 userInfo:\", this.userInfo);\n                    } else {\n                        this.handleUnauthenticatedUser();\n                    }\n                } else {\n                    this.handleUnauthenticatedUser();\n                }\n            } catch (error) {\n                console.error('❌ 로그인 상태 확인 오류:', error);\n                this.handleUnauthenticatedUser();\n            }\n        },\n\n        handleUnauthenticatedUser() {\n            this.isLoggedIn = false;\n            this.userInfo = {}; // 사용자 정보 초기화\n            alert(\"로그인이 필요합니다. 메인 화면으로 이동합니다.\");\n            this.$router.push(\"/\"); // 메인 화면으로 이동\n        },\n\n        resetUserData() {\n            this.isLoggedIn = false;\n            this.userInfo = {}; // 사용자 정보 초기화\n        },\n\n        initializeSocket() {\n            this.socket = io(\"http://localhost:3000\", { withCredentials: true });\n\n            this.socket.on(\"disconnect\", () => {\n                console.log(\"❌ 서버 연결 해제됨. 대기열에서 제거\");\n                this.isMatching = false;\n                this.matchFound = false;\n                if (this.timer) {\n                    clearInterval(this.timer);\n                }\n            });\n\n            this.socket.on(\"matchSuccess\", (data) => {\n                console.log(\"🔹 서버에서 받은 matchSuccess 데이터:\", data);\n                this.matchId = data.matchId;\n                this.matchFound = true;\n            });\n\n            this.socket.on(\"matchRejected\", (data) => {\n                console.log(\"❌ 매칭 취소됨:\", data.message);\n                this.matchFound = false;\n                this.isMatching = false;\n                if (this.timer) {\n                    clearInterval(this.timer);\n                }\n                alert(\"⚠️ 상대방이 매칭을 거부했습니다. 다시 시도해주세요!\");\n            });\n\n            this.socket.on(\"matchCancelled\", (data) => {\n                console.log(\"❌ 매칭 취소됨:\", data.message);\n                this.matchFound = false;\n                this.isMatching = false;\n                if (this.timer) {\n                    clearInterval(this.timer);\n                }\n            });\n\n            this.socket.on(\"matchConfirmed\", async (data) => {\n                try {\n                    const response = await fetch(`http://localhost:3000/match/save`, {\n                        method: \"POST\",\n                        headers: { \"Content-Type\": \"application/json\" },\n                        credentials: \"include\",\n                        body: JSON.stringify({\n                            matchId: data.matchId\n                        }),\n                    });\n\n                    const result = await response.json();\n                    if (result.success) {\n                        console.log(\"✅ 매칭 저장 성공\");\n                        this.$router.push(`/chatroom?matchId=${data.matchId}`);\n                    }\n                } catch (error) {\n                    console.error(\"❌ 매칭 저장 오류:\", error);\n                }\n            });\n        },\n\n        togglePosition(position) {\n            if (this.selectedPositions.includes(position)) {\n                this.selectedPositions = this.selectedPositions.filter(p => p !== position);\n            } else if (this.selectedPositions.length < 2) {\n                this.selectedPositions.push(position);\n            }\n        },\n\n        startMatching() {\n            this.isMatching = true;\n            this.waitingTime = 0;\n\n            this.timer = setInterval(() => {\n                this.waitingTime++;\n            }, 1000);\n\n            this.socket.emit(\n                this.matchType === \"일반\" ? \"request normalmatch\" : \"request rankmatch\",\n                {\n                    position: this.selectedPositions,\n                    microphone: this.microphone\n                }\n            );\n        },\n\n        acceptMatch() {\n            if (this.matchId) {\n                this.socket.emit(\"acceptMatch\", { matchId: this.matchId });\n            }\n            if (this.timer) {\n                clearInterval(this.timer);\n            }\n            this.isMatching = false;\n            this.matchFound = false;\n        },\n\n        rejectMatch() {\n            if (this.matchId) {\n                this.socket.emit(\"rejectMatch\", { matchId: this.matchId });\n            }\n            if (this.timer) {\n                clearInterval(this.timer);\n            }\n            this.isMatching = false;\n            this.matchFound = false;\n        },\n\n        cancelMatching() {\n            if (this.timer) {\n                clearInterval(this.timer);\n            }\n            this.isMatching = false;\n            this.socket.emit(\"cancel match\");\n\n        }\n    },\n\n    computed: {\n        formattedTime() {\n            const minutes = Math.floor(this.waitingTime / 60);\n            const seconds = this.waitingTime % 60;\n            return `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;\n        }\n    },\n\n    beforeUnmount() {\n        if (this.timer) {\n            clearInterval(this.timer);\n        }\n        if (this.socket) {\n            this.socket.disconnect();\n        }\n    }\n};\n</script>\n\n<style scoped>\n.match-queue {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 300vw;\n    background-color: #1e1e1e;\n}\n\n.match-container {\n    background-color: #333;\n    padding: 20px;\n    border-radius: 10px;\n    color: white;\n    width: 600px;  /* 🔹 기존 400px → 600px로 확대 */\n    max-width: 80%; /* 🔹 화면 크기에 맞게 유동적으로 조절 */\n}\n/* ✅ 프로필 영역 (소환사 아이콘 + 닉네임) */\n.profile-section {\n    display: flex;\n    align-items: center;  /* 요소들을 수직 정렬 */\n    gap: 15px; /* 아이콘과 닉네임 사이 여백 */\n}\n\n/* ✅ 프로필 사진 (소환사 아이콘 포함) */\n.profile-picture {\n    width: 80px;  /* 아이콘 크기 조정 */\n    height: 80px;\n    background-color: #2c2c2c;\n    border-radius: 50%;\n    overflow: hidden; /* 이미지가 둥글게 표시되도록 설정 */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n/* ✅ 소환사 아이콘 스타일 */\n.summoner-icon {\n    width: 100%;  /* 부모 요소 크기에 맞춤 */\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n/* ✅ 닉네임 텍스트 스타일 */\n.profile-section span {\n    font-size: 18px;\n    font-weight: bold;\n    color: white;\n}\n\n/* ✅ 프로필 & 티어 정보 컨테이너 */\n.profile-rank-container {\n    position: relative;  /* 🔹 내부 요소의 위치 기준 */\n    display: flex;\n    align-items: center; \n    justify-content: space-between;  \n    width: 100%;\n    max-width: 600px;\n    margin-bottom: 20px;\n}\n\n/* ✅ 프로필 섹션 (왼쪽) */\n.profile-section {\n    display: flex;\n    align-items: center;\n    gap: 15px; \n}\n\n/* ✅ 티어 정보 & 전적 갱신 버튼 (오른쪽 상단 고정) */\n.user-rank-container {\n    position: absolute;  /* 🔹 절대 위치 설정 */\n    top: 0;  /* 상단 고정 */\n    right: 0; /* 오른쪽 고정 */\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n/* ✅ 티어 정보 (아이콘 + 텍스트 세로 배치) */\n.rank-info {\n    display: flex;\n    flex-direction: column;  /* 🔹 세로 배치 (아이콘 → 텍스트) */\n    align-items: center;\n    text-align: center;\n    gap: 5px;  /* 🔹 아이콘과 텍스트 사이 간격 */\n}\n\n/* ✅ 티어 아이콘 */\n.rank-icon {\n    width: 80px;  /* 🔹 기존보다 확대 */\n    height: 80px;\n    object-fit: contain;\n}\n\n/* ✅ 티어 텍스트 */\n.rank-text {\n    font-size: 18px;  \n    font-weight: bold;\n    color: white;\n    margin-top: -5px;  /* 🔹 아이콘과 너무 붙지 않도록 조정 */\n}\n\n/* ✅ 전적 갱신 버튼 스타일 */\n.refresh-button {\n    padding: 10px 15px; \n    background: rgb(21, 81, 55);\n    color: white;\n    font-size: 14px;  \n    font-weight: bold;\n    border: none;\n    border-radius: 8px;  \n    cursor: pointer;\n    transition: background 0.3s ease, transform 0.2s ease;\n}\n\n/* ✅ 마우스 호버 효과 추가 */\n.refresh-button:hover {\n    background: rgb(30, 100, 70);\n    transform: scale(1.05); \n}\n/* 아이콘 선택 스타일 */\n.position-options,\n.voice-options,\n.game-mode-options {\n    display: flex;\n    justify-content: center;\n    /* 아이콘들을 가운데 정렬 */\n    align-items: center;\n    gap: 20px;\n    /* 아이콘 간격 조정 */\n    flex-wrap: wrap;\n    /* 여러 줄로 자동 배치 */\n}\n\n/* 포지션 아이콘 크기 */\n.position-options img {\n    width: var(--position-icon-width, 80px);\n    height: var(--position-icon-height, 80px);\n    transition: transform 0.2s;\n}\n\n/* 음성 채팅 아이콘 크기 */\n.voice-options img {\n    width: var(--voice-icon-width, 50px);\n    height: var(--voice-icon-height, 80px);\n    transition: transform 0.2s;\n}\n\n/* 게임 모드 아이콘 크기 */\n.game-mode-options img {\n    width: var(--game-mode-icon-width, 80px);\n    height: var(--game-mode-icon-height, 80px);\n    transition: transform 0.2s;\n}\n\n\n.position-options img:hover,\n.voice-options img:hover,\n.game-mode-options img:hover {\n    transform: scale(1.1);\n}\n\n/* 선택된 아이콘 강조 */\n.selected img,\n.active img {\n    border: 3px solid rgb(21, 81, 55);\n    border-radius: 10px;\n}\n\n/* 매칭 중 로딩 아이콘 */\n.loading-icon {\n    width: 80px;\n    height: 80px;\n    animation: spin 1s linear infinite;\n}\n\n/* 회전 애니메이션 */\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n/* 대기 시간 표시 */\n.waiting-time {\n    font-size: 24px;\n    font-weight: bold;\n    margin: 10px 0;\n}\n\n/* 매칭 버튼 */\n.match-button {\n    display: block;\n    margin: 20px auto;\n    width: 50%;\n    padding: 10px;\n    font-size: 16px;\n    background-color: rgb(21, 81, 55);\n    color: white;\n    border: none;\n    border-radius: 90px;\n    cursor: pointer;\n}\n\n.popup-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.7);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popup-content {\n    background: #333;\n    /* 배경 어두운 색으로 유지 */\n    padding: 20px;\n    border-radius: 5px;\n    text-align: center;\n}\n\n/*  매칭 중 안내 문구 흰색으로 변경 */\n.popup-content p {\n    color: white;\n    /* 글자 색상을 흰색으로 변경 */\n    font-size: 18px;\n    text-align: center;\n}\n\n.position-options img {\n    width: v-bind(positionIconSize + 'px');\n    height: v-bind(positionIconSize + 'px');\n}\n\n\n\n.game-mode-options img {\n    width: v-bind(gameModeIconSize + 'px');\n    height: v-bind(gameModeIconSize + 'px');\n}\n\n/* 아이콘과 글자 세로 정렬 */\n.icon-container {\n    display: flex;\n    flex-direction: column;\n    /* 세로 정렬 */\n    align-items: center;\n    /* 가운데 정렬 */\n    text-align: center;\n    cursor: pointer;\n    margin: 10px;\n}\n\n/* ✅ 아이콘 밑에 텍스트 스타일 */\n.icon-label {\n    margin-top: 5px;\n    /* 아이콘과 글자 사이 여백 */\n    font-size: 14px;\n    color: white;\n}\n\n.match-confirmation {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: fixed;  /* 화면에 고정 (팝업 역할) */\n    top: 50%;  /* 화면 중앙 위치 */\n    left: 50%;\n    transform: translate(-50%, -50%); /* 정확한 중앙 정렬 */\n    width: 400px;  /* 원하는 팝업 크기 */\n    height: 600px; /* 원하는 팝업 크기 */\n    background: #222; /* 팝업 배경 색 */\n    color: white;\n    border-radius: 15px; /* 팝업 모서리 둥글게 */\n    padding: 20px;\n    text-align: center;\n}\n\n.match-info {\n    text-align: center;\n}\n\n.opponent-profile {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-bottom: 20px;\n}\n\n.profile-picture {\n    width: 100px;\n    height: 100px;\n    background-color: #2c2c2c;\n    border-radius: 50%;\n}\n\n.match-buttons {\n    display: flex;\n    gap: 10px;\n}\n\n.reject-button, .accept-button {\n    padding: 15px 30px;\n    font-size: 16px;\n    border: none;\n    cursor: pointer;\n}\n\n.reject-button {\n    background: none;\n    border: 2px solid white;\n    color: white;\n    border-radius: 45px;\n}\n\n.accept-button {\n    background: rgb(21, 81, 55);\n    color: white;\n    border-radius: 45px;\n}\n\n\n</style>","import { render } from \"./MatchQueue.vue?vue&type=template&id=50e310a8&scoped=true\"\nimport script from \"./MatchQueue.vue?vue&type=script&lang=js\"\nexport * from \"./MatchQueue.vue?vue&type=script&lang=js\"\n\nimport \"./MatchQueue.vue?vue&type=style&index=0&id=50e310a8&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-50e310a8\"]])\n\nexport default __exports__","<template>\n    \n    <!-- 오른쪽에 채팅창 배치 -->\n    <div class=\"chat-room\">\n           <div class=\"chat-header\">\n               <h1>채팅방</h1>\n               <button @click=\"leaveRoom\" class=\"leave-button\">나가기</button>\n           </div>\n\n           <div class=\"opponent-info\" v-if=\"getOpponent && getOpponent.nickname\">\n   <h2>{{ getOpponent.nickname }}</h2>\n   <p>포지션: {{ getOpponent.position || '정보 없음' }}</p>\n   <p>마이크: {{ getOpponent.microphone || '정보 없음' }}</p>\n   <p>티어: {{ getOpponent.summonerRank.tier || '정보 없음' }}</p>\n</div>\n       <div v-else>\n           <p>매칭된 상대방 정보를 불러오는 중...</p>\n       </div>\n\n       <div class=\"chat-window\" ref=\"chatWindow\">\n           <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"chat-message\" :class=\"{\n               'my-message': message.username === userInfo?.nickname,\n               'system-message': message.type === 'system'\n           }\">\n               <div class=\"message-content\" :class=\"{ 'system-content': message.type === 'system' }\">\n                   <span v-if=\"message.type !== 'system'\" class=\"username\">{{ message.username }}</span>\n                   <span class=\"message-text\">{{ message.message }}</span>\n               </div>\n           </div>\n       </div>\n\n       <div class=\"chat-input\">\n           <input v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"메시지를 입력하세요...\" ref=\"messageInput\" />\n           <button @click=\"sendMessage\">전송</button>\n       </div>\n   </div>\n</template>\n\n<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n    data() {\n        return {\n            socket: null,\n            messages: [],\n            newMessage: \"\",\n            match: null,\n            matchId: null,\n            userInfo: null\n        };\n    },\n    computed: {\n        getOpponent() {\n            if (!this.match || !this.match.players || !this.userInfo) return {};\n            return this.match.players.find(player => player.userid !== this.userInfo.userid) || this.match.players[0] || {};\n        }\n    },\n    watch: {\n        messages: {\n            handler() {\n                this.$nextTick(() => {\n                    this.scrollToBottom();\n                });\n            },\n            deep: true\n        },\n        match: {\n            handler(newMatch) {\n                if (newMatch && newMatch.roomName && !this.socket) {\n                    this.setupSocket();\n                }\n            },\n            deep: true\n        }\n    },\n    methods: {\n        setupSocket() {\n            if (this.socket) return;\n\n            console.log(\"📢 소켓 연결 시도\");\n            this.socket = io(\"http://localhost:3000\", { withCredentials: true });\n\n            // 소켓 연결 이벤트 핸들러\n            this.socket.on(\"connect\", () => {\n                console.log(\"✅ 소켓 연결됨:\", this.socket.id);\n                if (this.match && this.match.roomName) {\n                    console.log(\"📢 방 참가 시도:\", this.match.roomName);\n                    this.socket.emit(\"join room\", { roomName: this.match.roomName });\n                }\n            });\n\n            // 채팅 메시지 수신 핸들러\n            this.socket.on(\"chat message\", (data) => {\n                console.log(\"💬 메시지 수신:\", data);\n                this.messages.push(data);\n            });\n\n            this.socket.on(\"user disconnected\", (data) => {\n                console.log(\"📢 상대방 접속 종료:\", data);\n                this.opponentDisconnected = true;\n                this.messages.push({\n                    type: 'system',\n                    message: `${data.nickname}님이 채팅방을 나갔습니다.`\n                });\n\n                // 3초 후 매칭 페이지로 이동\n                setTimeout(() => {\n                    this.$router.push('/match');\n                }, 3000);\n            });\n\n            // 소켓 에러 핸들러\n            this.socket.on(\"connect_error\", (error) => {\n                console.error(\"❌ 소켓 연결 에러:\", error);\n            });\n        },\n\n        leaveRoom() {\n            if (this.socket && this.matchId) {\n                this.socket.emit(\"leave room\", {\n                    matchId: this.matchId,\n                    userId: this.userInfo.userid,\n                    nickname: this.userInfo.nickname\n                });\n                this.socket.disconnect();\n            }\n            this.$router.push('/match');\n        },\n\n        sendMessage() {\n            if (this.newMessage.trim() && this.socket && this.matchId) {\n                console.log(\"📢 메시지 전송 시도:\", {\n                    matchId: this.matchId,\n                    message: this.newMessage\n                });\n\n                this.socket.emit(\"chat message\", {\n                    matchId: this.matchId,\n                    message: this.newMessage\n                });\n                this.newMessage = \"\";\n            } else {\n                console.warn(\"⚠️ 메시지 전송 실패:\", {\n                    hasSocket: !!this.socket,\n                    hasMatchId: !!this.matchId,\n                    messageLength: this.newMessage.length\n                });\n            }\n        },\n        scrollToBottom() {\n            const chatWindow = this.$refs.chatWindow;\n            if (chatWindow) {\n                chatWindow.scrollTop = chatWindow.scrollHeight;\n            }\n        },\n        async fetchUserInfo() {\n            try {\n                const userResponse = await fetch('http://localhost:3000/auth/check-login', {\n                    credentials: 'include'\n                });\n                const userData = await userResponse.json();\n\n                if (userData.loggedIn) {\n                    this.userInfo = userData.user;\n                    console.log(\"✅ 사용자 정보 로드됨:\", this.userInfo);\n                } else {\n                    console.error(\"❌ 사용자 정보를 가져올 수 없습니다.\");\n                }\n            } catch (error) {\n                console.error(\"❌ 사용자 정보 조회 오류:\", error);\n            }\n        },\n        async fetchMatchInfo() {\n            if (!this.matchId) {\n                console.error(\"❌ matchId가 없음!\");\n                return;\n            }\n\n            try {\n                const response = await fetch(`http://localhost:3000/match/get/${this.matchId}`, {\n                    method: \"GET\",\n                    credentials: \"include\",\n                });\n\n                const data = await response.json();\n                console.log(\"🔹 서버에서 받은 매칭 데이터:\", data);\n\n                if (data.success) {\n                    this.match = data.match;\n                } else {\n                    console.error(\"❌ 매칭 정보를 찾을 수 없습니다.\");\n                }\n            } catch (error) {\n                console.error(\"❌ 매칭 정보 가져오기 오류:\", error);\n            }\n        }\n    },\n    async mounted() {\n        this.matchId = this.$route.query.matchId;\n        console.log(\"📢 ChatRoom에서 받은 matchId:\", this.matchId);\n\n        await this.fetchUserInfo();\n        await this.fetchMatchInfo();\n        this.setupSocket();\n    },\n    beforeUnmount() {\n        if (this.socket) {\n            if (!this.opponentDisconnected) {\n                this.socket.emit(\"leave room\", {\n                    matchId: this.matchId,\n                    userId: this.userInfo.userid,\n                    nickname: this.userInfo.nickname\n                });\n            }\n            console.log(\"📢 소켓 연결 종료\");\n            this.socket.disconnect();\n            this.socket = null;\n        }\n    }\n};\n</script>\n\n<style scoped>\n\n.chat-container {\n    display: flex;\n    flex-direction: row; /* 세로 정렬이 아니라 가로 정렬 */\n    height: 100vh;\n    background-color: rgb(33, 33, 33);\n}\n\n\n/* 왼쪽 상대방 정보 */\n.opponent-info {\n    width: 300px; /* 상대방 정보 영역 크기 */\n    padding: 20px;\n    background-color: rgb(25, 25, 25);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: flex-start;\n    border-right: 2px solid rgb(50, 50, 50);\n}\n\n.chat-room {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    height: 100vh;\n    width: 300vw;\n    padding: 20px;\n    background-color: rgb(33, 33, 33);\n    color: white; /* 기본 글자색을 하얀색으로 설정 */\n}\n\n.chat-window {\n    flex: 1;\n    overflow-y: auto;\n    background-color: rgb(33, 33, 33);\n    padding: 20px;\n    border-radius: 8px;\n    width: 100%;\n    max-width: 800px;\n    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n    margin: 20px 0;\n}\n\n.chat-message {\n    margin-bottom: 15px;\n    color: white;\n}\n\n.message-content {\n    display: inline-block;\n    max-width: 80%;\n    padding: 10px 15px;\n    border-radius: 15px;\n    background-color: rgb(21, 81, 55);\n}\n\n.my-message {\n    text-align: right;\n    color: white;\n}\n\n.my-message .message-content {\n    background-color: rgb(21, 81, 55);\n    color: white;\n}\n\n.username {\n    font-weight: bold;\n    margin-right: 8px;\n    font-size: 0.9em;\n    color: white;\n}\n\n.message-text {\n    word-break: break-word;\n}\n\n.chat-input {\n    display: flex;\n    width: 100%;\n    max-width: 800px;\n    gap: 10px;\n    padding: 15px;\n    background-color: rgb(66, 66, 66);\n    border-radius: 45px;\n    box-shadow: 0 2px 4px rgb(33, 33, 33);\n}\n\n.chat-input input {\n    flex: 1;\n    padding: 12px;\n    border-radius: 45px;\n    border: 1px solid rgb(66, 66, 66);\n    font-size: 16px;\n    background-color: rgb(66, 66, 66);\n    color: white; /* 입력창 내 텍스트 색 */\n}\n\n.chat-input input:focus {\n    outline: none;\n    border-color:  rgb(21, 81, 55);\n}\n\n.chat-input button {\n    padding: 12px 24px;\n    border-radius: 45px;\n    border: none;\n    background-color:  rgb(21, 81, 55);\n    color: white;\n    font-size: 16px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.chat-input button:hover {\n    background-color: rgb(21, 81, 55);\n}\n\n.chat-header {\n    width: 100%;\n    max-width: 800px;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 20px;\n}\n\n.leave-button {\n    padding: 8px 16px;\n    background-color: rgb(21, 81, 55); \n    color: white;\n    border: none;\n    border-radius: 45px;\n    cursor: pointer;\n    transition: background-color 0.2s;\n}\n\n.leave-button:hover {\n    background-color: rgb(21, 81, 55);\n}\n\n.system-message {\n    text-align: center;\n    margin: 10px 0;\n}\n\n.system-content {\n    background-color: #f8d7da !important;\n    color: #721c24 !important;\n    padding: 8px 16px !important;\n    border-radius: 4px !important;\n    font-size: 0.9em;\n}\n</style>","import { render } from \"./ChatRoom.vue?vue&type=template&id=78c9496e&scoped=true\"\nimport script from \"./ChatRoom.vue?vue&type=script&lang=js\"\nexport * from \"./ChatRoom.vue?vue&type=script&lang=js\"\n\nimport \"./ChatRoom.vue?vue&type=style&index=0&id=78c9496e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-78c9496e\"]])\n\nexport default __exports__","import { createRouter, createWebHistory } from 'vue-router';\nimport SignupForm from '../components/SignupForm.vue';\nimport LoginForm from '@/components/LoginForm.vue';\nimport RequestPasswordReset from '@/components/RequestPasswordReset.vue';\nimport ResetPassword from '@/components/ResetPassword.vue';\nimport FindPassword from '@/components/FindPassword.vue';\nimport FindId from '@/components/FindId.vue';\nimport MypageEdit from '@/components/MypageEdit.vue';\nimport BoardForm from '@/components/BoardForm.vue'; // BoardForm 컴포넌트 불러오기\nimport BoardDetail from '@/components/BoardDetail.vue'; //BoardDetail 컴포넌트 불러오기\nimport patchNotesDisplay from '@/components/patchNotesDisplay.vue'; // 새 컴포넌트 추가\nimport MatchQueue from '@/components/MatchQueue.vue';\nimport ChatRoom from '@/components/ChatRoom.vue';\nimport axios from 'axios';\n\nconst routes = [\n  {\n    path: '/signup',\n    name: 'Signup',\n    component: SignupForm,\n  },\n  {\n    path: '/login',\n    name: 'Login',\n    component: LoginForm,\n  },\n  { path: '/request-password-reset', component: RequestPasswordReset },\n  { path: '/reset-password', component: ResetPassword },\n  { path: '/find-password', component: FindPassword },\n  { path: '/find-id', component: FindId },\n  { path: '/mypage-edit', component: MypageEdit },\n  {\n    path: '/board',\n    name: 'BoardForm',\n    component: BoardForm, // 게시판 페이지 추가\n  },\n  {\n    path: '/board/:id',\n    name: 'BoardDetail',\n    component: BoardDetail,\n    props: true, // 게시글 ID를 컴포넌트에 전달\n  },\n  { path: '/matchqueue', component: MatchQueue },\n  {\n    path: '/chatroom',\n    name: 'ChatRoom',\n    component: ChatRoom,\n    props: true, // params를 컴포넌트 props로 전달\n  },\n  {\n    path: '/patch-notes',\n    name: 'PatchNotesDisplay',\n    component: patchNotesDisplay,  // 새로운 컴포넌트 등록\n  },\n\n];\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n});\n\nasync function isLoggedIn() {\n  try {\n    const response = await axios.get('http://localhost:3000/auth/check-login', {\n      withCredentials: true, // 쿠키 포함 요청\n    });\n    return response.data.loggedIn;\n  } catch (error) {\n    console.error('Error checking login status:', error);\n    return false; // 오류 발생 시 비로그인 상태로 간주\n  }\n}\n\n// Navigation Guard 설정\nrouter.beforeEach(async (to, from, next) => {\n  const requiresAuth = to.meta.requiresAuth;\n\n  if (requiresAuth) {\n    // 인증이 필요한 페이지 접근 시 로그인 상태 확인\n    const loggedIn = await isLoggedIn();\n\n    if (!loggedIn) {\n      // 로그인 상태가 아니면 로그인 페이지로 이동\n      return next({ name: 'Login', query: { redirect: to.fullPath } });\n    }\n  }\n\n  next(); // 인증이 필요하지 않거나 로그인 상태라면 다음 라우트로 이동\n});\n\nexport default router;","import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\n\ncreateApp(App).use(router).mount('#app'); ","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = function(result, chunkIds, fn, priority) {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar chunkIds = deferred[i][0];\n\t\tvar fn = deferred[i][1];\n\t\tvar priority = deferred[i][2];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every(function(key) { return __webpack_require__.O[key](chunkIds[j]); })) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/Duo-Mate/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t524: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = function(chunkId) { return installedChunks[chunkId] === 0; };\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = function(parentChunkLoadingFunction, data) {\n\tvar chunkIds = data[0];\n\tvar moreModules = data[1];\n\tvar runtime = data[2];\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some(function(id) { return installedChunks[id] !== 0; })) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkvue_node_app\"] = self[\"webpackChunkvue_node_app\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [504], function() { return __webpack_require__(8249); })\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["id","key","class","_createElementBlock","_hoisted_1","$options","showHeader","_hoisted_2","$data","isLoggedIn","_hoisted_3","_createElementVNode","_hoisted_4","_toDisplayString","userInfo","nickname","_hoisted_5","_hoisted_6","_createTextVNode","_createCommentVNode","onClick","_cache","$event","mypageopen","_createVNode","_component_router_link","to","default","_withCtx","_","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","email","_hoisted_11","birthdate","_hoisted_12","gender","_hoisted_13","type","href","_hoisted_14","_hoisted_15","_hoisted_16","src","alt","gameTier","_hoisted_17","_hoisted_18","_Fragment","_renderList","topChampions","champion","index","image","name","_hoisted_19","withdraw","logout","_hoisted_20","_hoisted_21","_hoisted_22","_component_router_view","showPlaceholder","_hoisted_23","_hoisted_24","autoplay","loop","muted","_imports_0","_hoisted_25","args","enterMatchQueue","showFooter","_hoisted_26","_createStaticVNode","data","computed","isAuthPage","includes","this","$route","path","videoElement","$refs","methods","$router","push","playVideo","play","pauseVideo","pause","checkLoginStatus","response","fetch","method","credentials","ok","json","loggedIn","user","resetUserData","error","console","confirmation","confirm","alert","mounted","__exports__","render","onSubmit","_withModifiers","handleSubmit","for","placeholder","form","userid","onInput","checkDuplicateUserId","required","style","_normalizeStyle","color","duplicateCheck","message","passwordVisible","password","openIcon","closeIcon","togglePasswordVisibility","passwordCheckVisible","passwordcheck","require","field","headers","body","JSON","stringify","result","window","location","handleLogin","errorMessage","rqid","requestUserId","_ctx","disabled","isButtonDisabledId","timerId","_normalizeClass","success","rqpassword","requestResetLink","isButtonDisabledPassword","timerPassword","errorText","countdownId","setInterval","clearInterval","countdown","resetPassword","newPassword","confirmPassword","token","URLSearchParams","search","get","riotInfo","profileIconId","accept","ref","onChange","handleFileChange","updateUserProfile","value","summonerName","summonerRank","tier","summonerInfo","summonerLevel","top5Champions","champ","showRiotModal","tag","linkRiotAccount","rank","statusText","log","status","currentPage","searchQuery","onKeyup","_withKeys","filterPosts","searchType","resetSearch","sortOrder","sortPosts","goToWritePage","loading","sortedPosts","length","post","_id","goToDetailPage","title","innerHTML","convertNewLinesToBreaks","content","author","formatDate","createdAt","likes","dislikes","views","submitPost","goToBoardPage","posts","filteredPosts","currentUser","sort","a","b","Date","created","initData","axios","withCredentials","fetchPosts","trim","filter","toLowerCase","postId","params","dateString","toLocaleDateString","undefined","year","month","day","hour","minute","text","replace","isEditing","updatePost","editedTitle","editedContent","cancelEdit","likePost","dislikePost","isAuthor","enterEditMode","deletePost","comments","sortComments","sortedComments","comment","userId","startEditingComment","deleteComment","editingCommentId","editingContent","saveEditedComment","cancelEditing","likeComment","dislikeComment","newComment","submitComment","props","loadData","Promise","all","fetchPost","fetchComments","fetchCurrentUser","date","updatedData","put","delete","action","commentId","find","c","incrementViews","then","patchNotes","filteredPatchNotes","patch","link","target","canLoadMore","loadMore","skip","limit","fetchPatchNotes","sortBy","fetchLatestMatchData","positions","pos","selected","selectedPositions","togglePosition","icon","label","voiceOptions","voice","active","microphone","gameModes","mode","matchType","startMatching","isMatching","matchFound","rejectMatch","acceptMatch","_hoisted_27","_hoisted_28","formattedTime","cancelMatching","__default__","socket","matchId","waitingTime","timer","positionIconSize","voiceIconWidth","voiceIconHeight","gameModeIconSize","initializeSocket","handleUnauthenticatedUser","io","on","async","position","p","emit","minutes","Math","floor","seconds","toString","padStart","beforeUnmount","disconnect","leaveRoom","getOpponent","messages","username","newMessage","sendMessage","match","players","player","watch","handler","$nextTick","scrollToBottom","deep","newMatch","roomName","setupSocket","opponentDisconnected","setTimeout","warn","hasSocket","hasMatchId","messageLength","chatWindow","scrollTop","scrollHeight","fetchUserInfo","userResponse","userData","fetchMatchInfo","query","routes","component","SignupForm","LoginForm","RequestPasswordReset","ResetPassword","FindPassword","FindId","MypageEdit","BoardForm","BoardDetail","MatchQueue","ChatRoom","patchNotesDisplay","router","createRouter","history","createWebHistory","beforeEach","from","next","requiresAuth","meta","redirect","fullPath","createApp","App","use","mount","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","call","m","deferred","O","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","Object","keys","every","splice","r","d","definition","o","defineProperty","enumerable","g","globalThis","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","__webpack_exports__"],"sourceRoot":""}