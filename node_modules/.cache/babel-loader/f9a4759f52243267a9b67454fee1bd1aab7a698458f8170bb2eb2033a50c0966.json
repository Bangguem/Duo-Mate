{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  name: 'App',\n  data() {\n    return {\n      mypageopen: false,\n      isLoggedIn: false,\n      // 로그인 상태\n      userInfo: {},\n      windowWidth: window.innerWidth,\n      lastetVersion: \"\"\n    };\n  },\n  computed: {\n    // 로그인, 회원가입 페이지 여부 확인\n    isAuthPage() {\n      return ['/login', '/signup', '/find-password', '/find-id', '/mypage-edit', '/matchqueue', '/chatroom', '/board', '/patch-notes'].includes(this.$route.path);\n    },\n    // 헤더와 푸터 표시 여부\n    isMobile() {\n      return this.windowWidth < 768; // 예시: 768px 이하일 때 모바일로 간주\n    },\n    showHeader() {\n      return !this.isAuthPage;\n    },\n    showFooter() {\n      return !this.isAuthPage;\n    },\n    // 메인 페이지의 플레이스홀더 표시 여부\n    showPlaceholder() {\n      return !this.isAuthPage;\n    },\n    videoElement() {\n      return this.$refs.videoElement;\n    }\n  },\n  methods: {\n    handleResize() {\n      this.windowWidth = window.innerWidth; // 창 크기 변경 시 너비 업데이트\n    },\n    enterMatchQueue() {\n      this.$router.push('/matchqueue');\n    },\n    playVideo() {\n      this.videoElement.play();\n    },\n    pauseVideo() {\n      this.videoElement.pause();\n    },\n    async fetchLatestVersion() {\n      try {\n        const response = await fetch(\"https://ddragon.leagueoflegends.com/api/versions.json\");\n        const versions = await response.json();\n        this.latestVersion = versions[0]; // 가장 최신 버전 사용\n      } catch (error) {\n        console.error(\"Failed to fetch Data Dragon version:\", error);\n      }\n    },\n    async checkLoginStatus() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          method: 'GET',\n          credentials: 'include' // 쿠키 포함\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.isLoggedIn = data.loggedIn;\n          if (data.loggedIn) {\n            console.log(\"받아온 유저 정보:\", data.user);\n            this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n          }\n        } else {\n          this.resetUserData();\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        this.resetUserData();\n      }\n    },\n    resetUserData() {\n      this.isLoggedIn = false;\n      this.userInfo = {}; // 사용자 정보 초기화\n    },\n    async logout() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/logout`, {\n          method: 'GET',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          this.isLoggedIn = false;\n          this.nickname = '';\n          this.$router.push('/'); // 로그아웃 후 로그인 페이지로 이동\n        }\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    },\n    async withdraw() {\n      const confirmation = confirm('정말로 회원탈퇴를 진행하시겠습니까?');\n      if (!confirmation) return;\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/withdraw`, {\n          method: 'POST',\n          credentials: 'include'\n        });\n        if (response.ok) {\n          alert('회원탈퇴가 완료되었습니다.');\n          this.resetUserData();\n          this.$router.push('/'); // 기본 페이지로 이동\n        } else {\n          alert('회원탈퇴 중 오류가 발생했습니다. 다시 시도해주세요.');\n        }\n      } catch (error) {\n        console.error('Error withdrawing: ', error);\n        alert('회원탈퇴 중 오류가 발생했습니다. 다시 시도해주세요.');\n      }\n    }\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleResize); // 창 크기 변화 리스너 추가\n    this.checkLoginStatus(); // 컴포넌트가 마운트될 때 로그인 상태 확인\n    this.fetchLatestVersion();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleResize); // 리스너 제거\n  }\n};","map":{"version":3,"names":["name","data","mypageopen","isLoggedIn","userInfo","windowWidth","window","innerWidth","lastetVersion","computed","isAuthPage","includes","$route","path","isMobile","showHeader","showFooter","showPlaceholder","videoElement","$refs","methods","handleResize","enterMatchQueue","$router","push","playVideo","play","pauseVideo","pause","fetchLatestVersion","response","fetch","versions","json","latestVersion","error","console","checkLoginStatus","process","env","VUE_APP_API_URL","method","credentials","ok","loggedIn","log","user","resetUserData","logout","nickname","withdraw","confirmation","confirm","alert","mounted","addEventListener","beforeUnmount","removeEventListener"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <!-- 조건에 따라 다른 헤더를 표시 -->\n    <header v-if=\"showHeader\">\n      <template v-if=\"isLoggedIn\">\n        <!-- 로그인 상태일 때의 헤더 -->\n        <div class=\"header\">\n          <div class=\"logo\">\n            <div class=\"circle\">\n              <img src=\"/favicon.ico\" class=\"circle\" @click=\"$router.push('/')\" style=\"cursor: pointer;\" alt=\"\" />\n            </div>\n            <span>{{ userInfo.nickname }} ({{ userInfo.SummonerName }}#{{ userInfo.Tag }})</span>\n          </div>\n          <nav class=\"nav-links\">\n            <!-- <a v-if=\"userInfo.nickname\"><strong>닉네임:</strong> {{ userInfo.nickname }}</a> -->\n            <div class=\"nav-button\" @click=\"mypageopen = true\">마이페이지</div>\n            <div class=\"nav-button\" @click=\"$router.push('/board')\">게시판</div>\n            <div class=\"nav-button\" @click=\"$router.push('/patch-notes')\">패치 노트</div>\n            <div class=\"modal-overlay\" v-if=\"mypageopen == true\">\n              <div class=\"modal-content\">\n                <!-- 프로필 이미지 -->\n                <div class=\"profile-image\">\n                  <img v-if=\"userInfo.summonerInfo && userInfo.summonerInfo.profileIconId\"\n                    :src=\"`https://ddragon.leagueoflegends.com/cdn/${latestVersion}/img/profileicon/${userInfo.summonerInfo?.profileIconId}.png`\"\n                    alt=\"Summoner Icon\" />\n                </div>\n\n                <!-- 유저 정보 표시 -->\n                <div class=\"user-info-display\">\n                  <p v-if=\"userInfo.nickname\"><strong>닉네임:</strong> {{ userInfo.nickname }}</p>\n                  <p v-if=\"userInfo.email\"><strong>이메일:</strong> {{ userInfo.email }}</p>\n                  <p v-if=\"userInfo.introduction\"><strong>자기소개:</strong> {{ userInfo.introduction }}</p>\n                </div>\n\n                <!-- 수정 버튼 -->\n                <button type=\"button\" class=\"edit-button\" @click=\"$router.push('/mypage-edit')\">내 정보 수정</button>\n\n                <!-- 게임 정보 -->\n                <div class=\"gaming-info\">\n                  <h2>소환사 정보</h2>\n                  <p v-if=\"!userInfo.SummonerName\">연동이 필요합니다.</p>\n                  <div class=\"game-stats\">\n                    <div class=\"game-tier\">\n                      <img v-if=\"!userInfo.summonerRank?.[0]?.tier && userInfo.summonerInfo\"\n                        src=\"@/assets/Rank/unranked.png\" alt=\"\">\n                      <p v-if=\"!userInfo.summonerRank?.[0]?.tier && userInfo.summonerInfo\">랭크 정보 없음</p>\n                      <img v-if=\"userInfo.summonerRank && userInfo.summonerRank?.[0]?.tier\"\n                        :src=\"require(`@/assets/Rank/Rank=${userInfo.summonerRank?.[0]?.tier}.png`)\" alt=\"\" />\n                      <p v-if=\"userInfo.summonerRank && userInfo.summonerRank?.[0]?.tier\">Game Tier</p>\n                      <p>{{ userInfo.summonerRank?.[0]?.tier || \"\" }} {{ userInfo.summonerRank?.[0]?.rank || \"\" }}</p>\n                    </div>\n                    <div class=\"most-champions\">\n                      <p v-if=\"(userInfo.top5Champions || [])[0]?.iconUrl\" :src=\"userInfo.top5Champions[0]?.iconUrl\">숙련도\n                      </p>\n                      <br />\n                      <div class=\"champion-list\">\n                        <div class=\"champion-item\">\n                          <img v-if=\"(userInfo.top5Champions || [])[1]?.iconUrl\"\n                            :src=\"userInfo.top5Champions[1]?.iconUrl\" alt=\"Champion Image\" />\n                          <!-- 숙련도 이미지 -->\n                          <img v-if=\"(userInfo.top5Champions || [])[1]?.masteryLevel < 10\"\n                            :src=\"require(`@/assets/Mastery/${userInfo.top5Champions[1]?.masteryLevel}.webp`)\"\n                            class=\"mastery-icon\" alt=\"Mastery Level\" />\n                          <img\n                            v-if=\"(userInfo.top5Champions || [])[1]?.iconUrl && (userInfo.top5Champions || [])[1]?.masteryLevel >= 10\"\n                            src=\"@/assets/Mastery/10.webp\" class=\"high-mastery-img\" alt=\"Mastery Level\" />\n\n                          <!-- 숙련도 레벨이 10 이상이면 추가 이미지 + 숙련도 레벨 표시 -->\n                          <div v-if=\"(userInfo.top5Champions || [])[1]?.masteryLevel >= 10\" class=\"mastery-wrapper\">\n                            <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\" alt=\"High Mastery\" />\n                            <p class=\"high-mastery-level\">{{ (userInfo.top5Champions || [])[1]?.masteryLevel }}</p>\n                          </div>\n                          <br />\n                          <p>{{ (userInfo.top5Champions || [])[1]?.championName || \"\" }}</p>\n                        </div>\n                        <div class=\"champion-item\">\n                          <img v-if=\"(userInfo.top5Champions || [])[0]?.iconUrl\"\n                            :src=\"userInfo.top5Champions[0]?.iconUrl\" alt=\"Champion Image\" />\n                          <!-- 숙련도 이미지 -->\n                          <img v-if=\"(userInfo.top5Champions || [])[0]?.masteryLevel < 10\"\n                            :src=\"require(`@/assets/Mastery/${userInfo.top5Champions[1]?.masteryLevel}.webp`)\"\n                            class=\"mastery-icon\" alt=\"Mastery Level\" />\n                          <img\n                            v-if=\"(userInfo.top5Champions || [])[0]?.iconUrl && (userInfo.top5Champions || [])[0]?.masteryLevel >= 10\"\n                            src=\"@/assets/Mastery/10.webp\" class=\"high-mastery-img\" alt=\"Mastery Level\" />\n\n                          <!-- 숙련도 레벨이 10 이상이면 추가 이미지 + 숙련도 레벨 표시 -->\n                          <div v-if=\"(userInfo.top5Champions || [])[0]?.masteryLevel >= 10\" class=\"mastery-wrapper\">\n                            <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\" alt=\"High Mastery\" />\n                            <p class=\"high-mastery-level\">{{ (userInfo.top5Champions || [])[0]?.masteryLevel }}</p>\n                          </div>\n                          <br />\n                          <p>{{ (userInfo.top5Champions || [])[0]?.championName || \"\" }}</p>\n                        </div>\n                        <div class=\"champion-item\">\n                          <img v-if=\"(userInfo.top5Champions || [])[2]?.iconUrl\"\n                            :src=\"userInfo.top5Champions[2]?.iconUrl\" alt=\"Champion Image\" />\n                          <!-- 숙련도 이미지 -->\n                          <img v-if=\"(userInfo.top5Champions || [])[2]?.masteryLevel < 10\"\n                            :src=\"require(`@/assets/Mastery/${userInfo.top5Champions[2]?.masteryLevel}.webp`)\"\n                            class=\"mastery-icon\" alt=\"Mastery Level\" />\n                          <img\n                            v-if=\"(userInfo.top5Champions || [])[2]?.iconUrl && (userInfo.top5Champions || [])[1]?.masteryLevel >= 10\"\n                            src=\"@/assets/Mastery/10.webp\" class=\"high-mastery-img\" alt=\"Mastery Level\" />\n\n                          <!-- 숙련도 레벨이 10 이상이면 추가 이미지 + 숙련도 레벨 표시 -->\n                          <div v-if=\"(userInfo.top5Champions || [])[2]?.masteryLevel >= 10\" class=\"mastery-wrapper\">\n                            <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\" alt=\"High Mastery\" />\n                            <p class=\"high-mastery-level\">{{ (userInfo.top5Champions || [])[2]?.masteryLevel }}</p>\n                          </div>\n                          <br />\n                          <p>{{ (userInfo.top5Champions || [])[2]?.championName || \"\" }}</p>\n                        </div>\n                      </div>\n                      <!-- <p>{{ userInfo.topChampions.map(c => c.name).join(', ') }}</p> -->\n                    </div>\n                  </div>\n                </div>\n\n                <!-- 회원 탈퇴 버튼 -->\n                <br />\n                <button class=\"delete-button\" @click=\"withdraw(), mypageopen = false\">회원탈퇴</button>\n\n                <button class=\"close-button\" @click=\"mypageopen = false\">닫기</button>\n              </div>\n            </div>\n            <div class=\"nav-button\" @click=\"$router.push('/mypage-edit')\">내 정보 변경</div>\n            <div class=\"nav-button\" @click=\"logout()\">로그아웃</div>\n          </nav>\n        </div>\n      </template>\n      <template v-else>\n        <!-- 비로그인 상태일 때의 헤더 -->\n        <div class=\"header\">\n          <div class=\"logo\">\n            <div class=\"circle\">\n              <img src=\"/favicon.ico\" class=\"circle\" @click=\"$router.push('/')\" style=\"cursor: pointer;\" alt=\"\" />\n            </div>\n            <span>Welcome</span>\n          </div>\n          <nav class=\"nav-links\">\n            <div class=\"nav-button\" @click=\"$router.push('/patch-notes')\">패치 노트</div>\n            <div class=\"nav-button\" @click=\"$router.push('/signup')\">회원가입</div>\n            <div class=\"nav-button\" @click=\"$router.push('/login')\">로그인</div>\n          </nav>\n        </div>\n      </template>\n    </header>\n\n    <main class=\"main-content\">\n      <!-- 라우팅된 화면 표시 -->\n      <router-view></router-view>\n\n      <!-- 메인 페이지 컨텐츠 (로그인/회원가입 페이지 제외) -->\n      <div v-if=\"showPlaceholder\" class=\"placeholder\">\n        <!-- 비디오 추가 -->\n        <div class=\"background-video\">\n          <video autoplay loop muted>\n            <source src=\"@/assets/Duomate2.mp4\" type=\"video/mp4\">\n            <strong>Your browser does not support the video tag.</strong>\n          </video>\n          <div class=\"overlay-text\">\n            <h1>듀오를 찾아보세요</h1>\n            <p>같이 할 듀오가 필요할 때, DuoMate!</p>\n            <button class=\"match-button\" @click=\"enterMatchQueue\">매칭 시작</button>\n          </div>\n        </div>\n      </div>\n    </main>\n\n    <!-- 조건에 따라 푸터를 표시 -->\n    <!-- <footer v-if=\"showFooter\" class=\"footer\">\n      <nav class=\"footer-links\">\n        <a href=\"#\">Contact Us</a>\n        <a href=\"#\">About Us</a>\n        <a href=\"#\">Terms & Conditions</a>\n        <a href=\"#\">Privacy Policy</a>\n      </nav>\n    </footer> -->\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'App',\n  data() {\n    return {\n      mypageopen: false,\n      isLoggedIn: false, // 로그인 상태\n      userInfo: {},\n      windowWidth: window.innerWidth,\n      lastetVersion: \"\",\n    };\n  },\n\n\n  computed: {\n    // 로그인, 회원가입 페이지 여부 확인\n    isAuthPage() {\n      return ['/login', '/signup', '/find-password', '/find-id', '/mypage-edit', '/matchqueue', '/chatroom', '/board', '/patch-notes'].includes(this.$route.path);\n    },\n    // 헤더와 푸터 표시 여부\n    isMobile() {\n      return this.windowWidth < 768; // 예시: 768px 이하일 때 모바일로 간주\n    },\n    showHeader() {\n      return !this.isAuthPage;\n    },\n    showFooter() {\n      return !this.isAuthPage;\n    },\n    // 메인 페이지의 플레이스홀더 표시 여부\n    showPlaceholder() {\n      return !this.isAuthPage;\n    },\n    videoElement() {\n      return this.$refs.videoElement;\n    }\n  },\n  methods: {\n    handleResize() {\n      this.windowWidth = window.innerWidth; // 창 크기 변경 시 너비 업데이트\n    },\n    enterMatchQueue() {\n      this.$router.push('/matchqueue');\n    },\n    playVideo() {\n      this.videoElement.play();\n    },\n    pauseVideo() {\n      this.videoElement.pause();\n    },\n    async fetchLatestVersion() {\n      try {\n        const response = await fetch(\"https://ddragon.leagueoflegends.com/api/versions.json\");\n        const versions = await response.json();\n        this.latestVersion = versions[0]; // 가장 최신 버전 사용\n      } catch (error) {\n        console.error(\"Failed to fetch Data Dragon version:\", error);\n      }\n    },\n    async checkLoginStatus() {\n\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          method: 'GET',\n          credentials: 'include', // 쿠키 포함\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.isLoggedIn = data.loggedIn;\n          if (data.loggedIn) {\n            console.log(\"받아온 유저 정보:\", data.user);\n            this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n          }\n        } else {\n          this.resetUserData();\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        this.resetUserData();\n      }\n    },\n    resetUserData() {\n      this.isLoggedIn = false;\n      this.userInfo = {}; // 사용자 정보 초기화\n    },\n    async logout() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/logout`, {\n          method: 'GET',\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          this.isLoggedIn = false;\n          this.nickname = '';\n          this.$router.push('/'); // 로그아웃 후 로그인 페이지로 이동\n        }\n      } catch (error) {\n        console.error('Error logging out:', error);\n      }\n    },\n    async withdraw() {\n      const confirmation = confirm('정말로 회원탈퇴를 진행하시겠습니까?');\n      if (!confirmation) return;\n\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/withdraw`, {\n          method: 'POST',\n          credentials: 'include',\n        });\n\n        if (response.ok) {\n          alert('회원탈퇴가 완료되었습니다.');\n          this.resetUserData();\n          this.$router.push('/'); // 기본 페이지로 이동\n        } else {\n          alert('회원탈퇴 중 오류가 발생했습니다. 다시 시도해주세요.');\n        }\n      } catch (error) {\n        console.error('Error withdrawing: ', error);\n        alert('회원탈퇴 중 오류가 발생했습니다. 다시 시도해주세요.');\n      }\n    },\n  },\n  mounted() {\n    window.addEventListener('resize', this.handleResize); // 창 크기 변화 리스너 추가\n    this.checkLoginStatus(); // 컴포넌트가 마운트될 때 로그인 상태 확인\n    this.fetchLatestVersion();\n  },\n  beforeUnmount() {\n    window.removeEventListener('resize', this.handleResize); // 리스너 제거\n  },\n};\n</script>\n\n<style scoped>\n/* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  background: #000 url('./assets//212121.png');\n  -webkit-overflow-scrolling: touch;\n  /* 스크롤 부드럽게 처리 */\n\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #212121;\n  background: #000 url('./assets//212121.png');\n  -webkit-overflow-scrolling: touch;\n  /* 스크롤 부드럽게 처리 */\n}\n\n#app {\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  min-height: 100vh;\n  background-color: #212121\n}\n\n/* 헤더 스타일 */\n.header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 15px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n  height: 50px;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n.nav-links {\n  display: flex;\n  align-items: stretch;\n}\n\n.nav-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 100px;\n  padding: 0 16px;\n  background-color: transparent;\n  color: #FAFAFA;\n  border-radius: 0;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.nav-button:hover {\n  background-color: #212121;\n}\n\n.nav-links a,\n.nav-links router-link {\n  margin-left: 20px;\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 10px;\n}\n\n.nav-links a:hover,\n.nav-links router-link:hover {\n  text-decoration: underline;\n}\n\n/* 메인 컨텐츠 */\n.main-content {\n  flex: 1;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: #757575;\n}\n\n.placeholder {\n  width: 100%;\n  height: 60%;\n  background-color: #212121;\n}\n\n/* 푸터 스타일 */\n.footer {\n  background-color: #212121;\n  color: #FAFAFA;\n  padding: 90px 0;\n}\n\n.footer-links {\n  display: flex;\n  justify-content: center;\n  gap: 100px;\n}\n\n.footer-links a {\n  color: #FAFAFA;\n  text-decoration: none;\n  font-size: 16px;\n}\n\n.footer-links a:hover {\n  text-decoration: underline;\n}\n\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background: rgba(0, 0, 0, 0.7);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: #2a2a2a;\n  color: white;\n  width: 90%;\n  max-width: 500px;\n  padding: 20px;\n  border-radius: 8px;\n  text-align: center;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);\n}\n\n.profile-image {\n  width: 100px;\n  height: 100px;\n  background-color: gray;\n  border-radius: 50%;\n  margin: 0 auto 20px;\n}\n\n.profile-image img {\n  width: 100px;\n  height: 100px;\n  background-color: gray;\n  border-radius: 50%;\n  margin: 0 auto 20px;\n}\n\n.user-info-display p {\n  margin: 10px 0;\n}\n\n.edit-button {\n  margin-top: 20px;\n  padding: 10px;\n  background-color: #15513775;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.edit-button:hover {\n  background-color: #15513775;\n}\n\n.gaming-info {\n  margin-top: 20px;\n}\n\n.gaming-info h2 {\n  margin-bottom: 10px;\n}\n\n.game-stats {\n  display: flex;\n  justify-content: space-around;\n  margin-left: 20px;\n}\n\n.game-tier img,\n.most-champions img {\n  width: 80px;\n  height: 80px;\n}\n\n.game-tier p {\n  font-size: 12px;\n}\n\n.champion-icons img {\n  margin: 0 5px;\n}\n\n.delete-button {\n  margin-right: 30px;\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.delete-button:hover {\n  background-color: white;\n  color: black;\n}\n\n.close-button {\n  margin-left: 30px;\n  padding: 10px;\n  background-color: transparent;\n  border: 1px solid white;\n  color: white;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\n.close-button:hover {\n  background-color: white;\n  color: black;\n}\n\n/* 비디오 스타일 */\n.background-video {\n  position: relative;\n  /* 자식 요소를 기준으로 위치 설정 가능 */\n  width: 100vw;\n  height: 100vh;\n}\n\n.background-video video {\n  width: 100vw;\n  height: 100vh;\n  object-fit: cover;\n  /* 비디오 크기를 화면에 맞게 조절 */\n  position: absolute;\n  /* 비디오 위치 지정 */\n  z-index: 0;\n  /* 기본값으로 설정 */\n}\n\n.overlay-text {\n  position: absolute;\n  /* 비디오 위에 텍스트 겹치기 */\n  top: 30%;\n  /* 화면의 중앙 */\n  left: 50%;\n  /* 화면의 중앙 */\n  transform: translate(-50%, -50%);\n  /* 정확히 중앙 정렬 */\n  text-align: center;\n  /* 텍스트 중앙 정렬 */\n  color: white;\n  /* 텍스트 색상 */\n  z-index: 1;\n  /* 비디오보다 위에 표시 */\n}\n\n.overlay-text h1 {\n  font-size: 3rem;\n  /* 원하는 크기로 조정 */\n  margin-bottom: 10px;\n}\n\n.overlay-text p {\n  font-size: 1.5rem;\n}\n\n.match-button {\n  position: absolute;\n  flex: 1;\n  width: 200px;\n  height: 50px;\n  font-size: 16px;\n  background-color: #155137;\n  border: none;\n  color: #fff;\n  border-radius: 25px;\n  cursor: pointer;\n  text-align: center;\n  transform: translate(-50%, 140%);\n}\n\n.match-button:hover {\n  background-color: #15513775;\n}\n\n.champion-list {\n  display: flex;\n  gap: 5px;\n  /* 모달 크기에 맞게 간격 축소 */\n  justify-content: center;\n}\n\n.champion-item {\n  width: 50px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n  position: relative;\n}\n\n.champion-item img {\n  width: 50px;\n  /* 기존 120px → 50px로 축소 */\n  height: 50px;\n}\n\n.champion-item p {\n  margin: 5px 0 0;\n  /* 위쪽 간격 줄이기 */\n  font-size: 10px;\n  /* 기존 20px → 12px */\n  font-weight: bold;\n  white-space: normal;\n  /* 줄바꿈 허용 */\n  word-break: keep-all;\n  /* 단어 단위 줄바꿈 */\n}\n\n.most-champions-title {\n  font-size: 18px;\n  /* 기존 24px → 18px */\n  font-weight: bold;\n  text-align: center;\n  width: 100%;\n  margin-bottom: 10px;\n  /* 간격 조정 */\n}\n\n.champion-item .mastery-icon {\n  position: absolute;\n  bottom: 36px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 30px;\n  height: 20px;\n  z-index: 2;\n}\n\n.champion-item .high-mastery-img {\n  position: absolute;\n  bottom: 26px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 30px;\n  height: 20px;\n  z-index: 2;\n}\n\n\n.most-champions .champion-item .mastery-wrapper {\n  position: absolute;\n  bottom: -6px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 30px;\n  height: 20px;\n  z-index: 3;\n}\n\n\n.most-champions .champion-item .high-mastery-icon {\n  bottom: 28px;\n  width: 15px;\n  height: 8px;\n  position: absolute;\n  left: 8px;\n}\n\n.most-champions .champion-item .high-mastery-level {\n  bottom: 22px;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 8px;\n  font-weight: bold;\n  color: #212121;\n  z-index: 4;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}