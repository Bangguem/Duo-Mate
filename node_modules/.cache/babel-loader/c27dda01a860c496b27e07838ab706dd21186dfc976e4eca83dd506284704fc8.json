{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.find.js\";\nimport { io } from \"socket.io-client\";\nexport default {\n  data() {\n    return {\n      socket: null,\n      messages: [],\n      newMessage: \"\",\n      match: null,\n      matchId: null,\n      userInfo: null,\n      opponentDisconnected: false,\n      iconSize: \"60px\"\n    };\n  },\n  computed: {\n    getOpponent() {\n      if (!this.match?.players || !this.userInfo) return {};\n      return this.match.players.find(p => p.userid !== this.userInfo.userid) || {};\n    },\n    getOpponentProfileImage() {\n      return this.getOpponent?.profileImage || (this.getOpponent?.summonerInfo?.profileIconId ? `http://ddragon.leagueoflegends.com/cdn/14.22.1/img/profileicon/${this.getOpponent.summonerInfo.profileIconId}.png` : \"/icons/default-profile.png\");\n    },\n    opponentPositions() {\n      const pos = this.getOpponent.position;\n      if (!pos) return [\"없음\"];\n      return Array.isArray(pos) ? pos.slice(0, 2) : String(pos).split(\",\").slice(0, 2);\n    },\n    getOpponentChampions() {\n      return this.getOpponent?.top5Champions?.slice(0, 3) || [];\n    },\n    getPositionIcon() {\n      return position => ({\n        탑: \"/icons/top.png\",\n        정글: \"/icons/jungle.png\",\n        미드: \"/icons/mid.png\",\n        원딜: \"/icons/adc.png\",\n        서포터: \"/icons/support.png\",\n        없음: \"/icons/none.png\"\n      })[position] || \"/icons/none.png\";\n    },\n    opponentMicrophoneIcon() {\n      const mic = String(this.getOpponent.microphone || \"\").trim().toLowerCase();\n      if (mic === \"가능\" || mic === \"사용\") return \"/icons/mic-on.png\";\n      return \"/icons/mic-off.png\";\n    }\n  },\n  methods: {\n    setupSocket() {\n      // 이미 연결되었거나, 매칭 정보(roomName)이 없으면 초기화 중단\n      if (this.socket || !this.match?.roomName) return;\n      this.socket = io(`${process.env.VUE_APP_API_URL}`, {\n        withCredentials: true\n      });\n      this.socket.on(\"connect\", () => {\n        if (this.match.roomName) {\n          this.socket.emit(\"join room\", {\n            roomName: this.match.roomName\n          });\n        }\n      });\n      this.socket.on(\"chat message\", data => {\n        this.messages.push(data);\n      });\n      this.socket.on(\"user disconnected\", data => {\n        this.opponentDisconnected = true;\n        this.messages.push({\n          type: \"system\",\n          message: `${data.nickname}님이 채팅방을 나갔습니다.`\n        });\n        setTimeout(() => this.$router.push(\"/match\"), 2000);\n      });\n\n      // ◀ 서버에서 발생한 매칭 에러 처리\n      this.socket.on(\"matchError\", ({\n        message\n      }) => {\n        alert(`⚠️ 매칭 오류: ${message}`);\n        this.$router.push(\"/match\");\n      });\n      this.socket.on(\"connect_error\", err => {\n        console.error(\"❌ 소켓 연결 에러:\", err);\n      });\n    },\n    leaveRoom() {\n      if (this.socket) {\n        if (!this.opponentDisconnected) {\n          this.socket.emit(\"leave room\", {\n            matchId: this.matchId,\n            userId: this.userInfo?.userid,\n            nickname: this.userInfo?.nickname\n          });\n        }\n        this.socket.disconnect();\n      }\n      this.$router.push(\"/match\");\n    },\n    sendMessage() {\n      if (this.newMessage.trim() && this.socket) {\n        this.socket.emit(\"chat message\", {\n          matchId: this.matchId,\n          message: this.newMessage,\n          timestamp: new Date().toISOString()\n        });\n        this.newMessage = \"\";\n      }\n    },\n    formatTime(ts) {\n      return ts ? new Date(ts).toLocaleTimeString(\"ko-KR\", {\n        hour: \"2-digit\",\n        minute: \"2-digit\"\n      }) : \"\";\n    },\n    async fetchUserInfo() {\n      try {\n        const res = await fetch(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          credentials: \"include\"\n        });\n        const data = await res.json();\n        if (data.loggedIn) this.userInfo = data.user;\n      } catch (e) {\n        console.error(\"❌ 사용자 정보 조회 오류:\", e);\n      }\n    },\n    async fetchMatchInfo() {\n      if (!this.matchId) return;\n      try {\n        const res = await fetch(`${process.env.VUE_APP_API_URL}/match/get/${this.matchId}`, {\n          credentials: \"include\"\n        });\n        const data = await res.json();\n        if (data.success) {\n          this.match = data.match;\n          this.setupSocket();\n        }\n      } catch (e) {\n        console.error(\"❌ 매칭 정보 가져오기 오류:\", e);\n      }\n    }\n  },\n  async mounted() {\n    this.matchId = this.$route.query.matchId;\n    await this.fetchUserInfo();\n    await this.fetchMatchInfo();\n  },\n  beforeUnmount() {\n    if (this.socket) {\n      if (!this.opponentDisconnected) {\n        this.socket.emit(\"leave room\", {\n          matchId: this.matchId,\n          userId: this.userInfo?.userid,\n          nickname: this.userInfo?.nickname\n        });\n      }\n      this.socket.disconnect();\n      this.socket = null;\n    }\n  }\n};","map":{"version":3,"names":["io","data","socket","messages","newMessage","match","matchId","userInfo","opponentDisconnected","iconSize","computed","getOpponent","players","find","p","userid","getOpponentProfileImage","profileImage","summonerInfo","profileIconId","opponentPositions","pos","position","Array","isArray","slice","String","split","getOpponentChampions","top5Champions","getPositionIcon","탑","정글","미드","원딜","서포터","없음","opponentMicrophoneIcon","mic","microphone","trim","toLowerCase","methods","setupSocket","roomName","process","env","VUE_APP_API_URL","withCredentials","on","emit","push","type","message","nickname","setTimeout","$router","alert","err","console","error","leaveRoom","userId","disconnect","sendMessage","timestamp","Date","toISOString","formatTime","ts","toLocaleTimeString","hour","minute","fetchUserInfo","res","fetch","credentials","json","loggedIn","user","e","fetchMatchInfo","success","mounted","$route","query","beforeUnmount"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n        <!-- 왼쪽: 상대방 정보 -->\n        <div class=\"opponent-info\">\n            <div class=\"opponent-profile-picture\">\n                <img :src=\"getOpponentProfileImage\" alt=\"프로필 사진\" class=\"profile-image\" />\n            </div>\n\n            <h2>{{ getOpponent.nickname || \"상대방 닉네임\" }}</h2>\n            <p class=\"summoner-name\">@{{ getOpponent.SummonerName || \"소환사 아이디 없음\" }}{{ '#' + getOpponent.Tag || \"\" }}\n            </p>\n\n            <div class=\"opponent-position-mic-container\">\n                <div v-for=\"(pos, index) in opponentPositions\" :key=\"index\" class=\"position-item\">\n                    <img :src=\"getPositionIcon(pos)\" alt=\"포지션 아이콘\" class=\"position-icon\" />\n                    <p class=\"position-text\">{{ pos }}</p>\n                </div>\n                <div class=\"mic-item\">\n                    <img :src=\"opponentMicrophoneIcon\" alt=\"마이크 상태 아이콘\" class=\"mic-icon\" />\n                    <p class=\"mic-text\">{{ getOpponent.microphone || \"정보 없음\" }}</p>\n                </div>\n            </div>\n\n            <div class=\"ingame-info\">\n                <div class=\"ingame-tier\">\n                    <img :src=\"`https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/${(getOpponent.summonerRank?.tier || 'unranked').toLowerCase()}.png`\"\n                        alt=\"Game Tier\" class=\"ingame-icon\" />\n                    <p>{{ getOpponent.summonerRank?.tier || \"Unranked\" }} {{ getOpponent.summonerRank?.rank || \"\" }}</p>\n                </div>\n\n                <!-- ✅ Most Champions (한 줄 정렬 + 마스터리 적용) -->\n                <div class=\"most-played-champions\" v-if=\"getOpponentChampions.length > 0\">\n                    <div class=\"champion-list\">\n                        <div v-for=\"(champion, index) in getOpponentChampions\" :key=\"index\" class=\"champion-item\">\n\n                            <img :src=\"champion.iconUrl\" class=\"champion-icon\" alt=\"Champion Image\" />\n\n                            <div class=\"mastery-wrapper\">\n                                <img v-if=\"champion.masteryLevel < 10\"\n                                    :src=\"require(`@/assets/Mastery/${champion.masteryLevel}.webp`)\"\n                                    class=\"mastery-icon\" alt=\"Mastery Level\" />\n                                <img v-if=\"champion.masteryLevel >= 10\" src=\"@/assets/Mastery/10.webp\"\n                                    class=\"mastery-icon\" alt=\"Mastery Level\" />\n\n                                <div class=\"mastery-box\">\n                                    <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\"\n                                        alt=\"High Mastery\" />\n                                    <p class=\"high-mastery-level\">{{ champion.masteryLevel }}</p>\n                                </div>\n                            </div>\n\n                            <p class=\"champion-name\">{{ champion.championName }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- ✅ 채팅창 -->\n        <div class=\"chat-room\">\n            <div class=\"chat-header\">\n                <h1>채팅방</h1>\n                <button @click=\"leaveRoom\" class=\"leave-button\">나가기</button>\n            </div>\n\n            <div class=\"chat-window\" ref=\"chatWindow\">\n                <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"chat-message\"\n                    :class=\"{ 'my-message': message.username === userInfo?.nickname, 'system-message': message.type === 'system' }\">\n                    <div class=\"message-content\">\n                        <span class=\"message-text\">{{ message.message }}</span>\n                    </div>\n                    <div class=\"message-meta\">\n                        <span class=\"message-time\">{{ formatTime(message.timestamp) }}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"chat-input\">\n                <input v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"메시지를 입력하세요...\" />\n                <button @click=\"sendMessage\">전송</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n    data() {\n        return {\n            socket: null,\n            messages: [],\n            newMessage: \"\",\n            match: null,\n            matchId: null,\n            userInfo: null,\n            opponentDisconnected: false,\n            iconSize: \"60px\",\n        };\n    },\n    computed: {\n        getOpponent() {\n            if (!this.match?.players || !this.userInfo) return {};\n            return (\n                this.match.players.find((p) => p.userid !== this.userInfo.userid) || {}\n            );\n        },\n        getOpponentProfileImage() {\n            return (\n                this.getOpponent?.profileImage ||\n                (this.getOpponent?.summonerInfo?.profileIconId\n                    ? `http://ddragon.leagueoflegends.com/cdn/14.22.1/img/profileicon/${this.getOpponent.summonerInfo.profileIconId\n                    }.png`\n                    : \"/icons/default-profile.png\")\n            );\n        },\n        opponentPositions() {\n            const pos = this.getOpponent.position;\n            if (!pos) return [\"없음\"];\n            return Array.isArray(pos) ? pos.slice(0, 2) : String(pos).split(\",\").slice(0, 2);\n        },\n        getOpponentChampions() {\n            return this.getOpponent?.top5Champions?.slice(0, 3) || [];\n        },\n        getPositionIcon() {\n            return (position) =>\n            ({\n                탑: \"/icons/top.png\",\n                정글: \"/icons/jungle.png\",\n                미드: \"/icons/mid.png\",\n                원딜: \"/icons/adc.png\",\n                서포터: \"/icons/support.png\",\n                없음: \"/icons/none.png\",\n            }[position] || \"/icons/none.png\");\n        },\n        opponentMicrophoneIcon() {\n            const mic = String(this.getOpponent.microphone || \"\").trim().toLowerCase();\n            if (mic === \"가능\" || mic === \"사용\") return \"/icons/mic-on.png\";\n            return \"/icons/mic-off.png\";\n        },\n    },\n    methods: {\n        setupSocket() {\n            // 이미 연결되었거나, 매칭 정보(roomName)이 없으면 초기화 중단\n            if (this.socket || !this.match?.roomName) return;\n\n            this.socket = io(`${process.env.VUE_APP_API_URL}`, {\n                withCredentials: true,\n            });\n\n            this.socket.on(\"connect\", () => {\n                if (this.match.roomName) {\n                    this.socket.emit(\"join room\", { roomName: this.match.roomName });\n                }\n            });\n\n            this.socket.on(\"chat message\", (data) => {\n                this.messages.push(data);\n            });\n\n            this.socket.on(\"user disconnected\", (data) => {\n                this.opponentDisconnected = true;\n                this.messages.push({\n                    type: \"system\",\n                    message: `${data.nickname}님이 채팅방을 나갔습니다.`,\n                });\n                setTimeout(() => this.$router.push(\"/match\"), 2000);\n            });\n\n            // ◀ 서버에서 발생한 매칭 에러 처리\n            this.socket.on(\"matchError\", ({ message }) => {\n                alert(`⚠️ 매칭 오류: ${message}`);\n                this.$router.push(\"/match\");\n            });\n\n            this.socket.on(\"connect_error\", (err) => {\n                console.error(\"❌ 소켓 연결 에러:\", err);\n            });\n        },\n\n        leaveRoom() {\n            if (this.socket) {\n                if (!this.opponentDisconnected) {\n                    this.socket.emit(\"leave room\", {\n                        matchId: this.matchId,\n                        userId: this.userInfo?.userid,\n                        nickname: this.userInfo?.nickname,\n                    });\n                }\n                this.socket.disconnect();\n            }\n            this.$router.push(\"/match\");\n        },\n\n        sendMessage() {\n            if (this.newMessage.trim() && this.socket) {\n                this.socket.emit(\"chat message\", {\n                    matchId: this.matchId,\n                    message: this.newMessage,\n                    timestamp: new Date().toISOString(),\n                });\n                this.newMessage = \"\";\n            }\n        },\n\n        formatTime(ts) {\n            return ts\n                ? new Date(ts).toLocaleTimeString(\"ko-KR\", {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                })\n                : \"\";\n        },\n\n        async fetchUserInfo() {\n            try {\n                const res = await fetch(\n                    `${process.env.VUE_APP_API_URL}/auth/check-login`,\n                    {\n                        credentials: \"include\",\n                    }\n                );\n                const data = await res.json();\n                if (data.loggedIn) this.userInfo = data.user;\n            } catch (e) {\n                console.error(\"❌ 사용자 정보 조회 오류:\", e);\n            }\n        },\n\n        async fetchMatchInfo() {\n            if (!this.matchId) return;\n            try {\n                const res = await fetch(\n                    `${process.env.VUE_APP_API_URL}/match/get/${this.matchId}`,\n                    { credentials: \"include\" }\n                );\n                const data = await res.json();\n                if (data.success) {\n                    this.match = data.match;\n                    this.setupSocket();\n                }\n            } catch (e) {\n                console.error(\"❌ 매칭 정보 가져오기 오류:\", e);\n            }\n        },\n    },\n\n    async mounted() {\n        this.matchId = this.$route.query.matchId;\n        await this.fetchUserInfo();\n        await this.fetchMatchInfo();\n    },\n\n    beforeUnmount() {\n        if (this.socket) {\n            if (!this.opponentDisconnected) {\n                this.socket.emit(\"leave room\", {\n                    matchId: this.matchId,\n                    userId: this.userInfo?.userid,\n                    nickname: this.userInfo?.nickname,\n                });\n            }\n            this.socket.disconnect();\n            this.socket = null;\n        }\n    },\n};\n</script>\n\n<style scoped>\n/* ✅ 전체 컨테이너 */\n.chat-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: stretch;\n    width: 100vw;\n    min-height: 100vh;\n    /* 최소 높이 100vh 유지 */\n    overflow: auto;\n    /* 창 크기가 줄어들면 스크롤 생성 */\n    flex-wrap: nowrap;\n    /* 상대방 정보와 채팅창이 줄바꿈되지 않도록 고정 */\n}\n\n/* ✅ 상대방 정보 영역 */\n.opponent-info {\n    flex: 0.3;\n    background-color: rgb(25, 25, 25);\n    color: white;\n    text-align: center;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    /* 내부 요소 스크롤 가능 */\n}\n\n/* ✅ 상대방 프로필 사진 */\n.opponent-profile-picture {\n    width: 80px;\n    height: 80px;\n    border-radius: 90%;\n    overflow: hidden;\n    margin-bottom: 10px;\n}\n\n.opponent-profile-picture img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n/* ✅ 상대방 닉네임 */\n.opponent-info h2 {\n    margin: 10px 0;\n}\n\n/* ✅ 소환사 아이디 스타일 */\n.summoner-name {\n    font-size: 14px;\n    color: #bbb;\n    margin-top: -5px;\n}\n\n/* ✅ 포지션 + 마이크 아이콘을 한 줄로 정렬 */\n.opponent-position-mic-container {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    justify-content: center;\n    margin-bottom: 15px;\n}\n\n/* ✅ 포지션 아이콘 스타일 */\n.position-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n.position-icon {\n    width: var(--icon-size, 60px);\n    height: var(--icon-size, 60px);\n}\n\n.position-text {\n    margin-top: 5px;\n    font-size: 14px;\n}\n\n/* ✅ 마이크 아이콘 스타일 */\n.mic-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n/* ✅ 마이크 ON 아이콘 (icons/mic-on.png) 크기 조절 */\n.mic-icon[src*=\"mic-on.png\"] {\n    width: 35px;\n    /* 원하는 크기로 변경 */\n    height: 60px;\n    /* 원하는 크기로 변경 */\n}\n\n/* ✅ 마이크 OFF 아이콘 (icons/mic-off.png) 크기 조절 */\n.mic-icon[src*=\"mic-off.png\"] {\n    width: 45px;\n    /* 원하는 크기로 변경 */\n    height: 60px;\n    /* 원하는 크기로 변경 */\n}\n\n.mic-text {\n    margin-top: 5px;\n    font-size: 14px;\n}\n\n/* ✅ 인게임 정보 */\n.ingame-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 20px;\n}\n\n/* ✅ Game Tier */\n.ingame-tier,\n.ingame-champions {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n/* ✅ Game Tier 아이콘 스타일 */\n.ingame-tier .ingame-icon {\n    width: 150px;\n    height: 150px;\n    margin-bottom: 5px;\n}\n\n/* ✅ Most Champions 영역 */\n.most-played-champions {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n}\n\n/* ✅ 챔피언 리스트 (한 줄로 정렬) */\n.champion-list {\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    /* 챔피언 아이콘 간격 */\n    justify-content: center;\n    width: 100%;\n}\n\n/* ✅ 챔피언 아이템 컨테이너 */\n.champion-item {\n    display: flex;\n    flex-direction: column;\n    /* 세로 정렬 */\n    align-items: center;\n    text-align: center;\n    position: relative;\n}\n\n/* ✅ 챔피언 아이콘 */\n.champion-icon {\n    width: 80px;\n    height: 80px;\n}\n\n/* ✅ 숙련도 아이콘 및 박스 */\n.mastery-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    margin-top: -10px;\n    /* 아이콘과 살짝 겹치게 */\n}\n\n/* ✅ 마스터리 아이콘 */\n.mastery-icon {\n    width: 40px;\n    height: 30px;\n    position: relative;\n}\n\n/* ✅ 마스터리 박스 스타일 (크기 1/4로 줄이고 내부 정렬) */\n.mastery-box {\n    position: relative;\n    width: 25px;\n    /* 마스터리 박스 크기 */\n    height: 15px;\n    display: flex;\n    justify-content: center;\n    /* 중앙 정렬 */\n    align-items: center;\n    /* 수직 중앙 정렬 */\n}\n\n/* ✅ 마스터리 박스 크기 */\n.high-mastery-icon {\n    width: 25px;\n    height: 10px;\n    position: relative;\n    /* 숫자를 내부에 넣기 위해 필요 */\n}\n\n/* ✅ 마스터리 숫자 (박스 내부 중앙 + 살짝 더 위로) */\n.high-mastery-level {\n    position: absolute;\n    top: 25%;\n    /* 기존보다 더 위로 */\n    left: 50%;\n    transform: translate(-50%, -85%);\n    /* Y축 이동량 미세 조정 */\n    font-size: 8px;\n    /* 글자 크기 유지 */\n    font-weight: bold;\n    color: #2c1b05;\n    /* 가독성을 위해 어두운 색상 */\n    text-align: center;\n    width: 100%;\n}\n\n/* ✅ 챔피언 이름을 맨 아래로 배치 */\n.champion-name {\n    margin-top: 10px;\n    /* 박스와 간격 조정 */\n    font-size: 16px;\n    font-weight: bold;\n}\n\n/* ✅ 채팅창 영역 */\n.chat-room {\n    flex: 0.7;\n    background-color: rgb(33, 33, 33);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    overflow: auto;\n    /* 내부 요소 스크롤 가능 */\n}\n\n/* ✅ 채팅 헤더 */\n.chat-header {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.leave-button {\n    padding: 8px 16px;\n    background-color: rgb(21, 81, 55);\n    color: white;\n    border: none;\n    border-radius: 45px;\n    cursor: pointer;\n}\n\n/* ✅ 채팅창 내부 스크롤 */\n.chat-window {\n    flex: 1;\n    overflow-y: auto;\n    width: 80%;\n    max-height: 70vh;\n    padding: 10px;\n    overscroll-behavior: contain;\n    /* 스크롤이 부모 요소로 전달되지 않도록 방지 */\n}\n\n/* ✅ 채팅 메시지 */\n.chat-message {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    align-items: flex-start;\n}\n\n.my-message {\n    align-items: flex-end;\n}\n\n/* ✅ 메시지 내용 */\n.message-content {\n    background: rgb(66, 66, 66);\n    padding: 10px;\n    border-radius: 45px;\n    max-width: 70%;\n}\n\n.my-message .message-content {\n    background: rgb(21, 81, 55);\n    color: white;\n    padding: 10px;\n    border-radius: 45px;\n}\n\n/* ✅ 메시지 시간 */\n.message-meta {\n    margin-top: 4px;\n}\n\n.message-time {\n    font-size: 12px;\n    color: #666;\n}\n\n/* ✅ 채팅 입력창 */\n.chat-input {\n    display: flex;\n    width: 90%;\n    padding: 10px;\n    background: rgb(66, 66, 66);\n    border-radius: 45px;\n    align-items: center;\n}\n\n.chat-input input {\n    flex: 1;\n    padding: 10px;\n    background: none;\n    color: white;\n    border: none;\n}\n\n.chat-input button {\n    padding: 10px 20px;\n    background: rgb(21, 81, 55);\n    color: white;\n    border: none;\n    border-radius: 45px;\n    cursor: pointer;\n}\n\n/* ✅ 작은 화면에서도 원본 크기 유지 */\n@media (max-width: 768px) {\n    .chat-container {\n        flex-direction: row;\n        /* 줄바꿈 방지 */\n        overflow: auto;\n        /* 전체 컨테이너에서 스크롤 가능하도록 설정 */\n    }\n\n    .opponent-info,\n    .chat-room {\n        height: 100vh;\n        /* 상대방 정보와 채팅창 높이 유지 */\n        overflow: auto;\n        /* 내부 스크롤 */\n    }\n}\n\n/* WebKit 기반 브라우저 (Chrome, Edge, Safari 등) */\n.chat-window::-webkit-scrollbar {\n    width: 8px;\n}\n\n.chat-window::-webkit-scrollbar-track {\n    background: rgb(33, 33, 33);\n    /* 채팅창 배경과 동일한 색상 */\n    border-radius: 10px;\n}\n\n.chat-window::-webkit-scrollbar-thumb {\n    background-color: rgb(85, 85, 85);\n    /* 배경보다 밝은 톤으로 대비 부여 */\n    border-radius: 10px;\n    border: 2px solid rgb(33, 33, 33);\n    /* 배경색과 동일한 테두리 */\n}\n\n.chat-window::-webkit-scrollbar-thumb:hover {\n    background-color: rgb(105, 105, 105);\n    /* 호버 시 살짝 더 밝게 */\n}\n\n/* Firefox */\n.chat-window {\n    scrollbar-width: thin;\n    scrollbar-color: rgb(85, 85, 85) rgb(33, 33, 33);\n    /* thumb 색상, track 색상 */\n}\n</style>\n"],"mappings":";;;AAsFA,SAASA,EAAC,QAAS,kBAAkB;AAErC,eAAe;EACXC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,MAAM,EAAE,IAAI;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE,IAAI;MACXC,OAAO,EAAE,IAAI;MACbC,QAAQ,EAAE,IAAI;MACdC,oBAAoB,EAAE,KAAK;MAC3BC,QAAQ,EAAE;IACd,CAAC;EACL,CAAC;EACDC,QAAQ,EAAE;IACNC,WAAWA,CAAA,EAAG;MACV,IAAI,CAAC,IAAI,CAACN,KAAK,EAAEO,OAAM,IAAK,CAAC,IAAI,CAACL,QAAQ,EAAE,OAAO,CAAC,CAAC;MACrD,OACI,IAAI,CAACF,KAAK,CAACO,OAAO,CAACC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,MAAK,KAAM,IAAI,CAACR,QAAQ,CAACQ,MAAM,KAAK,CAAC;IAE9E,CAAC;IACDC,uBAAuBA,CAAA,EAAG;MACtB,OACI,IAAI,CAACL,WAAW,EAAEM,YAAW,KAC5B,IAAI,CAACN,WAAW,EAAEO,YAAY,EAAEC,aAAY,GACvC,kEAAkE,IAAI,CAACR,WAAW,CAACO,YAAY,CAACC,aAAY,MACzG,GACH,4BAA4B;IAE1C,CAAC;IACDC,iBAAiBA,CAAA,EAAG;MAChB,MAAMC,GAAE,GAAI,IAAI,CAACV,WAAW,CAACW,QAAQ;MACrC,IAAI,CAACD,GAAG,EAAE,OAAO,CAAC,IAAI,CAAC;MACvB,OAAOE,KAAK,CAACC,OAAO,CAACH,GAAG,IAAIA,GAAG,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,IAAIC,MAAM,CAACL,GAAG,CAAC,CAACM,KAAK,CAAC,GAAG,CAAC,CAACF,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IACpF,CAAC;IACDG,oBAAoBA,CAAA,EAAG;MACnB,OAAO,IAAI,CAACjB,WAAW,EAAEkB,aAAa,EAAEJ,KAAK,CAAC,CAAC,EAAE,CAAC,KAAK,EAAE;IAC7D,CAAC;IACDK,eAAeA,CAAA,EAAG;MACd,OAAQR,QAAQ,IACf;QACGS,CAAC,EAAE,gBAAgB;QACnBC,EAAE,EAAE,mBAAmB;QACvBC,EAAE,EAAE,gBAAgB;QACpBC,EAAE,EAAE,gBAAgB;QACpBC,GAAG,EAAE,oBAAoB;QACzBC,EAAE,EAAE;MACR,CAAC,EAACd,QAAQ,KAAK,iBAAkB;IACrC,CAAC;IACDe,sBAAsBA,CAAA,EAAG;MACrB,MAAMC,GAAE,GAAIZ,MAAM,CAAC,IAAI,CAACf,WAAW,CAAC4B,UAAS,IAAK,EAAE,CAAC,CAACC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;MAC1E,IAAIH,GAAE,KAAM,IAAG,IAAKA,GAAE,KAAM,IAAI,EAAE,OAAO,mBAAmB;MAC5D,OAAO,oBAAoB;IAC/B;EACJ,CAAC;EACDI,OAAO,EAAE;IACLC,WAAWA,CAAA,EAAG;MACV;MACA,IAAI,IAAI,CAACzC,MAAK,IAAK,CAAC,IAAI,CAACG,KAAK,EAAEuC,QAAQ,EAAE;MAE1C,IAAI,CAAC1C,MAAK,GAAIF,EAAE,CAAC,GAAG6C,OAAO,CAACC,GAAG,CAACC,eAAe,EAAE,EAAE;QAC/CC,eAAe,EAAE;MACrB,CAAC,CAAC;MAEF,IAAI,CAAC9C,MAAM,CAAC+C,EAAE,CAAC,SAAS,EAAE,MAAM;QAC5B,IAAI,IAAI,CAAC5C,KAAK,CAACuC,QAAQ,EAAE;UACrB,IAAI,CAAC1C,MAAM,CAACgD,IAAI,CAAC,WAAW,EAAE;YAAEN,QAAQ,EAAE,IAAI,CAACvC,KAAK,CAACuC;UAAS,CAAC,CAAC;QACpE;MACJ,CAAC,CAAC;MAEF,IAAI,CAAC1C,MAAM,CAAC+C,EAAE,CAAC,cAAc,EAAGhD,IAAI,IAAK;QACrC,IAAI,CAACE,QAAQ,CAACgD,IAAI,CAAClD,IAAI,CAAC;MAC5B,CAAC,CAAC;MAEF,IAAI,CAACC,MAAM,CAAC+C,EAAE,CAAC,mBAAmB,EAAGhD,IAAI,IAAK;QAC1C,IAAI,CAACO,oBAAmB,GAAI,IAAI;QAChC,IAAI,CAACL,QAAQ,CAACgD,IAAI,CAAC;UACfC,IAAI,EAAE,QAAQ;UACdC,OAAO,EAAE,GAAGpD,IAAI,CAACqD,QAAQ;QAC7B,CAAC,CAAC;QACFC,UAAU,CAAC,MAAM,IAAI,CAACC,OAAO,CAACL,IAAI,CAAC,QAAQ,CAAC,EAAE,IAAI,CAAC;MACvD,CAAC,CAAC;;MAEF;MACA,IAAI,CAACjD,MAAM,CAAC+C,EAAE,CAAC,YAAY,EAAE,CAAC;QAAEI;MAAQ,CAAC,KAAK;QAC1CI,KAAK,CAAC,aAAaJ,OAAO,EAAE,CAAC;QAC7B,IAAI,CAACG,OAAO,CAACL,IAAI,CAAC,QAAQ,CAAC;MAC/B,CAAC,CAAC;MAEF,IAAI,CAACjD,MAAM,CAAC+C,EAAE,CAAC,eAAe,EAAGS,GAAG,IAAK;QACrCC,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEF,GAAG,CAAC;MACrC,CAAC,CAAC;IACN,CAAC;IAEDG,SAASA,CAAA,EAAG;MACR,IAAI,IAAI,CAAC3D,MAAM,EAAE;QACb,IAAI,CAAC,IAAI,CAACM,oBAAoB,EAAE;UAC5B,IAAI,CAACN,MAAM,CAACgD,IAAI,CAAC,YAAY,EAAE;YAC3B5C,OAAO,EAAE,IAAI,CAACA,OAAO;YACrBwD,MAAM,EAAE,IAAI,CAACvD,QAAQ,EAAEQ,MAAM;YAC7BuC,QAAQ,EAAE,IAAI,CAAC/C,QAAQ,EAAE+C;UAC7B,CAAC,CAAC;QACN;QACA,IAAI,CAACpD,MAAM,CAAC6D,UAAU,CAAC,CAAC;MAC5B;MACA,IAAI,CAACP,OAAO,CAACL,IAAI,CAAC,QAAQ,CAAC;IAC/B,CAAC;IAEDa,WAAWA,CAAA,EAAG;MACV,IAAI,IAAI,CAAC5D,UAAU,CAACoC,IAAI,CAAC,KAAK,IAAI,CAACtC,MAAM,EAAE;QACvC,IAAI,CAACA,MAAM,CAACgD,IAAI,CAAC,cAAc,EAAE;UAC7B5C,OAAO,EAAE,IAAI,CAACA,OAAO;UACrB+C,OAAO,EAAE,IAAI,CAACjD,UAAU;UACxB6D,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;QACtC,CAAC,CAAC;QACF,IAAI,CAAC/D,UAAS,GAAI,EAAE;MACxB;IACJ,CAAC;IAEDgE,UAAUA,CAACC,EAAE,EAAE;MACX,OAAOA,EAAC,GACF,IAAIH,IAAI,CAACG,EAAE,CAAC,CAACC,kBAAkB,CAAC,OAAO,EAAE;QACvCC,IAAI,EAAE,SAAS;QACfC,MAAM,EAAE;MACZ,CAAC,IACC,EAAE;IACZ,CAAC;IAED,MAAMC,aAAaA,CAAA,EAAG;MAClB,IAAI;QACA,MAAMC,GAAE,GAAI,MAAMC,KAAK,CACnB,GAAG9B,OAAO,CAACC,GAAG,CAACC,eAAe,mBAAmB,EACjD;UACI6B,WAAW,EAAE;QACjB,CACJ,CAAC;QACD,MAAM3E,IAAG,GAAI,MAAMyE,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,IAAI5E,IAAI,CAAC6E,QAAQ,EAAE,IAAI,CAACvE,QAAO,GAAIN,IAAI,CAAC8E,IAAI;MAChD,EAAE,OAAOC,CAAC,EAAE;QACRrB,OAAO,CAACC,KAAK,CAAC,iBAAiB,EAAEoB,CAAC,CAAC;MACvC;IACJ,CAAC;IAED,MAAMC,cAAcA,CAAA,EAAG;MACnB,IAAI,CAAC,IAAI,CAAC3E,OAAO,EAAE;MACnB,IAAI;QACA,MAAMoE,GAAE,GAAI,MAAMC,KAAK,CACnB,GAAG9B,OAAO,CAACC,GAAG,CAACC,eAAe,cAAc,IAAI,CAACzC,OAAO,EAAE,EAC1D;UAAEsE,WAAW,EAAE;QAAU,CAC7B,CAAC;QACD,MAAM3E,IAAG,GAAI,MAAMyE,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7B,IAAI5E,IAAI,CAACiF,OAAO,EAAE;UACd,IAAI,CAAC7E,KAAI,GAAIJ,IAAI,CAACI,KAAK;UACvB,IAAI,CAACsC,WAAW,CAAC,CAAC;QACtB;MACJ,EAAE,OAAOqC,CAAC,EAAE;QACRrB,OAAO,CAACC,KAAK,CAAC,kBAAkB,EAAEoB,CAAC,CAAC;MACxC;IACJ;EACJ,CAAC;EAED,MAAMG,OAAOA,CAAA,EAAG;IACZ,IAAI,CAAC7E,OAAM,GAAI,IAAI,CAAC8E,MAAM,CAACC,KAAK,CAAC/E,OAAO;IACxC,MAAM,IAAI,CAACmE,aAAa,CAAC,CAAC;IAC1B,MAAM,IAAI,CAACQ,cAAc,CAAC,CAAC;EAC/B,CAAC;EAEDK,aAAaA,CAAA,EAAG;IACZ,IAAI,IAAI,CAACpF,MAAM,EAAE;MACb,IAAI,CAAC,IAAI,CAACM,oBAAoB,EAAE;QAC5B,IAAI,CAACN,MAAM,CAACgD,IAAI,CAAC,YAAY,EAAE;UAC3B5C,OAAO,EAAE,IAAI,CAACA,OAAO;UACrBwD,MAAM,EAAE,IAAI,CAACvD,QAAQ,EAAEQ,MAAM;UAC7BuC,QAAQ,EAAE,IAAI,CAAC/C,QAAQ,EAAE+C;QAC7B,CAAC,CAAC;MACN;MACA,IAAI,CAACpD,MAAM,CAAC6D,UAAU,CAAC,CAAC;MACxB,IAAI,CAAC7D,MAAK,GAAI,IAAI;IACtB;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}