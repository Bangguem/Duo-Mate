{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, Fragment as _Fragment } from \"vue\";\nconst _hoisted_1 = {\n  class: \"update-detail-container\"\n};\nconst _hoisted_2 = {\n  key: 0,\n  class: \"loading\"\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"error\"\n};\nconst _hoisted_4 = {\n  key: 2,\n  class: \"update-detail-card\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = {\n  class: \"form-buttons\"\n};\nconst _hoisted_7 = {\n  class: \"update-header\"\n};\nconst _hoisted_8 = {\n  class: \"update-meta\"\n};\nconst _hoisted_9 = [\"innerHTML\"];\nconst _hoisted_10 = {\n  key: 0,\n  class: \"action-buttons\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$data.loading ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, _cache[6] || (_cache[6] = [_createElementVNode(\"h2\", null, \"로딩 중...\", -1 /* HOISTED */)]))) : $data.error ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, _cache[7] || (_cache[7] = [_createElementVNode(\"h2\", null, \"업데이트를 불러오지 못했습니다.\", -1 /* HOISTED */)]))) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_createCommentVNode(\" 수정 모드 \"), $data.isEditing ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_cache[9] || (_cache[9] = _createElementVNode(\"h2\", null, \"업데이트 수정\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[3] || (_cache[3] = _withModifiers((...args) => $options.updateUpdate && $options.updateUpdate(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.editedTitle = $event),\n    type: \"text\",\n    required: \"\",\n    class: \"input-field\",\n    placeholder: \"제목 입력\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedTitle]]), _withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.editedContent = $event),\n    required: \"\",\n    class: \"textarea-field\",\n    placeholder: \"내용 입력\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.editedContent]]), _createElementVNode(\"div\", _hoisted_6, [_cache[8] || (_cache[8] = _createElementVNode(\"button\", {\n    type: \"submit\",\n    class: \"save-btn\"\n  }, \"수정 완료\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.cancelEdit && $options.cancelEdit(...args)),\n    class: \"cancel-btn\"\n  }, \"취소\")])], 32 /* NEED_HYDRATION */)])) : (_openBlock(), _createElementBlock(_Fragment, {\n    key: 1\n  }, [_createCommentVNode(\" 보기 모드 \"), _createElementVNode(\"div\", null, [_createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"h1\", null, _toDisplayString($data.update.title), 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"span\", null, \"작성일: \" + _toDisplayString($options.formatDate($data.update.date)), 1 /* TEXT */)])]), _createElementVNode(\"p\", {\n    class: \"update-content\",\n    innerHTML: $options.convertNewLinesToBreaks($data.update.content)\n  }, null, 8 /* PROPS */, _hoisted_9), _createCommentVNode(\" ✅ Admin만 수정/삭제 버튼 표시 \"), $options.isAdmin ? (_openBlock(), _createElementBlock(\"div\", _hoisted_10, [_createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.enterEditMode && $options.enterEditMode(...args)),\n    class: \"edit-btn\"\n  }, \"✏️ 수정\"), _createElementVNode(\"button\", {\n    onClick: _cache[5] || (_cache[5] = (...args) => $options.deleteUpdate && $options.deleteUpdate(...args)),\n    class: \"delete-btn\"\n  }, \"🗑 삭제\")])) : _createCommentVNode(\"v-if\", true)])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */))]))]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","$data","loading","_hoisted_2","_cache","_createElementVNode","error","_hoisted_3","_hoisted_4","_createCommentVNode","isEditing","_hoisted_5","onSubmit","_withModifiers","args","$options","updateUpdate","$event","editedTitle","type","required","placeholder","editedContent","_hoisted_6","onClick","cancelEdit","_Fragment","_hoisted_7","_toDisplayString","update","title","_hoisted_8","formatDate","date","innerHTML","convertNewLinesToBreaks","content","_hoisted_9","isAdmin","_hoisted_10","enterEditMode","deleteUpdate"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/UpdateDetail.vue"],"sourcesContent":["<template>\n  <div class=\"update-detail-container\">\n    <div v-if=\"loading\" class=\"loading\">\n      <h2>로딩 중...</h2>\n    </div>\n    <div v-else-if=\"error\" class=\"error\">\n      <h2>업데이트를 불러오지 못했습니다.</h2>\n    </div>\n    <div v-else class=\"update-detail-card\">\n      <!-- 수정 모드 -->\n      <div v-if=\"isEditing\">\n        <h2>업데이트 수정</h2>\n        <form @submit.prevent=\"updateUpdate\">\n          <input v-model=\"editedTitle\" type=\"text\" required class=\"input-field\" placeholder=\"제목 입력\" />\n          <textarea v-model=\"editedContent\" required class=\"textarea-field\" placeholder=\"내용 입력\"></textarea>\n          <div class=\"form-buttons\">\n            <button type=\"submit\" class=\"save-btn\">수정 완료</button>\n            <button type=\"button\" @click=\"cancelEdit\" class=\"cancel-btn\">취소</button>\n          </div>\n        </form>\n      </div>\n\n      <!-- 보기 모드 -->\n      <div v-else>\n        <div class=\"update-header\">\n          <h1>{{ update.title }}</h1>\n          <div class=\"update-meta\">\n            <span>작성일: {{ formatDate(update.date) }}</span>\n          </div>\n        </div>\n        <p class=\"update-content\" v-html=\"convertNewLinesToBreaks(update.content)\"></p>\n\n        <!-- ✅ Admin만 수정/삭제 버튼 표시 -->\n        <div v-if=\"isAdmin\" class=\"action-buttons\">\n          <button @click=\"enterEditMode\" class=\"edit-btn\">✏️ 수정</button>\n          <button @click=\"deleteUpdate\" class=\"delete-btn\">🗑 삭제</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  props: ['id'],\n  data() {\n    return {\n      update: null,\n      loading: true,\n      error: false,\n      isEditing: false,\n      editedTitle: '',\n      editedContent: '',\n      currentUser: null // ✅ 로그인 사용자 정보\n    };\n  },\n  computed: {\n    // ✅ Admin 여부 판단\n    isAdmin() {\n      return this.currentUser?.userid === 'Admin';\n    }\n  },\n  methods: {\n    async fetchUpdate() {\n      this.loading = true;\n      this.error = false;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/updates/${this.id}`);\n        this.update = response.data;\n        this.editedTitle = response.data.title;\n        this.editedContent = response.data.content;\n      } catch (err) {\n        console.error('업데이트를 가져오는 중 오류:', err);\n        this.error = true;\n      } finally {\n        this.loading = false;\n      }\n    },\n\n    async checkLogin() {\n      try {\n        const res = await axios.get(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          withCredentials: true\n        });\n        if (res.data.loggedIn) {\n          this.currentUser = res.data.user;\n        }\n      } catch (err) {\n        console.error('로그인 정보 확인 실패:', err);\n        this.currentUser = null;\n      }\n    },\n\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    },\n\n    convertNewLinesToBreaks(text) {\n      return text ? text.replace(/\\n/g, '<br>') : text;\n    },\n\n    enterEditMode() {\n      this.isEditing = true;\n    },\n\n    cancelEdit() {\n      this.isEditing = false;\n      this.editedTitle = this.update.title;\n      this.editedContent = this.update.content;\n    },\n\n    async updateUpdate() {\n      try {\n        const response = await axios.put(\n          `${process.env.VUE_APP_API_URL}/api/updates/${this.id}`,\n          {\n            title: this.editedTitle,\n            content: this.editedContent\n          },\n          { withCredentials: true }\n        );\n        this.update = response.data;\n        this.isEditing = false;\n        alert('업데이트가 수정되었습니다.');\n      } catch (err) {\n        console.error('업데이트 수정 중 오류:', err.response ? err.response.data : err);\n        alert('업데이트 수정에 실패했습니다.');\n      }\n    },\n\n    async deleteUpdate() {\n      if (confirm('정말 삭제하시겠습니까?')) {\n        try {\n          await axios.delete(`${process.env.VUE_APP_API_URL}/api/updates/${this.id}`, {\n            withCredentials: true\n          });\n          alert('업데이트가 삭제되었습니다.');\n          this.$router.push('/updates');\n        } catch (err) {\n          console.error('업데이트 삭제 중 오류:', err);\n          alert('업데이트 삭제에 실패했습니다.');\n        }\n      }\n    }\n  },\n  created() {\n    this.fetchUpdate();\n    this.checkLogin(); // ✅ 로그인 유저 정보 확인\n  }\n};\n</script>\n\n<style scoped>\n.update-detail-container {\n  max-width: 700px;\n  margin: 40px auto;\n  padding: 20px;\n  background: #222;\n  border-radius: 8px;\n  color: white;\n}\n\n.loading,\n.error {\n  text-align: center;\n}\n\n.update-detail-card {\n  background: #333;\n  padding: 20px;\n  border-radius: 10px;\n  position: relative;\n}\n\n.update-header h1 {\n  margin: 0;\n}\n\n.update-meta {\n  font-size: 14px;\n  color: #bbb;\n  margin-bottom: 10px;\n}\n\n.update-content {\n  font-size: 16px;\n  line-height: 1.6;\n  margin-bottom: 20px;\n}\n\n.action-buttons {\n  display: flex;\n  gap: 10px;\n}\n\n.edit-btn,\n.delete-btn {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.edit-btn {\n  background-color: #42b983;\n  color: white;\n}\n\n.delete-btn {\n  background-color: #d9534f;\n  color: white;\n}\n\n.form-buttons {\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n}\n\n.save-btn,\n.cancel-btn {\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n.save-btn {\n  background-color: #42b983;\n  color: white;\n}\n\n.cancel-btn {\n  background-color: gray;\n  color: white;\n}\n\n.input-field,\n.textarea-field {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border: 1px solid #bbb;\n  border-radius: 5px;\n  background: #222;\n  color: white;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}