{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"request-password-reset\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[4] || (_cache[4] = _createElementVNode(\"h1\", null, \"비밀번호 재설정 요청\", -1)), _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.requestResetLink && $options.requestResetLink(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[2] || (_cache[2] = _createElementVNode(\"label\", {\n    for: \"email\"\n  }, \"이메일:\", -1)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.email = $event),\n    placeholder: \"이메일을 입력하세요\",\n    required: \"\"\n  }, null, 512), [[_vModelText, $data.email]])]), _cache[3] || (_cache[3] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"비밀번호 재설정 링크 보내기\", -1))], 32), $data.message ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass($data.success ? 'success' : 'error')\n  }, _toDisplayString($data.message), 3)) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","requestResetLink","for","type","id","$event","$data","email","placeholder","required","message","key","_normalizeClass","success","_createCommentVNode"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/RequestPasswordReset.vue"],"sourcesContent":["<template>\n    <div class=\"request-password-reset\">\n        <h1>비밀번호 재설정 요청</h1>\n        <form @submit.prevent=\"requestResetLink\">\n            <div>\n                <label for=\"email\">이메일:</label>\n                <input type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"이메일을 입력하세요\" required />\n            </div>\n            <button type=\"submit\">비밀번호 재설정 링크 보내기</button>\n        </form>\n        <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            email: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async requestResetLink() {\n            try {\n                const response = await fetch(`${process.env.VUE_APP_API_URL}/request-password-reset`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ email: this.email }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error requesting password reset:', error);\n                this.success = false;\n                this.message = '비밀번호 재설정 요청 중 오류가 발생했습니다.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAwB;;uBAAnCC,mBAAA,CAUM,OAVNC,UAUM,G,0BATFC,mBAAA,CAAoB,YAAhB,aAAW,QACfA,mBAAA,CAMO;IANAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,QAAA,CAAAC,gBAAA,IAAAD,QAAA,CAAAC,gBAAA,IAAAF,IAAA,CAAgB;MACnCJ,mBAAA,CAGM,c,0BAFFA,mBAAA,CAA+B;IAAxBO,GAAG,EAAC;EAAO,GAAC,MAAI,Q,gBACvBP,mBAAA,CAAmF;IAA5EQ,IAAI,EAAC,OAAO;IAACC,EAAE,EAAC,OAAO;IAN9C,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAMwDC,KAAA,CAAAC,KAAK,GAAAF,MAAA;IAAEG,WAAW,EAAC,YAAY;IAACC,QAAQ,EAAR;gCAAhCH,KAAA,CAAAC,KAAK,E,+BAEjDZ,mBAAA,CAA8C;IAAtCQ,IAAI,EAAC;EAAQ,GAAC,iBAAe,O,OAEhCG,KAAA,CAAAI,OAAO,I,cAAhBjB,mBAAA,CAA0E;IAVlFkB,GAAA;IAU2BnB,KAAK,EAVhCoB,eAAA,CAUkCN,KAAA,CAAAO,OAAO;sBAA2BP,KAAA,CAAAI,OAAO,SAV3EI,mBAAA,W","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}