{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, Transition as _Transition, withCtx as _withCtx, createVNode as _createVNode, vModelDynamic as _vModelDynamic, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nconst _hoisted_2 = {\n  class: \"signup-container\"\n};\nconst _hoisted_3 = {\n  class: \"header\"\n};\nconst _hoisted_4 = {\n  class: \"logo\"\n};\nconst _hoisted_5 = {\n  class: \"circle\"\n};\nconst _hoisted_6 = {\n  class: \"nav-links\"\n};\nconst _hoisted_7 = {\n  class: \"form-container\"\n};\nconst _hoisted_8 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_9 = {\n  class: \"input-with-icon\"\n};\nconst _hoisted_10 = {\n  key: 0,\n  class: \"check-icon\"\n};\nconst _hoisted_11 = {\n  key: 0,\n  class: \"form-group password-field\"\n};\nconst _hoisted_12 = {\n  class: \"password-container\"\n};\nconst _hoisted_13 = [\"type\"];\nconst _hoisted_14 = [\"src\"];\nconst _hoisted_15 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_16 = {\n  key: 0,\n  class: \"form-group password-field\"\n};\nconst _hoisted_17 = {\n  class: \"password-container\"\n};\nconst _hoisted_18 = [\"type\"];\nconst _hoisted_19 = [\"src\"];\nconst _hoisted_20 = {\n  key: 0\n};\nconst _hoisted_21 = {\n  key: 0,\n  class: \"error-message\"\n};\nconst _hoisted_22 = {\n  key: 1,\n  class: \"correct-message\"\n};\nconst _hoisted_23 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_24 = {\n  key: 0,\n  class: \"form-group\"\n};\nconst _hoisted_25 = {\n  key: 0,\n  class: \"button-group\"\n};\nconst _hoisted_26 = {\n  key: 0,\n  class: \"sign-modal\"\n};\nconst _hoisted_27 = {\n  class: \"sign-modal-content\"\n};\nconst _hoisted_28 = {\n  key: 1,\n  class: \"modal\"\n};\nconst _hoisted_29 = {\n  class: \"modal-content\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"header\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: \"/favicon.ico\",\n    class: \"circle\",\n    onClick: _cache[0] || (_cache[0] = $event => _ctx.$router.push('/')),\n    style: {\n      \"cursor\": \"pointer\"\n    },\n    alt: \"\"\n  })]), _cache[20] || (_cache[20] = _createElementVNode(\"span\", null, \"회원가입\", -1 /* HOISTED */))]), _createElementVNode(\"nav\", _hoisted_6, [_createElementVNode(\"div\", {\n    class: \"nav-button\",\n    onClick: _cache[1] || (_cache[1] = $event => _ctx.$router.push('/'))\n  }, \"홈\"), _createElementVNode(\"div\", {\n    class: \"nav-button\",\n    onClick: _cache[2] || (_cache[2] = $event => _ctx.$router.push('/login'))\n  }, \"로그인\"), _createElementVNode(\"div\", {\n    class: \"nav-button\",\n    onClick: _cache[3] || (_cache[3] = $event => _ctx.$router.push('/patch-notes'))\n  }, \"패치 노트\")])]), _createElementVNode(\"main\", null, [_createElementVNode(\"div\", _hoisted_7, [_cache[27] || (_cache[27] = _createElementVNode(\"h2\", null, \"계정 생성\", -1 /* HOISTED */)), _cache[28] || (_cache[28] = _createElementVNode(\"p\", null, \"계정 생성에 필요한 정보를 입력해주세요. \", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[15] || (_cache[15] = _withModifiers((...args) => $options.handleSubmit && $options.handleSubmit(...args), [\"prevent\"]))\n  }, [_createVNode(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [$data.formStep >= 1 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_8, [_cache[21] || (_cache[21] = _createElementVNode(\"label\", {\n      for: \"userid\"\n    }, \"아이디\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_9, [_withDirectives(_createElementVNode(\"input\", {\n      id: \"userid\",\n      type: \"text\",\n      placeholder: \"아이디를 입력해주세요\",\n      \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.form.userid = $event),\n      onInput: _cache[5] || (_cache[5] = (...args) => $options.checkDuplicateUserId && $options.checkDuplicateUserId(...args)),\n      required: \"\"\n    }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.form.userid]]), $data.duplicateCheck.color === 'green' ? (_openBlock(), _createElementBlock(\"span\", _hoisted_10, \"✅\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", {\n      style: _normalizeStyle({\n        color: $data.duplicateCheck.color,\n        display: 'flex',\n        gap: '6px',\n        fontSize: '14px'\n      })\n    }, _toDisplayString($data.duplicateCheck.message), 5 /* TEXT, STYLE */)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [$data.formStep >= 2 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_11, [_cache[22] || (_cache[22] = _createElementVNode(\"label\", {\n      for: \"password\"\n    }, \"비밀번호\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_12, [_withDirectives(_createElementVNode(\"input\", {\n      id: \"password\",\n      type: $data.passwordVisible ? 'text' : 'password',\n      placeholder: \"비밀번호를 입력해주세요\",\n      \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.form.password = $event),\n      onInput: _cache[7] || (_cache[7] = $event => $options.handleStepProgress(3)),\n      minlength: \"8\",\n      required: \"\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_13), [[_vModelDynamic, $data.form.password]]), _createElementVNode(\"img\", {\n      src: $data.passwordVisible ? $data.openIcon : $data.closeIcon,\n      alt: \"Show Password\",\n      class: \"toggle-password\",\n      onClick: _cache[8] || (_cache[8] = $event => $options.togglePasswordVisibility('password'))\n    }, null, 8 /* PROPS */, _hoisted_14)]), $data.form.password.length > 0 && $data.form.password.length < 8 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, \" 비밀번호는 최소 8자리 이상이어야 합니다. \")) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [$data.formStep >= 3 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_16, [_cache[23] || (_cache[23] = _createElementVNode(\"label\", {\n      for: \"passwordcheck\"\n    }, \"비밀번호 확인\", -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_17, [_withDirectives(_createElementVNode(\"input\", {\n      id: \"passwordcheck\",\n      type: $data.passwordCheckVisible ? 'text' : 'password',\n      placeholder: \"비밀번호를 다시 입력해주세요\",\n      \"onUpdate:modelValue\": _cache[9] || (_cache[9] = $event => $data.form.passwordcheck = $event),\n      onInput: _cache[10] || (_cache[10] = $event => $options.handleStepProgress(4)),\n      minlength: \"8\",\n      required: \"\"\n    }, null, 40 /* PROPS, NEED_HYDRATION */, _hoisted_18), [[_vModelDynamic, $data.form.passwordcheck]]), _createElementVNode(\"img\", {\n      src: $data.passwordCheckVisible ? $data.openIcon : $data.closeIcon,\n      alt: \"Show Password\",\n      class: \"toggle-password\",\n      onClick: _cache[11] || (_cache[11] = $event => $options.togglePasswordVisibility('passwordcheck'))\n    }, null, 8 /* PROPS */, _hoisted_19)]), $data.form.passwordcheck && $data.form.password.length >= 8 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_20, [$data.form.password !== $data.form.passwordcheck ? (_openBlock(), _createElementBlock(\"div\", _hoisted_21, \" 비밀번호가 일치하지 않습니다. \")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_22, \" 비밀번호가 일치합니다. \"))])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [$data.formStep >= 4 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_23, [_cache[24] || (_cache[24] = _createElementVNode(\"label\", {\n      for: \"email\"\n    }, \"이메일\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n      id: \"email\",\n      type: \"email\",\n      \"onUpdate:modelValue\": _cache[12] || (_cache[12] = $event => $data.form.email = $event),\n      onInput: _cache[13] || (_cache[13] = $event => $options.handleStepProgress(5)),\n      placeholder: \"이메일을 입력해주세요(비밀번호 또는 아이디 찾기에 사용)\"\n    }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.form.email]])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [$data.formStep >= 5 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_cache[25] || (_cache[25] = _createElementVNode(\"label\", {\n      for: \"nickname\"\n    }, \"닉네임\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n      id: \"nickname\",\n      type: \"text\",\n      placeholder: \"닉네임을 입력해주세요\",\n      \"onUpdate:modelValue\": _cache[14] || (_cache[14] = $event => $data.form.nickname = $event),\n      required: \"\"\n    }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.form.nickname]])])) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  }), _createVNode(_Transition, {\n    name: \"fade-slide\"\n  }, {\n    default: _withCtx(() => [$data.formStep >= 5 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_25, _cache[26] || (_cache[26] = [_createElementVNode(\"button\", {\n      type: \"button\",\n      class: \"cancel-button\"\n    }, \"Cancel\", -1 /* HOISTED */), _createElementVNode(\"button\", {\n      type: \"submit\",\n      class: \"signup-button\"\n    }, \"Sign Up\", -1 /* HOISTED */)]))) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })], 32 /* NEED_HYDRATION */)])]), $data.signupSuccessModal ? (_openBlock(), _createElementBlock(\"div\", _hoisted_26, [_createElementVNode(\"div\", _hoisted_27, [_cache[29] || (_cache[29] = _createElementVNode(\"h2\", null, \"회원가입 완료!\", -1 /* HOISTED */)), _cache[30] || (_cache[30] = _createElementVNode(\"p\", null, \"라이엇 계정 연동을 진행해주세요.\", -1 /* HOISTED */)), _cache[31] || (_cache[31] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[16] || (_cache[16] = (...args) => $options.handleGoToRiotLink && $options.handleGoToRiotLink(...args))\n  }, \"연동하러 가기\")])])) : _createCommentVNode(\"v-if\", true), $data.showRiotModal == true ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[32] || (_cache[32] = _createElementVNode(\"h2\", null, \"Riot 연동\", -1 /* HOISTED */)), _cache[33] || (_cache[33] = _createElementVNode(\"p\", null, \"회원가입이 완료되었습니다! 라이엇 계정을 연동해주세요.\", -1 /* HOISTED */)), _cache[34] || (_cache[34] = _createElementVNode(\"label\", {\n    for: \"summoner\"\n  }, \"소환사 이름\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[17] || (_cache[17] = $event => _ctx.summonerName = $event),\n    placeholder: \"소환사 이름 입력\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.summonerName]]), _cache[35] || (_cache[35] = _createElementVNode(\"label\", {\n    for: \"tag\"\n  }, \"태그\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    \"onUpdate:modelValue\": _cache[18] || (_cache[18] = $event => _ctx.tag = $event),\n    placeholder: \"태그 입력 (예: KR1)\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.tag]]), _createElementVNode(\"button\", {\n    type: \"button\",\n    onClick: _cache[19] || (_cache[19] = (...args) => $options.linkRiotAccount && $options.linkRiotAccount(...args))\n  }, \"연동하기\")])])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["id","class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","src","onClick","_cache","$event","_ctx","$router","push","style","alt","_hoisted_6","_hoisted_7","onSubmit","_withModifiers","args","$options","handleSubmit","_createVNode","_Transition","name","default","_withCtx","$data","formStep","_hoisted_8","for","_hoisted_9","type","placeholder","form","userid","onInput","checkDuplicateUserId","required","duplicateCheck","color","_hoisted_10","_createCommentVNode","_normalizeStyle","display","gap","fontSize","message","_","_hoisted_11","_hoisted_12","passwordVisible","password","handleStepProgress","minlength","_hoisted_13","openIcon","closeIcon","togglePasswordVisibility","_hoisted_14","length","_hoisted_15","_hoisted_16","_hoisted_17","passwordCheckVisible","passwordcheck","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","email","_hoisted_24","nickname","_hoisted_25","signupSuccessModal","_hoisted_26","_hoisted_27","handleGoToRiotLink","showRiotModal","_hoisted_28","_hoisted_29","summonerName","tag","linkRiotAccount"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/SignupForm.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"signup-container\">\n      <header class=\"header\">\n        <div class=\"logo\">\n          <div class=\"circle\">\n            <img src=\"/favicon.ico\" class=\"circle\" @click=\"$router.push('/')\" style=\"cursor: pointer;\" alt=\"\" />\n          </div>\n          <span>회원가입</span>\n        </div>\n        <nav class=\"nav-links\">\n          <div class=\"nav-button\" @click=\"$router.push('/')\">홈</div>\n          <div class=\"nav-button\" @click=\"$router.push('/login')\">로그인</div>\n          <div class=\"nav-button\" @click=\"$router.push('/patch-notes')\">패치 노트</div>\n        </nav>\n      </header>\n      <main>\n        <div class=\"form-container\">\n          <h2>계정 생성</h2>\n          <p>계정 생성에 필요한 정보를 입력해주세요. </p>\n          <form @submit.prevent=\"handleSubmit\">\n            <transition name=\"fade-slide\">\n              <div class=\"form-group\" v-if=\"formStep >= 1\">\n                <label for=\"userid\">아이디</label>\n                <div class=\"input-with-icon\">\n                  <input id=\"userid\" type=\"text\" placeholder=\"아이디를 입력해주세요\" v-model=\"form.userid\"\n                    @input=\"checkDuplicateUserId\" required />\n                  <span v-if=\"duplicateCheck.color === 'green'\" class=\"check-icon\">✅</span>\n                </div>\n                <div :style=\"{ color: duplicateCheck.color, display: 'flex', gap: '6px', fontSize: '14px' }\">{{\n                  duplicateCheck.message }}</div>\n              </div>\n            </transition>\n            <transition name=\"fade-slide\">\n              <div class=\"form-group password-field\" v-if=\"formStep >= 2\">\n                <label for=\"password\">비밀번호</label>\n                <div class=\"password-container\">\n                  <input id=\"password\" :type=\"passwordVisible ? 'text' : 'password'\" placeholder=\"비밀번호를 입력해주세요\"\n                    v-model=\"form.password\" @input=\"handleStepProgress(3)\" minlength=\"8\" required />\n                  <img :src=\"passwordVisible ? openIcon : closeIcon\" alt=\"Show Password\" class=\"toggle-password\"\n                    @click=\"togglePasswordVisibility('password')\" />\n                </div>\n                <div v-if=\"form.password.length > 0 && form.password.length < 8\" class=\"error-message\">\n                  비밀번호는 최소 8자리 이상이어야 합니다.\n                </div>\n              </div>\n            </transition>\n            <transition name=\"fade-slide\">\n              <div class=\"form-group password-field\" v-if=\"formStep >= 3\">\n                <label for=\"passwordcheck\">비밀번호 확인</label>\n                <div class=\"password-container\">\n                  <input id=\"passwordcheck\" :type=\"passwordCheckVisible ? 'text' : 'password'\"\n                    placeholder=\"비밀번호를 다시 입력해주세요\" v-model=\"form.passwordcheck\" @input=\"handleStepProgress(4)\"\n                    minlength=\"8\" required />\n                  <img :src=\"passwordCheckVisible ? openIcon : closeIcon\" alt=\"Show Password\" class=\"toggle-password\"\n                    @click=\"togglePasswordVisibility('passwordcheck')\" />\n                </div>\n                <div v-if=\"form.passwordcheck && form.password.length >= 8\">\n                  <div v-if=\"form.password !== form.passwordcheck\" class=\"error-message\">\n                    비밀번호가 일치하지 않습니다.\n                  </div>\n                  <div v-else class=\"correct-message\">\n                    비밀번호가 일치합니다.\n                  </div>\n                </div>\n              </div>\n            </transition>\n            <transition name=\"fade-slide\">\n              <div class=\"form-group\" v-if=\"formStep >= 4\">\n                <label for=\"email\">이메일</label>\n                <input id=\"email\" type=\"email\" v-model=\"form.email\" @input=\"handleStepProgress(5)\"\n                  placeholder=\"이메일을 입력해주세요(비밀번호 또는 아이디 찾기에 사용)\" />\n              </div>\n            </transition>\n            <transition name=\"fade-slide\">\n              <div class=\"form-group\" v-if=\"formStep >= 5\">\n                <label for=\"nickname\">닉네임</label>\n                <input id=\"nickname\" type=\"text\" placeholder=\"닉네임을 입력해주세요\" v-model=\"form.nickname\" required />\n              </div>\n            </transition>\n            <transition name=\"fade-slide\">\n              <div class=\"button-group\" v-if=\"formStep >= 5\">\n                <button type=\"button\" class=\"cancel-button\">Cancel</button>\n                <button type=\"submit\" class=\"signup-button\">Sign Up</button>\n              </div>\n            </transition>\n          </form>\n        </div>\n      </main>\n      <div v-if=\"signupSuccessModal\" class=\"sign-modal\">\n        <div class=\"sign-modal-content\">\n          <h2>회원가입 완료!</h2>\n          <p>라이엇 계정 연동을 진행해주세요.</p>\n          <br />\n          <button @click=\"handleGoToRiotLink\">연동하러 가기</button>\n        </div>\n      </div>\n      <div v-if=\"showRiotModal == true\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h2>Riot 연동</h2>\n          <p>회원가입이 완료되었습니다! 라이엇 계정을 연동해주세요.</p>\n          <label for=\"summoner\">소환사 이름</label>\n          <input type=\"text\" v-model=\"summonerName\" placeholder=\"소환사 이름 입력\" />\n          <label for=\"tag\">태그</label>\n          <input type=\"text\" v-model=\"tag\" placeholder=\"태그 입력 (예: KR1)\" />\n          <button type=\"button\" @click=\"linkRiotAccount\">연동하기</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n\n\n<script>\nexport default {\n  data() {\n    return {\n      form: {\n        userid: '',\n        password: '',\n        passwordcheck: '',\n        email: '',\n        nickname: '',\n        birthdate: '',\n        gender: 'other',\n      },\n      formStep: 1,\n      duplicateCheck: {\n        message: '',\n        color: '',\n      },\n      passwordVisible: false,\n      passwordCheckVisible: false,\n      openIcon: require('@/assets/open.png'),\n      closeIcon: require('@/assets/close.png'),\n      showRiotModal: false,\n      signupSuccessModal: false,\n    };\n  },\n  methods: {\n    handleStepProgress(nextStep) {\n      // 조건 만족 시 단계 증가\n      if (nextStep === 2 && this.form.userid.trim() !== '') {\n        this.formStep = Math.max(this.formStep, 2);\n      } else if (nextStep === 3 && this.form.password.length >= 8) {\n        this.formStep = Math.max(this.formStep, 3);\n      } else if (nextStep === 4 && this.form.passwordcheck.length >= 8 && this.form.password === this.form.passwordcheck) {\n        this.formStep = Math.max(this.formStep, 4);\n      } else if (nextStep === 5 && this.form.email.includes('@')) {\n        this.formStep = Math.max(this.formStep, 5);\n      }\n    },\n    handleGoToRiotLink() {\n      this.signupSuccessModal = false;\n      this.showRiotModal = true;\n    },\n\n    async linkRiotAccount() {\n      console.log(\"연동하기 버튼 클릭됨\"); // 디버깅 로그\n\n      if (!this.summonerName || !this.tag) {\n        alert(\"소환사 이름과 태그를 입력해주세요.\");\n        return;\n      }\n\n      try {\n\n        console.log(\"소환사 이름:\", this.summonerName);\n        console.log(\"태그:\", this.tag);\n\n        console.log(\"연동 요청 보냄:\", this.summonerName, this.tag);  // 요청 전 콘솔 로그 추가\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/summonerInfo`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n          body: JSON.stringify({\n            userid: this.form.userid,\n            summonerName: this.summonerName,\n            tag: this.tag,\n          }),\n        });\n        console.log(\"서버 응답 상태 코드:\", response.status); // 응답 상태 확인\n        const result = await response.json();\n        console.log(\"서버 응답 데이터:\", result); // 응답 데이터 확인\n\n        if (result.success) {\n          alert(\"라이엇 연동 완료\");\n          this.showRiotModal = false; // 모달 닫기\n          window.location.href = '/login';\n          // Riot API 데이터 업데이트\n          this.riotInfo = {\n            tier: result.tier || \"정보 없음\",\n            summonerLevel: result.summonerLevel || \"정보 없음\",\n            profileIconId: result.profileIconId || '',\n            top5Champions: result.top5Champions || [],\n          };\n\n          this.showRiotModal = false;\n        } else {\n          alert(\"라이엇 연동 실패: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"Error linking Riot account:\", error);\n        alert(\"연동 중 오류가 발생했습니다.\");\n      }\n    },\n    togglePasswordVisibility(field) {\n      if (field === 'password') {\n        this.passwordVisible = !this.passwordVisible;\n      } else if (field === 'passwordcheck') {\n        this.passwordCheckVisible = !this.passwordCheckVisible;\n      }\n    },\n    async checkDuplicateUserId() {\n      const userid = this.form.userid;\n\n      if (!userid) {\n        this.duplicateCheck.message = '';\n        return;\n      }\n\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/check-duplicate`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          credentials: 'include', // 쿠키를 포함한 요청\n          body: JSON.stringify({ userid }),\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          this.duplicateCheck.message = result.message;\n          this.duplicateCheck.color = 'green';\n          this.formStep = Math.max(this.formStep, 2);\n        } else {\n          this.duplicateCheck.message = result.message;\n          this.duplicateCheck.color = 'red';\n          this.formStep = 1;\n        }\n      } catch (error) {\n        console.error('Error checking duplicate:', error);\n        this.duplicateCheck.message = '중복 확인 중 오류가 발생했습니다.';\n        this.duplicateCheck.color = 'red';\n      }\n    },\n    async handleSubmit() {\n      const { userid, password, passwordcheck, nickname, email } = this.form;\n\n      if (!userid || !password || !passwordcheck || !nickname || !email) {\n        alert('모든 항목을 입력해주세요.');\n        return;\n      }\n      if (this.form.password !== this.form.passwordcheck) {\n        alert('비밀번호가 일치하지 않습니다.');\n        return;\n      }\n\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/signup`, {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(this.form),\n        });\n\n        const result = await response.json();\n        if (response.ok) {\n          this.signupSuccessModal = true; // 모달 표시\n          // this.showRiotModal = true; → 이건 모달 닫을 때 띄우도록 \n        } else {\n          alert(result.message);\n        }\n      } catch (error) {\n        console.error('Signup error:', error);\n        alert('회원가입 중 오류가 발생했습니다.');\n      }\n    },\n\n  },\n\n};\n</script>\n\n<style scoped>\n/* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #212121;\n}\n\n#app {\n  width: 120%;\n  height: 120%;\n  background-color: #212121;\n}\n\n/* 전체 레이아웃 스타일 */\n.signup-container {\n  font-family: Arial, sans-serif;\n  background-color: #212121;\n  color: #FAFAFA;\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: start;\n}\n\n/* 헤더 스타일 */\n.header {\n  width: 100%;\n  padding: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #424242;\n  height: 50px;\n}\n\n.header h1 {\n  margin: 0;\n  font-size: 16px;\n}\n\n.nav-links {\n  display: flex;\n  gap: 4px;\n  align-items: stretch;\n}\n\n.nav-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 80px;\n  padding: 0 16px;\n  background-color: transparent;\n  color: #FAFAFA;\n  border-radius: 0;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.nav-button:hover {\n  background-color: #212121;\n}\n\n.header nav a {\n  color: #FAFAFA;\n  text-decoration: none;\n  margin-left: 15px;\n  font-size: 10px;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n/* 폼 컨테이너 */\n.form-container {\n  background-color: #212121;\n  padding: 20px 20px;\n  border-radius: 8px;\n  max-width: 400px;\n  width: 200vw;\n}\n\n.form-container h2 {\n  font-size: 24px;\n  margin-bottom: 10px;\n}\n\n.form-container p {\n  font-size: 14px;\n  margin-bottom: 20px;\n}\n\n/* 폼 그룹 스타일 */\n.form-group {\n  margin-bottom: 20px;\n}\n\n.form-group label {\n  display: block;\n  font-size: 14px;\n  margin-bottom: 5px;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: #FAFAFA;\n  color: black;\n}\n\n.form-group select {\n  width: 100%;\n  height: 40px;\n  padding: 10px;\n  background-color: #FAFAFA;\n  border-radius: 4px;\n  font-size: 14px;\n  color: #424242;\n  border: none;\n  cursor: pointer;\n}\n\n/* 버튼 스타일 */\n.button-group {\n  display: flex;\n  gap: 10px;\n  margin-left: 8px;\n}\n\n.cancel-button,\n.signup-button {\n  padding: 10px 60px;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.cancel-button {\n  background-color: #424242;\n  color: #FAFAFA;\n}\n\n.signup-button {\n  background-color: #15513775;\n  color: #FAFAFA;\n}\n\n.cancel-button:hover {\n  background-color: #727272;\n}\n\n.signup-button:hover {\n  background-color: #15513775;\n}\n\n.password-container {\n  position: relative;\n  display: flex;\n  align-items: center;\n}\n\n/* 비밀번호 입력칸 */\n.password-container input {\n  width: 100%;\n  padding-right: 40px;\n  /* 아이콘이 들어갈 공간 확보 */\n}\n\n/* 눈 모양 아이콘 */\n.toggle-password {\n  position: absolute;\n  right: 10px;\n  width: 24px;\n  /* 추천 사이즈 */\n  height: 24px;\n  cursor: pointer;\n  opacity: 0.8;\n  transition: opacity 0.2s;\n}\n\n.toggle-password:hover {\n  opacity: 1;\n}\n\n.riot-connect {\n  display: flex;\n  flex-direction: column;\n}\n\n.riot-inputs {\n  display: flex;\n  align-items: center;\n  gap: 5px;\n}\n\n.riot-inputs input {\n  width: 50%;\n  padding: 10px;\n  border: none;\n  border-radius: 4px;\n  font-size: 14px;\n  background-color: #FAFAFA;\n  color: black;\n}\n\n.riot-inputs span {\n  font-size: 18px;\n  color: #FAFAFA;\n}\n\n.form-group button {\n  margin-top: 10px;\n  padding: 8px;\n  border: none;\n  cursor: pointer;\n  background-color: #15513775;\n  color: #FAFAFA;\n  border-radius: 5px;\n}\n\n.error-message {\n  gap: 10px;\n  color: red;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n.correct-message {\n  gap: 10px;\n  color: green;\n  font-size: 12px;\n  margin-top: 5px;\n}\n\n/* Riot 연동 모달 스타일 */\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #212121;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  border-radius: 10px;\n  color: #FAFAFA;\n  width: 400px;\n  height: 270px;\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-content h2 {\n  margin-bottom: 10px;\n}\n\n.modal-content input {\n  margin: 5px 0;\n  padding: 8px;\n  font-size: 14px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.modal-content button {\n  margin-top: 10px;\n  padding: 8px;\n  border: none;\n  cursor: pointer;\n  background-color: #0064006d;\n  color: #FAFAFA;\n  border-radius: 5px;\n}\n\n.sign-modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #212121;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  border-radius: 10px;\n  color: #FAFAFA;\n  width: 400px;\n  height: 150px;\n}\n\n.sign-modal-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.sign-modal-content h2 {\n  margin-bottom: 10px;\n}\n\n.sign-modal-content button {\n  margin-top: 10px;\n  padding: 8px;\n  border: none;\n  cursor: pointer;\n  background-color: #0064006d;\n  color: #FAFAFA;\n  border-radius: 5px;\n}\n\n.fade-slide-enter-active,\n.fade-slide-leave-active {\n  transition: all 1.5s ease;\n}\n\n.fade-slide-enter-from,\n.fade-slide-leave-to {\n  opacity: 0;\n  transform: translateY(-10px);\n  /* 여기! 위에서 아래로 */\n}\n\n.fade-slide-enter-to,\n.fade-slide-leave-from {\n  opacity: 1;\n  transform: translateY(0);\n}\n\n.input-with-icon {\n  position: relative;\n}\n\n.check-icon {\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  transform: translateY(-50%);\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}