{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, renderList as _renderList, Fragment as _Fragment, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"contents\"\n};\nconst _hoisted_2 = {\n  class: \"contents-item\"\n};\nconst _hoisted_3 = {\n  key: 0\n};\nconst _hoisted_4 = {\n  key: 1,\n  class: \"feed-list\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 1:1 문의 섹션 (문의 목록) \"), _createElementVNode(\"section\", _hoisted_2, [_cache[1] || (_cache[1] = _createElementVNode(\"p\", {\n    class: \"section-title\"\n  }, \"1:1 문의\", -1 /* HOISTED */)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goToForm && $options.goToForm(...args)),\n    class: \"write-btn\"\n  }, \"문의 작성\"), $data.inquiries.length === 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_3, \"문의 내역이 없습니다.\")) : (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.inquiries, inquiry => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: inquiry._id,\n      class: \"feed-card\",\n      onClick: $event => $options.goToDetail(inquiry._id)\n    }, [_createElementVNode(\"h3\", null, _toDisplayString(inquiry.title), 1 /* TEXT */), _createElementVNode(\"p\", null, \"작성자: \" + _toDisplayString(inquiry.name), 1 /* TEXT */), _createElementVNode(\"p\", null, \"상태: \" + _toDisplayString(inquiry.status === 'answered' ? '답변완료' : '대기중'), 1 /* TEXT */), _createElementVNode(\"p\", null, \"등록일: \" + _toDisplayString($options.formatDate(inquiry.createdAt)), 1 /* TEXT */)], 8 /* PROPS */, _hoisted_5);\n  }), 128 /* KEYED_FRAGMENT */))]))])]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_hoisted_2","onClick","_cache","args","$options","goToForm","$data","inquiries","length","_hoisted_3","_hoisted_4","_Fragment","_renderList","inquiry","_id","$event","goToDetail","_toDisplayString","title","name","status","formatDate","createdAt","_hoisted_5"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/InquiryList.vue"],"sourcesContent":["<template>\n  <div class=\"contents\">\n    <!-- 1:1 문의 섹션 (문의 목록) -->\n    <section class=\"contents-item\">\n      <p class=\"section-title\">1:1 문의</p>\n      <button @click=\"goToForm\" class=\"write-btn\">문의 작성</button>\n      <div v-if=\"inquiries.length === 0\">문의 내역이 없습니다.</div>\n      <div v-else class=\"feed-list\">\n        <div v-for=\"inquiry in inquiries\" :key=\"inquiry._id\" class=\"feed-card\" @click=\"goToDetail(inquiry._id)\">\n          <h3>{{ inquiry.title }}</h3>\n          <p>작성자: {{ inquiry.name }}</p>\n          <p>상태: {{ inquiry.status === 'answered' ? '답변완료' : '대기중' }}</p>\n          <p>등록일: {{ formatDate(inquiry.createdAt) }}</p>\n        </div>\n      </div>\n    </section>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  name: 'InquiryList',\n  data() {\n    return {\n      inquiries: [],\n    };\n  },\n  async created() {\n    await this.fetchInquiries();\n  },\n  methods: {\n    async fetchInquiries() {\n      try {\n        const res = await axios.get(`${process.env.VUE_APP_API_URL}/api/inquiries`, {\n          withCredentials: true,\n        });\n        this.inquiries = res.data.inquiries;\n      } catch (error) {\n        console.error('문의 목록 불러오기 실패:', error);\n      }\n    },\n    goToForm() {\n      this.$router.push('/inquiries/new');\n    },\n    goToDetail(id) {\n      this.$router.push(`/inquiries/${id}`);\n    },\n    formatDate(dateStr) {\n      const date = new Date(dateStr);\n      return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();\n    },\n  },\n};\n</script>\n\n<style scoped>\n.contents {\n  width: 80%;\n  max-width: 1260px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 40px 20px;\n}\n\n.contents-item {\n  width: 60%;\n  max-width: 800px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n}\n\n.section-title {\n  font-size: 40px;\n  font-weight: bold;\n  color: black;\n}\n\n.write-btn {\n  padding: 0.5rem 1rem;\n  margin-bottom: 1rem;\n  cursor: pointer;\n}\n\n/* 업데이트 페이지 디자인 요소 적용 */\n.feed-list {\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.feed-card {\n  background-color: #333;\n  padding: 15px;\n  border-radius: 12px;\n  color: white;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.feed-card:hover {\n  background-color: #444;\n}\n</style>"],"mappings":";;EACOA,KAAK,EAAC;AAAU;;EAEVA,KAAK,EAAC;AAAe;;EAHlCC,GAAA;AAAA;;EAAAA,GAAA;EAOkBD,KAAK,EAAC;;mBAPxB;;uBACEE,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,uBAA0B,EAC1BC,mBAAA,CAYU,WAZVC,UAYU,G,0BAXRD,mBAAA,CAAmC;IAAhCL,KAAK,EAAC;EAAe,GAAC,QAAM,sBAC/BK,mBAAA,CAA0D;IAAjDE,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,QAAA,IAAAD,QAAA,CAAAC,QAAA,IAAAF,IAAA,CAAQ;IAAET,KAAK,EAAC;KAAY,OAAK,GACtCY,KAAA,CAAAC,SAAS,CAACC,MAAM,U,cAA3BZ,mBAAA,CAAqD,OAN3Da,UAAA,EAMyC,cAAY,M,cAC/Cb,mBAAA,CAOM,OAPNc,UAOM,I,kBANJd,mBAAA,CAKMe,SAAA,QAbdC,WAAA,CAQ+BN,KAAA,CAAAC,SAAS,EAApBM,OAAO;yBAAnBjB,mBAAA,CAKM;MAL6BD,GAAG,EAAEkB,OAAO,CAACC,GAAG;MAAEpB,KAAK,EAAC,WAAW;MAAEO,OAAK,EAAAc,MAAA,IAAEX,QAAA,CAAAY,UAAU,CAACH,OAAO,CAACC,GAAG;QACnGf,mBAAA,CAA4B,YAAAkB,gBAAA,CAArBJ,OAAO,CAACK,KAAK,kBACpBnB,mBAAA,CAA8B,WAA3B,OAAK,GAAAkB,gBAAA,CAAGJ,OAAO,CAACM,IAAI,kBACvBpB,mBAAA,CAA+D,WAA5D,MAAI,GAAAkB,gBAAA,CAAGJ,OAAO,CAACO,MAAM,kDACxBrB,mBAAA,CAA+C,WAA5C,OAAK,GAAAkB,gBAAA,CAAGb,QAAA,CAAAiB,UAAU,CAACR,OAAO,CAACS,SAAS,kB,iBAZjDC,UAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}