{"ast":null,"code":"export default {\n  name: 'MypageEdit',\n  data() {\n    return {\n      userInfo: {\n        nickname: '',\n        // 닉네임 초기값\n        email: '',\n        gender: '',\n        birthdate: '',\n        top5Champions: [],\n        introduction: ''\n      },\n      riotInfo: {\n        summonerRank: [],\n        summonerInfo: {\n          summonerLevel: '',\n          profileIconId: ''\n        }\n      },\n      showRiotModal: false,\n      summonerName: '',\n      tag: ''\n    };\n    // if (this.userInfo.password !== this.userInfo.passwordcheck) {\n    //           alert('비밀번호가 일치하지 않습니다.');\n    //           return;\n    //       }\n  },\n  mounted() {\n    this.checkLoginStatus();\n    console.log(\"챔피언 데이터 (초기 로드):\", this.userInfo.top5Champions);\n    console.log(\"챔피언 데이터 (초기 로드):\", this.riotInfo.top5Champions);\n    this.fetchLatestVersion();\n  },\n  methods: {\n    async fetchLatestVersion() {\n      try {\n        const response = await fetch(\"https://ddragon.leagueoflegends.com/api/versions.json\");\n        const versions = await response.json();\n        this.latestVersion = versions[0]; // 가장 최신 버전 사용\n      } catch (error) {\n        console.error(\"Failed to fetch Data Dragon version:\", error);\n      }\n    },\n    async checkLoginStatus() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          method: 'GET',\n          credentials: 'include' // 쿠키 포함\n        });\n        if (response.ok) {\n          const data = await response.json();\n          this.isLoggedIn = data.loggedIn;\n          if (data.loggedIn) {\n            this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n          }\n        } else {\n          this.resetUserData();\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        this.resetUserData();\n      }\n    },\n    async updateUserProfile() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/change-userprofile`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          credentials: 'include',\n          // 쿠키를 포함한 요청\n          body: JSON.stringify({\n            nickname: this.userInfo.nickname,\n            birthdate: this.userInfo.birthdate,\n            gender: this.userInfo.gender,\n            email: this.userInfo.email,\n            introduction: this.userInfo.introduction\n          })\n        });\n        if (response.ok) {\n          const result = await response.json();\n          if (result.success) {\n            alert('내 정보가 성공적으로 업데이트되었습니다.');\n          } else {\n            alert(result.message || '내 정보 변경 실패');\n          }\n        } else {\n          console.error('Error updating profile:', response.statusText);\n          alert('서버 요청에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('Error updating profile:', error);\n        alert('알 수 없는 오류가 발생했습니다.');\n      }\n    },\n    async linkRiotAccount() {\n      console.log(\"연동하기 버튼 클릭됨\"); // 디버깅 로그\n\n      if (!this.summonerName || !this.tag) {\n        alert(\"소환사 이름과 태그를 입력해주세요.\");\n        return;\n      }\n      try {\n        console.log(\"소환사 이름:\", this.summonerName);\n        console.log(\"태그:\", this.tag);\n        console.log(\"연동 요청 보냄:\", this.summonerName, this.tag); // 요청 전 콘솔 로그 추가\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/summonerInfo`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          credentials: \"include\",\n          body: JSON.stringify({\n            userid: this.userInfo.userid,\n            summonerName: this.summonerName,\n            tag: this.tag\n          })\n        });\n        console.log(\"서버 응답 상태 코드:\", response.status); // 응답 상태 확인\n        const result = await response.json();\n        console.log(\"서버 응답 데이터:\", result); // 응답 데이터 확인\n\n        if (result.success) {\n          alert(\"라이엇 연동 완료\");\n          // Riot API 데이터 업데이트\n          this.riotInfo = {\n            tier: result.tier || \"정보 없음\",\n            summonerLevel: result.summonerLevel || \"정보 없음\",\n            profileIconId: result.profileIconId || '',\n            top5Champions: result.top5Champions || []\n          };\n          this.showRiotModal = false;\n          window.location.reload();\n        } else {\n          alert(\"라이엇 연동 실패: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"Error linking Riot account:\", error);\n        alert(\"연동 중 오류가 발생했습니다.\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["name","data","userInfo","nickname","email","gender","birthdate","top5Champions","introduction","riotInfo","summonerRank","summonerInfo","summonerLevel","profileIconId","showRiotModal","summonerName","tag","mounted","checkLoginStatus","console","log","fetchLatestVersion","methods","response","fetch","versions","json","latestVersion","error","process","env","VUE_APP_API_URL","method","credentials","ok","isLoggedIn","loggedIn","user","resetUserData","updateUserProfile","headers","body","JSON","stringify","result","success","alert","message","statusText","linkRiotAccount","userid","status","tier","window","location","reload"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/MypageEdit.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <div class=\"mypage-edit\">\n      <!-- Header Section -->\n      <header class=\"header\">\n        <div class=\"logo\">\n          <div class=\"circle\">\n            <img src=\"/favicon.ico\" class=\"circle\" @click=\"$router.push('/')\" style=\"cursor: pointer;\" alt=\"\" />\n          </div>\n          내 정보 변경\n        </div>\n        <nav class=\"nav-links\">\n          <div class=\"nav-button\" @click=\"$router.push('/')\">홈</div>\n          <div class=\"nav-button\" @click=\"$router.push('/board')\">게시판</div>\n          <div class=\"nav-button\" @click=\"$router.push('/patch-notes')\">패치 노트</div>\n        </nav>\n      </header>\n\n      <!-- Profile Section -->\n      <section class=\"profile-section\">\n        <div class=\"profile-header\">\n          <div class=\"profile-picture\">\n            <!-- <div class=\"add-icon\" @click=\"triggerFileUpload\">+</div> -->\n            <img v-if=\"userInfo.summonerInfo && userInfo.summonerInfo.profileIconId\"\n              :src=\"`https://ddragon.leagueoflegends.com/cdn/${latestVersion}/img/profileicon/${userInfo.summonerInfo?.profileIconId}.png`\"\n              alt=\"Summoner Icon\" />\n          </div>\n          <input type=\"file\" id=\"file-upload\" accept=\"image/*\" ref=\"fileInput\" @change=\"handleFileChange\"\n            style=\"display: none;\" />\n          <div class=\"profile-info\">\n            <h2>{{ userInfo.nickname }}({{ userInfo.SummonerName }}#{{ userInfo.Tag }})</h2>\n          </div>\n        </div>\n      </section>\n\n      <!-- Form Section -->\n      <section class=\"form-section\">\n        <div class=\"form-container\">\n          <h2>프로필 편집</h2>\n          <p>Update your personal information</p><br />\n          <form @submit.prevent=\"updateUserProfile\">\n            <label for=\"birthdate\">닉네임</label>\n            <input id=\"nickname\" type=\"text\" :placeholder=\"userInfo.nickname || '닉네임을 입력하세요'\"\n              v-model=\"userInfo.nickname\" />\n            <label for=\"birthdate\">이메일</label>\n            <input type=\"email\" :placeholder=\"userInfo.email || '메일을 입력하세요'\" v-model=\"userInfo.email\" />\n            <label for=\"introductin\">자기소개</label>\n            <input type=\"text\" :placeholer=\"userInfo.introduction || '자기소개를 입력하세요(40자 이내)'\"\n              v-model=\"userInfo.introduction\" />\n            <!-- <select id=\"gender\" v-model=\"userInfo.gender\">\n              <option value=\"\" disabled>성별을 선택하세요</option>\n              <option value=\"male\">남성</option>\n              <option value=\"female\">여성</option>\n              <option value=\"other\">기타</option>\n            </select> -->\n            <!-- <label for=\"birthdate\">생년월일</label>\n            <input id=\"birthdate\" type=\"date\" v-model=\"userInfo.birthdate\" /> -->\n            <button type=\"submit\" class=\"submit-btn\">저장</button>\n          </form>\n        </div>\n\n      </section>\n\n      <!-- Gaming Information Section -->\n      <section class=\"gaming-info\">\n        <h2>소환사 정보</h2>\n        <br />\n        <p v-if=\"!userInfo.SummonerName\">연동이 필요합니다.</p>\n\n        <div class=\"gaming-details\">\n          <div class=\"detail-item\">\n            <img v-if=\"!userInfo.summonerRank?.[0]?.tier && userInfo.summonerInfo\" src=\"@/assets/Rank/unranked.png\"\n              alt=\"\">\n            <p v-if=\"!userInfo.summonerRank?.[0]?.tier && userInfo.summonerInfo\">랭크 정보 없음</p>\n            <img v-if=\"userInfo.summonerRank && userInfo.summonerRank?.[0]?.tier\"\n              :src=\"require(`@/assets/Rank/Rank=${userInfo.summonerRank?.[0]?.tier}.png`)\" alt=\"\" />\n            <p v-if=\"userInfo.summonerRank && userInfo.summonerRank?.[0]?.tier\">Game Tier</p>\n            <h3>{{ userInfo.summonerRank?.[0]?.tier || \"\" }} {{ userInfo.summonerRank?.[0]?.rank || \"\" }}</h3>\n          </div>\n          <div class=\"most-played-champions\">\n            <h2 class=\"most-champions-title\" v-if=\"(userInfo.top5Champions || [])[0]?.iconUrl\">Most Champions</h2>\n            <!-- 리스트 밖으로 이동 -->\n            <br />\n            <div class=\"champion-list\">\n              <div class=\"champion-item\">\n                <img v-if=\"(userInfo.top5Champions || [])[1]?.iconUrl\" :src=\"userInfo.top5Champions[1]?.iconUrl\"\n                  alt=\"Champion Image\" />\n                <!-- 숙련도 이미지 -->\n                <img v-if=\"(userInfo.top5Champions || [])[1]?.masteryLevel < 10\"\n                  :src=\"require(`@/assets/Mastery/${userInfo.top5Champions[1]?.masteryLevel}.webp`)\"\n                  class=\"mastery-icon\" alt=\"Mastery Level\" />\n                <img\n                  v-if=\"(userInfo.top5Champions || [])[1]?.iconUrl && (userInfo.top5Champions || [])[1]?.masteryLevel >= 10\"\n                  src=\"@/assets/Mastery/10.webp\" class=\"mastery-icon\" alt=\"Mastery Level\" />\n\n                <!-- 숙련도 레벨이 10 이상이면 추가 이미지 + 숙련도 레벨 표시 -->\n                <div v-if=\"(userInfo.top5Champions || [])[1]?.masteryLevel >= 10\" class=\"mastery-wrapper\">\n                  <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\" alt=\"High Mastery\" />\n                  <p class=\"high-mastery-level\">{{ (userInfo.top5Champions || [])[1]?.masteryLevel }}</p>\n                </div>\n                <br />\n                <p>{{ (userInfo.top5Champions || [])[1]?.championName || \"\" }}</p>\n              </div>\n              <div class=\"champion-item\">\n                <img v-if=\"(userInfo.top5Champions || [])[0]?.iconUrl\" :src=\"userInfo.top5Champions[0]?.iconUrl\"\n                  alt=\"Champion Image\" />\n                <!-- 숙련도 이미지 -->\n                <img v-if=\"(userInfo.top5Champions || [])[0]?.masteryLevel < 10\"\n                  :src=\"require(`@/assets/Mastery/${userInfo.top5Champions[0]?.masteryLevel}.webp`)\"\n                  class=\"mastery-icon\" alt=\"Mastery Level\" />\n                <img\n                  v-if=\"(userInfo.top5Champions || [])[0]?.iconUrl && (userInfo.top5Champions || [])[0]?.masteryLevel >= 10\"\n                  src=\"@/assets/Mastery/10.webp\" class=\"mastery-icon\" alt=\"Mastery Level\" />\n\n                <!-- 숙련도 레벨이 10 이상이면 추가 이미지 + 숙련도 레벨 표시 -->\n                <div v-if=\"(userInfo.top5Champions || [])[0]?.masteryLevel >= 10\" class=\"mastery-wrapper\">\n                  <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\" alt=\"High Mastery\" />\n                  <p class=\"high-mastery-level\">{{ (userInfo.top5Champions || [])[0]?.masteryLevel }}</p>\n                </div>\n                <br />\n                <p>{{ (userInfo.top5Champions || [])[0]?.championName || \"\" }}</p>\n              </div>\n              <div class=\"champion-item\">\n                <img v-if=\"(userInfo.top5Champions || [])[2]?.iconUrl\" :src=\"userInfo.top5Champions[2]?.iconUrl\"\n                  alt=\"Champion Image\" />\n                <!-- 숙련도 이미지 -->\n                <img v-if=\"(userInfo.top5Champions || [])[2]?.masteryLevel < 10\"\n                  :src=\"require(`@/assets/Mastery/${userInfo.top5Champions[2]?.masteryLevel}.webp`)\"\n                  class=\"mastery-icon\" alt=\"Mastery Level\" />\n                <img\n                  v-if=\"(userInfo.top5Champions || [])[2]?.iconUrl && (userInfo.top5Champions || [])[2]?.masteryLevel >= 10\"\n                  src=\"@/assets/Mastery/10.webp\" class=\"mastery-icon\" alt=\"Mastery Level\" />\n\n                <!-- 숙련도 레벨이 10 이상이면 추가 이미지 + 숙련도 레벨 표시 -->\n                <div v-if=\"(userInfo.top5Champions || [])[2]?.masteryLevel >= 10\" class=\"mastery-wrapper\">\n                  <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\" alt=\"High Mastery\" />\n                  <p class=\"high-mastery-level\">{{ (userInfo.top5Champions || [])[2]?.masteryLevel }}</p>\n                </div>\n                <br />\n                <p>{{ (userInfo.top5Champions || [])[2]?.championName || \"\" }}</p>\n              </div>\n            </div>\n          </div>\n\n        </div>\n\n\n        <br /><br /><button class=\"riot-btn\" @click=\"showRiotModal = true\">Riot 연동</button>\n      </section>\n      <!-- Riot 연동 모달 -->\n      <div v-if=\"showRiotModal == true\" class=\"modal\">\n        <div class=\"modal-content\">\n          <h2>Riot 연동</h2>\n          <label for=\"summoner\">소환사 이름</label>\n          <input type=\"text\" v-model=\"summonerName\" placeholder=\"소환사 이름 입력\" />\n          <label for=\"tag\">태그</label>\n          <input type=\"text\" v-model=\"tag\" placeholder=\"태그 입력 (예: KR1)\" />\n          <button type=\"button\" @click=\"linkRiotAccount\">연동하기</button>\n          <button @click=\"showRiotModal = false\">닫기</button>\n        </div>\n      </div>\n\n    </div>\n  </div>\n</template>\n<script>\nexport default {\n  name: 'MypageEdit',\n  data() {\n    return {\n      userInfo: {\n        nickname: '', // 닉네임 초기값\n        email: '',\n        gender: '',\n        birthdate: '',\n        top5Champions: [],\n        introduction: '',\n      },\n      riotInfo: {\n        summonerRank: [],\n        summonerInfo: {\n          summonerLevel: '',\n          profileIconId: '',\n        },\n\n      },\n      showRiotModal: false,\n      summonerName: '',\n      tag: '',\n    };\n    // if (this.userInfo.password !== this.userInfo.passwordcheck) {\n    //           alert('비밀번호가 일치하지 않습니다.');\n    //           return;\n    //       }\n  },\n  mounted() {\n    this.checkLoginStatus();\n    console.log(\"챔피언 데이터 (초기 로드):\", this.userInfo.top5Champions);\n    console.log(\"챔피언 데이터 (초기 로드):\", this.riotInfo.top5Champions);\n    this.fetchLatestVersion();\n  },\n  methods: {\n    async fetchLatestVersion() {\n      try {\n        const response = await fetch(\"https://ddragon.leagueoflegends.com/api/versions.json\");\n        const versions = await response.json();\n        this.latestVersion = versions[0]; // 가장 최신 버전 사용\n      } catch (error) {\n        console.error(\"Failed to fetch Data Dragon version:\", error);\n      }\n    },\n    async checkLoginStatus() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          method: 'GET',\n          credentials: 'include', // 쿠키 포함\n        });\n\n        if (response.ok) {\n          const data = await response.json();\n          this.isLoggedIn = data.loggedIn;\n          if (data.loggedIn) {\n            this.userInfo = data.user || {}; // 사용자 정보를 객체로 저장\n          }\n        } else {\n          this.resetUserData();\n        }\n      } catch (error) {\n        console.error('Error checking login status:', error);\n        this.resetUserData();\n      }\n    },\n\n    async updateUserProfile() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/change-userprofile`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include', // 쿠키를 포함한 요청\n          body: JSON.stringify({\n            nickname: this.userInfo.nickname,\n            birthdate: this.userInfo.birthdate,\n            gender: this.userInfo.gender,\n            email: this.userInfo.email,\n            introduction: this.userInfo.introduction\n          }),\n        });\n\n        if (response.ok) {\n          const result = await response.json();\n          if (result.success) {\n            alert('내 정보가 성공적으로 업데이트되었습니다.');\n          } else {\n            alert(result.message || '내 정보 변경 실패');\n          }\n        } else {\n          console.error('Error updating profile:', response.statusText);\n          alert('서버 요청에 실패했습니다.');\n        }\n      } catch (error) {\n        console.error('Error updating profile:', error);\n        alert('알 수 없는 오류가 발생했습니다.');\n      }\n    },\n\n\n    async linkRiotAccount() {\n      console.log(\"연동하기 버튼 클릭됨\"); // 디버깅 로그\n\n      if (!this.summonerName || !this.tag) {\n        alert(\"소환사 이름과 태그를 입력해주세요.\");\n        return;\n      }\n\n      try {\n\n        console.log(\"소환사 이름:\", this.summonerName);\n        console.log(\"태그:\", this.tag);\n\n        console.log(\"연동 요청 보냄:\", this.summonerName, this.tag);  // 요청 전 콘솔 로그 추가\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/summonerInfo`, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n          credentials: \"include\",\n          body: JSON.stringify({\n            userid: this.userInfo.userid,\n            summonerName: this.summonerName,\n            tag: this.tag,\n          }),\n        });\n        console.log(\"서버 응답 상태 코드:\", response.status); // 응답 상태 확인\n        const result = await response.json();\n        console.log(\"서버 응답 데이터:\", result); // 응답 데이터 확인\n\n        if (result.success) {\n          alert(\"라이엇 연동 완료\");\n          // Riot API 데이터 업데이트\n          this.riotInfo = {\n            tier: result.tier || \"정보 없음\",\n            summonerLevel: result.summonerLevel || \"정보 없음\",\n            profileIconId: result.profileIconId || '',\n            top5Champions: result.top5Champions || [],\n          };\n\n          this.showRiotModal = false;\n          window.location.reload();\n        } else {\n          alert(\"라이엇 연동 실패: \" + result.message);\n        }\n      } catch (error) {\n        console.error(\"Error linking Riot account:\", error);\n        alert(\"연동 중 오류가 발생했습니다.\");\n      }\n    },\n  }\n};\n</script>\n\n<style scoped>\n/* 전체 스타일 초기화 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\nhtml,\nbody {\n  margin: 0;\n  padding: 0;\n  width: 100%;\n  height: 100%;\n  background-color: #212121\n}\n\nbody {\n  margin: 0;\n  font-family: Arial, sans-serif;\n  background-color: #212121;\n}\n\n#app {\n  margin: 0;\n  display: flex;\n  flex-direction: column;\n  width: 140%;\n  height: 180%;\n  background-color: #212121;\n}\n\n/* 헤더 스타일 */\n.header {\n  width: 100%;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 10px 20px;\n  background-color: #424242;\n  color: #FAFAFA;\n  height: 50px;\n}\n\n.logo {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.circle {\n  width: 20px;\n  height: 20px;\n  border-radius: 50%;\n  background-color: #15513775;\n}\n\n.nav-links {\n  display: flex;\n  gap: 4px;\n  align-items: stretch;\n}\n\n.nav-button {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 50px;\n  width: 80px;\n  padding: 0 16px;\n  background-color: transparent;\n  color: #FAFAFA;\n  border-radius: 0;\n  font-size: 12px;\n  cursor: pointer;\n  transition: background-color 0.2s ease;\n}\n\n.nav-button:hover {\n  background-color: #212121;\n}\n\n\n/* Profile Section */\n.profile-section {\n  display: flex;\n  align-items: center;\n  padding: 20px 0;\n  background-color: #212121;\n}\n\n.profile-header {\n  display: flex;\n  align-items: center;\n  gap: 20px;\n}\n\n.profile-picture {\n  width: 100px;\n  height: 100px;\n  background-color: #424242;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 30px;\n  color: #fff;\n  position: relative;\n  margin-left: 240px;\n}\n\n.profile-picture img {\n  width: 100%;\n  height: 100%;\n  object-fit: cover;\n  border-radius: 50%;\n}\n\n.add-icon {\n  font-size: 24px;\n  position: absolute;\n  bottom: -10px;\n  right: -10px;\n  background-color: #424242;\n  border-radius: 50%;\n  width: 30px;\n  height: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.profile-info h2,\n.profile-info data {\n  margin: 0;\n  font-size: 24px;\n  color: #FAFAFA;\n}\n\n.membership {\n  font-size: 14px;\n  color: #ccc;\n}\n\n/* Form Section */\n.form-section {\n  padding: 20px;\n}\n\n.form-container {\n  background-color: #212121;\n  padding: 20px;\n  border-radius: 10px;\n  color: #FAFAFA;\n  margin: 20px 200px;\n}\n\n.form-container label {\n  color: #FAFAFA;\n  font-size: 14px;\n}\n\nform {\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  width: 100;\n  height: 100;\n}\n\ninput,\nselect {\n  padding: 10px;\n  font-size: 14px;\n  border: none;\n  border-radius: 5px;\n  background-color: #FAFAFA;\n  color: #212121;\n}\n\nselect {\n  cursor: pointer;\n  color: #757575;\n}\n\n.submit-btn {\n  background-color: #0064006d;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n/* Gaming Information Section */\n.gaming-info {\n  padding: 20px 0;\n  color: #FAFAFA;\n  align-items: center;\n}\n\n.gaming-info h2,\n.gaming-info p {\n  color: #FAFAFA;\n  margin-left: 240px;\n}\n\n.gaming-details {\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  padding: 20px 0;\n  color: #FAFAFA;\n  width: 100%;\n  text-align: center;\n  align-items: center;\n  align-content: center;\n\n}\n\n.detail-item {\n  text-align: center;\n  margin-left: 250px;\n}\n\n.detail-item img {\n  width: 200px;\n  height: 200px;\n}\n\n.detail-item p {\n  margin: 0;\n}\n\n.riot-btn {\n  background-color: #0064006d;\n  color: #fff;\n  border: none;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n  width: 200px;\n  height: 40px;\n  justify-content: center;\n  margin-left: 42%;\n}\n\n/* Footer */\nfooter {\n  text-align: center;\n  margin-top: 20px;\n}\n\n.logout-btn {\n  background-color: transparent;\n  border: 1px solid #fff;\n  color: #fff;\n  padding: 10px;\n  border-radius: 5px;\n  cursor: pointer;\n}\n\n/* Riot 연동 모달 스타일 */\n.modal {\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: #212121;\n  padding: 20px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);\n  z-index: 1000;\n  border-radius: 10px;\n  color: #FAFAFA;\n  width: 400px;\n  height: 300px;\n}\n\n.modal-content {\n  display: flex;\n  flex-direction: column;\n}\n\n.modal-content h2 {\n  margin-bottom: 10px;\n}\n\n.modal-content input {\n  margin: 5px 0;\n  padding: 8px;\n  font-size: 14px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n}\n\n.modal-content button {\n  margin-top: 10px;\n  padding: 8px;\n  border: none;\n  cursor: pointer;\n  background-color: #0064006d;\n  color: #FAFAFA;\n  border-radius: 5px;\n}\n\n/* Most Played Champions 스타일 */\n.most-played-champions {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  /* 내부 요소들을 수직 정렬 */\n  margin-right: 80px;\n}\n\n.champion-list {\n  display: flex;\n  gap: 10px;\n  justify-content: center;\n  /* 챔피언 이미지를 가로 정렬 */\n}\n\n.champion-item {\n  position: relative;\n  width: 120px;\n  height: 120px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n}\n\n.champion-item img {\n  width: 120px;\n  /* 이미지 크기 */\n  height: 120px;\n}\n\n.champion-item p {\n  display: flex;\n  margin: 10px 0 0;\n  /* 위쪽 간격 추가 */\n  font-size: 20px;\n  font-weight: bold;\n  /* 글씨 두껍게 */\n  white-space: normal;\n  /* 줄바꿈 허용 */\n  word-break: keep-all;\n  /* 단어 단위 줄바꿈 */\n\n}\n\n.most-champions-title {\n  font-size: 24px;\n  font-weight: bold;\n  text-align: center;\n  width: 100%;\n  margin-right: 240px;\n}\n\n.champion-item .mastery-icon {\n  position: absolute;\n  bottom: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 70px;\n  height: 50px;\n  z-index: 2;\n}\n\n.most-played-champions .champion-item .mastery-wrapper {\n  position: absolute;\n  bottom: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  width: 70px;\n  height: 50px;\n  z-index: 3;\n}\n\n.most-played-champions .champion-item .high-mastery-icon {\n  bottom: -6px;\n  width: 38px;\n  height: 18px;\n  position: absolute;\n  left: 16px;\n}\n\n.most-played-champions .champion-item .high-mastery-level {\n  bottom: -18px;\n  position: absolute;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  font-size: 16px;\n  font-weight: bold;\n  color: #212121;\n  z-index: 4;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}