{"ast":null,"code":"export default {\n  data() {\n    return {\n      email: '',\n      message: '',\n      success: false\n    };\n  },\n  methods: {\n    async requestResetLink() {\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/request-password-reset`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.email\n          })\n        });\n        const result = await response.json();\n        this.success = result.success;\n        this.message = result.message;\n      } catch (error) {\n        console.error('Error requesting password reset:', error);\n        this.success = false;\n        this.message = '비밀번호 재설정 요청 중 오류가 발생했습니다.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","email","message","success","methods","requestResetLink","response","fetch","process","env","VUE_APP_API_URL","method","headers","body","JSON","stringify","result","json","error","console"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/RequestPasswordReset.vue"],"sourcesContent":["<template>\n    <div class=\"request-password-reset\">\n        <h1>비밀번호 재설정 요청</h1>\n        <form @submit.prevent=\"requestResetLink\">\n            <div>\n                <label for=\"email\">이메일:</label>\n                <input type=\"email\" id=\"email\" v-model=\"email\" placeholder=\"이메일을 입력하세요\" required />\n            </div>\n            <button type=\"submit\">비밀번호 재설정 링크 보내기</button>\n        </form>\n        <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            email: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async requestResetLink() {\n            try {\n                const response = await fetch(`${process.env.VUE_APP_API_URL}/request-password-reset`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ email: this.email }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error requesting password reset:', error);\n                this.success = false;\n                this.message = '비밀번호 재설정 요청 중 오류가 발생했습니다.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n</style>"],"mappings":"AAeA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,EAAE;MACTC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,gBAAgBA,CAAA,EAAG;MACrB,IAAI;QACA,MAAMC,QAAO,GAAI,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe,yBAAyB,EAAE;UAClFC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEd,KAAK,EAAE,IAAI,CAACA;UAAM,CAAC;QAC9C,CAAC,CAAC;QAEF,MAAMe,MAAK,GAAI,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACpC,IAAI,CAACd,OAAM,GAAIa,MAAM,CAACb,OAAO;QAC7B,IAAI,CAACD,OAAM,GAAIc,MAAM,CAACd,OAAO;MACjC,EAAE,OAAOgB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QACxD,IAAI,CAACf,OAAM,GAAI,KAAK;QACpB,IAAI,CAACD,OAAM,GAAI,2BAA2B;MAC9C;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}