{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, vModelText as _vModelText, withKeys as _withKeys, withDirectives as _withDirectives } from \"vue\";\nimport _imports_0 from '@/assets/Mastery/10.webp';\nimport _imports_1 from '@/assets/Mastery/level.webp';\nconst _hoisted_1 = {\n  class: \"chat-container\"\n};\nconst _hoisted_2 = {\n  class: \"opponent-info\"\n};\nconst _hoisted_3 = {\n  class: \"opponent-profile-picture\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"summoner-name\"\n};\nconst _hoisted_6 = {\n  class: \"opponent-position-mic-container\"\n};\nconst _hoisted_7 = [\"src\"];\nconst _hoisted_8 = {\n  class: \"position-text\"\n};\nconst _hoisted_9 = {\n  class: \"mic-item\"\n};\nconst _hoisted_10 = [\"src\"];\nconst _hoisted_11 = {\n  class: \"mic-text\"\n};\nconst _hoisted_12 = {\n  class: \"ingame-info\"\n};\nconst _hoisted_13 = {\n  class: \"ingame-tier\"\n};\nconst _hoisted_14 = [\"src\"];\nconst _hoisted_15 = {\n  key: 0,\n  class: \"most-played-champions\"\n};\nconst _hoisted_16 = {\n  class: \"champion-list\"\n};\nconst _hoisted_17 = [\"src\"];\nconst _hoisted_18 = {\n  class: \"mastery-wrapper\"\n};\nconst _hoisted_19 = [\"src\"];\nconst _hoisted_20 = {\n  key: 1,\n  src: _imports_0,\n  class: \"mastery-icon\",\n  alt: \"Mastery Level\"\n};\nconst _hoisted_21 = {\n  class: \"mastery-box\"\n};\nconst _hoisted_22 = {\n  class: \"high-mastery-level\"\n};\nconst _hoisted_23 = {\n  class: \"champion-name\"\n};\nconst _hoisted_24 = {\n  class: \"chat-room\"\n};\nconst _hoisted_25 = {\n  class: \"chat-header\"\n};\nconst _hoisted_26 = {\n  class: \"chat-window\",\n  ref: \"chatWindow\"\n};\nconst _hoisted_27 = {\n  class: \"message-content\"\n};\nconst _hoisted_28 = {\n  class: \"message-text\"\n};\nconst _hoisted_29 = {\n  class: \"message-meta\"\n};\nconst _hoisted_30 = {\n  class: \"message-time\"\n};\nconst _hoisted_31 = {\n  class: \"chat-input\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"img\", {\n    src: $options.getOpponentProfileImage,\n    alt: \"프로필 사진\",\n    class: \"profile-image\"\n  }, null, 8, _hoisted_4)]), _createElementVNode(\"h2\", null, _toDisplayString($options.getOpponent.nickname || \"상대방 닉네임\"), 1), _createElementVNode(\"p\", _hoisted_5, \"@\" + _toDisplayString($options.getOpponent.SummonerName || \"소환사 아이디 없음\") + _toDisplayString('#' + $options.getOpponent.Tag || \"\"), 1), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.opponentPositions, (pos, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"position-item\"\n    }, [_createElementVNode(\"img\", {\n      src: $options.getPositionIcon(pos),\n      alt: \"포지션 아이콘\",\n      class: \"position-icon\"\n    }, null, 8, _hoisted_7), _createElementVNode(\"p\", _hoisted_8, _toDisplayString(pos), 1)]);\n  }), 128)), _createElementVNode(\"div\", _hoisted_9, [_createElementVNode(\"img\", {\n    src: $options.opponentMicrophoneIcon,\n    alt: \"마이크 상태 아이콘\",\n    class: \"mic-icon\"\n  }, null, 8, _hoisted_10), _createElementVNode(\"p\", _hoisted_11, _toDisplayString($options.getOpponent.microphone || \"정보 없음\"), 1)])]), _createElementVNode(\"div\", _hoisted_12, [_createElementVNode(\"div\", _hoisted_13, [_createElementVNode(\"img\", {\n    src: `https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/${($options.getOpponent.summonerRank?.tier || 'unranked').toLowerCase()}.png`,\n    alt: \"Game Tier\",\n    class: \"ingame-icon\"\n  }, null, 8, _hoisted_14), _createElementVNode(\"p\", null, _toDisplayString($options.getOpponent.summonerRank?.tier || \"Unranked\") + \" \" + _toDisplayString($options.getOpponent.summonerRank?.rank || \"\"), 1)]), $options.getOpponentChampions.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_15, [_createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.getOpponentChampions, (champion, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: \"champion-item\"\n    }, [_createElementVNode(\"img\", {\n      src: champion.iconUrl,\n      class: \"champion-icon\",\n      alt: \"Champion Image\"\n    }, null, 8, _hoisted_17), _createElementVNode(\"div\", _hoisted_18, [champion.masteryLevel < 10 ? (_openBlock(), _createElementBlock(\"img\", {\n      key: 0,\n      src: require(`@/assets/Mastery/${champion.masteryLevel}.webp`),\n      class: \"mastery-icon\",\n      alt: \"Mastery Level\"\n    }, null, 8, _hoisted_19)) : _createCommentVNode(\"\", true), champion.masteryLevel >= 10 ? (_openBlock(), _createElementBlock(\"img\", _hoisted_20)) : _createCommentVNode(\"\", true), _createElementVNode(\"div\", _hoisted_21, [_cache[4] || (_cache[4] = _createElementVNode(\"img\", {\n      src: _imports_1,\n      class: \"high-mastery-icon\",\n      alt: \"High Mastery\"\n    }, null, -1)), _createElementVNode(\"p\", _hoisted_22, _toDisplayString(champion.masteryLevel), 1)])]), _createElementVNode(\"p\", _hoisted_23, _toDisplayString(champion.championName), 1)]);\n  }), 128))])])) : _createCommentVNode(\"\", true)])]), _createElementVNode(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[5] || (_cache[5] = _createElementVNode(\"h1\", null, \"채팅방\", -1)), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.leaveRoom && $options.leaveRoom(...args)),\n    class: \"leave-button\"\n  }, \"나가기\")]), _createElementVNode(\"div\", _hoisted_26, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: index,\n      class: _normalizeClass([\"chat-message\", {\n        'my-message': message.username === $data.userInfo?.nickname,\n        'system-message': message.type === 'system'\n      }])\n    }, [_createElementVNode(\"div\", _hoisted_27, [_createElementVNode(\"span\", _hoisted_28, _toDisplayString(message.message), 1)]), _createElementVNode(\"div\", _hoisted_29, [_createElementVNode(\"span\", _hoisted_30, _toDisplayString($options.formatTime(message.timestamp)), 1)])], 2);\n  }), 128))], 512), _createElementVNode(\"div\", _hoisted_31, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.newMessage = $event),\n    onKeyup: _cache[2] || (_cache[2] = _withKeys((...args) => $options.sendMessage && $options.sendMessage(...args), [\"enter\"])),\n    placeholder: \"메시지를 입력하세요...\"\n  }, null, 544), [[_vModelText, $data.newMessage]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.sendMessage && $options.sendMessage(...args))\n  }, \"전송\")])])]);\n}","map":{"version":3,"names":["_imports_0","_imports_1","class","key","src","alt","ref","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","$options","getOpponentProfileImage","_hoisted_4","_toDisplayString","getOpponent","nickname","_hoisted_5","SummonerName","Tag","_hoisted_6","_Fragment","_renderList","opponentPositions","pos","index","getPositionIcon","_hoisted_7","_hoisted_8","_hoisted_9","opponentMicrophoneIcon","_hoisted_10","_hoisted_11","microphone","_hoisted_12","_hoisted_13","summonerRank","tier","toLowerCase","_hoisted_14","rank","getOpponentChampions","length","_hoisted_15","_hoisted_16","champion","iconUrl","_hoisted_17","_hoisted_18","masteryLevel","require","_hoisted_19","_createCommentVNode","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","championName","_hoisted_24","_hoisted_25","onClick","_cache","args","leaveRoom","_hoisted_26","$data","messages","message","_normalizeClass","username","userInfo","type","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","formatTime","timestamp","_hoisted_31","$event","newMessage","onKeyup","_withKeys","sendMessage","placeholder"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/ChatRoom.vue"],"sourcesContent":["<template>\n    <div class=\"chat-container\">\n        <!-- 왼쪽: 상대방 정보 -->\n        <div class=\"opponent-info\">\n            <div class=\"opponent-profile-picture\">\n                <img :src=\"getOpponentProfileImage\" alt=\"프로필 사진\" class=\"profile-image\" />\n            </div>\n\n            <h2>{{ getOpponent.nickname || \"상대방 닉네임\" }}</h2>\n            <p class=\"summoner-name\">@{{ getOpponent.SummonerName || \"소환사 아이디 없음\" }}{{ '#' + getOpponent.Tag || \"\" }}\n            </p>\n\n            <div class=\"opponent-position-mic-container\">\n                <div v-for=\"(pos, index) in opponentPositions\" :key=\"index\" class=\"position-item\">\n                    <img :src=\"getPositionIcon(pos)\" alt=\"포지션 아이콘\" class=\"position-icon\" />\n                    <p class=\"position-text\">{{ pos }}</p>\n                </div>\n                <div class=\"mic-item\">\n                    <img :src=\"opponentMicrophoneIcon\" alt=\"마이크 상태 아이콘\" class=\"mic-icon\" />\n                    <p class=\"mic-text\">{{ getOpponent.microphone || \"정보 없음\" }}</p>\n                </div>\n            </div>\n\n            <div class=\"ingame-info\">\n                <div class=\"ingame-tier\">\n                    <img :src=\"`https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/${(getOpponent.summonerRank?.tier || 'unranked').toLowerCase()}.png`\"\n                        alt=\"Game Tier\" class=\"ingame-icon\" />\n                    <p>{{ getOpponent.summonerRank?.tier || \"Unranked\" }} {{ getOpponent.summonerRank?.rank || \"\" }}</p>\n                </div>\n\n                <!-- ✅ Most Champions (한 줄 정렬 + 마스터리 적용) -->\n                <div class=\"most-played-champions\" v-if=\"getOpponentChampions.length > 0\">\n                    <div class=\"champion-list\">\n                        <div v-for=\"(champion, index) in getOpponentChampions\" :key=\"index\" class=\"champion-item\">\n\n                            <img :src=\"champion.iconUrl\" class=\"champion-icon\" alt=\"Champion Image\" />\n\n                            <div class=\"mastery-wrapper\">\n                                <img v-if=\"champion.masteryLevel < 10\"\n                                    :src=\"require(`@/assets/Mastery/${champion.masteryLevel}.webp`)\"\n                                    class=\"mastery-icon\" alt=\"Mastery Level\" />\n                                <img v-if=\"champion.masteryLevel >= 10\" src=\"@/assets/Mastery/10.webp\"\n                                    class=\"mastery-icon\" alt=\"Mastery Level\" />\n\n                                <div class=\"mastery-box\">\n                                    <img src=\"@/assets/Mastery/level.webp\" class=\"high-mastery-icon\"\n                                        alt=\"High Mastery\" />\n                                    <p class=\"high-mastery-level\">{{ champion.masteryLevel }}</p>\n                                </div>\n                            </div>\n\n                            <p class=\"champion-name\">{{ champion.championName }}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <!-- ✅ 채팅창 -->\n        <div class=\"chat-room\">\n            <div class=\"chat-header\">\n                <h1>채팅방</h1>\n                <button @click=\"leaveRoom\" class=\"leave-button\">나가기</button>\n            </div>\n\n            <div class=\"chat-window\" ref=\"chatWindow\">\n                <div v-for=\"(message, index) in messages\" :key=\"index\" class=\"chat-message\"\n                    :class=\"{ 'my-message': message.username === userInfo?.nickname, 'system-message': message.type === 'system' }\">\n                    <div class=\"message-content\">\n                        <span class=\"message-text\">{{ message.message }}</span>\n                    </div>\n                    <div class=\"message-meta\">\n                        <span class=\"message-time\">{{ formatTime(message.timestamp) }}</span>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"chat-input\">\n                <input v-model=\"newMessage\" @keyup.enter=\"sendMessage\" placeholder=\"메시지를 입력하세요...\" />\n                <button @click=\"sendMessage\">전송</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n    data() {\n        return {\n            socket: null,\n            messages: [],\n            newMessage: \"\",\n            match: null,\n            matchId: null,\n            userInfo: null,\n            opponentDisconnected: false,\n            iconSize: \"60px\",\n        };\n    },\n    computed: {\n        getOpponent() {\n            if (!this.match?.players || !this.userInfo) return {};\n            return (\n                this.match.players.find((p) => p.userid !== this.userInfo.userid) || {}\n            );\n        },\n        getOpponentProfileImage() {\n            return (\n                this.getOpponent?.profileImage ||\n                (this.getOpponent?.summonerInfo?.profileIconId\n                    ? `http://ddragon.leagueoflegends.com/cdn/14.22.1/img/profileicon/${this.getOpponent.summonerInfo.profileIconId\n                    }.png`\n                    : \"/icons/default-profile.png\")\n            );\n        },\n        opponentPositions() {\n            const pos = this.getOpponent.position;\n            if (!pos) return [\"없음\"];\n            return Array.isArray(pos) ? pos.slice(0, 2) : String(pos).split(\",\").slice(0, 2);\n        },\n        getOpponentChampions() {\n            return this.getOpponent?.top5Champions?.slice(0, 3) || [];\n        },\n        getPositionIcon() {\n            return (position) =>\n            ({\n                탑: \"/icons/top.png\",\n                정글: \"/icons/jungle.png\",\n                미드: \"/icons/mid.png\",\n                원딜: \"/icons/adc.png\",\n                서포터: \"/icons/support.png\",\n                없음: \"/icons/none.png\",\n            }[position] || \"/icons/none.png\");\n        },\n        opponentMicrophoneIcon() {\n            const mic = String(this.getOpponent.microphone || \"\").trim().toLowerCase();\n            if (mic === \"가능\" || mic === \"사용\") return \"/icons/mic-on.png\";\n            return \"/icons/mic-off.png\";\n        },\n    },\n    methods: {\n        setupSocket() {\n            // 이미 연결되었거나, 매칭 정보(roomName)이 없으면 초기화 중단\n            if (this.socket || !this.match?.roomName) return;\n\n            this.socket = io(`${process.env.VUE_APP_API_URL}`, {\n                withCredentials: true,\n            });\n\n            this.socket.on(\"connect\", () => {\n                if (this.match.roomName) {\n                    this.socket.emit(\"join room\", { roomName: this.match.roomName });\n                }\n            });\n\n            this.socket.on(\"chat message\", (data) => {\n                this.messages.push(data);\n            });\n\n            this.socket.on(\"user disconnected\", (data) => {\n                this.opponentDisconnected = true;\n                this.messages.push({\n                    type: \"system\",\n                    message: `${data.nickname}님이 채팅방을 나갔습니다.`,\n                });\n                setTimeout(() => this.$router.push(\"/match\"), 2000);\n            });\n\n            // ◀ 서버에서 발생한 매칭 에러 처리\n            this.socket.on(\"matchError\", ({ message }) => {\n                alert(`⚠️ 매칭 오류: ${message}`);\n                this.$router.push(\"/match\");\n            });\n\n            this.socket.on(\"connect_error\", (err) => {\n                console.error(\"❌ 소켓 연결 에러:\", err);\n            });\n        },\n\n        leaveRoom() {\n            if (this.socket) {\n                if (!this.opponentDisconnected) {\n                    this.socket.emit(\"leave room\", {\n                        matchId: this.matchId,\n                        userId: this.userInfo?.userid,\n                        nickname: this.userInfo?.nickname,\n                    });\n                }\n                this.socket.disconnect();\n            }\n            this.$router.push(\"/match\");\n        },\n\n        sendMessage() {\n            if (this.newMessage.trim() && this.socket) {\n                this.socket.emit(\"chat message\", {\n                    matchId: this.matchId,\n                    message: this.newMessage,\n                    timestamp: new Date().toISOString(),\n                });\n                this.newMessage = \"\";\n            }\n        },\n\n        formatTime(ts) {\n            return ts\n                ? new Date(ts).toLocaleTimeString(\"ko-KR\", {\n                    hour: \"2-digit\",\n                    minute: \"2-digit\",\n                })\n                : \"\";\n        },\n\n        async fetchUserInfo() {\n            try {\n                const res = await fetch(\n                    `${process.env.VUE_APP_API_URL}/auth/check-login`,\n                    {\n                        credentials: \"include\",\n                    }\n                );\n                const data = await res.json();\n                if (data.loggedIn) this.userInfo = data.user;\n            } catch (e) {\n                console.error(\"❌ 사용자 정보 조회 오류:\", e);\n            }\n        },\n\n        async fetchMatchInfo() {\n            if (!this.matchId) return;\n            try {\n                const res = await fetch(\n                    `${process.env.VUE_APP_API_URL}/match/get/${this.matchId}`,\n                    { credentials: \"include\" }\n                );\n                const data = await res.json();\n                if (data.success) {\n                    this.match = data.match;\n                    this.setupSocket();\n                }\n            } catch (e) {\n                console.error(\"❌ 매칭 정보 가져오기 오류:\", e);\n            }\n        },\n    },\n\n    async mounted() {\n        this.matchId = this.$route.query.matchId;\n        await this.fetchUserInfo();\n        await this.fetchMatchInfo();\n    },\n\n    beforeUnmount() {\n        if (this.socket) {\n            if (!this.opponentDisconnected) {\n                this.socket.emit(\"leave room\", {\n                    matchId: this.matchId,\n                    userId: this.userInfo?.userid,\n                    nickname: this.userInfo?.nickname,\n                });\n            }\n            this.socket.disconnect();\n            this.socket = null;\n        }\n    },\n};\n</script>\n\n<style scoped>\n/* ✅ 전체 컨테이너 */\n.chat-container {\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: stretch;\n    width: 100vw;\n    min-height: 100vh;\n    /* 최소 높이 100vh 유지 */\n    overflow: auto;\n    /* 창 크기가 줄어들면 스크롤 생성 */\n    flex-wrap: nowrap;\n    /* 상대방 정보와 채팅창이 줄바꿈되지 않도록 고정 */\n}\n\n/* ✅ 상대방 정보 영역 */\n.opponent-info {\n    flex: 0.3;\n    background-color: rgb(25, 25, 25);\n    color: white;\n    text-align: center;\n    padding: 20px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    overflow: auto;\n    /* 내부 요소 스크롤 가능 */\n}\n\n/* ✅ 상대방 프로필 사진 */\n.opponent-profile-picture {\n    width: 80px;\n    height: 80px;\n    border-radius: 90%;\n    overflow: hidden;\n    margin-bottom: 10px;\n}\n\n.opponent-profile-picture img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n/* ✅ 상대방 닉네임 */\n.opponent-info h2 {\n    margin: 10px 0;\n}\n\n/* ✅ 소환사 아이디 스타일 */\n.summoner-name {\n    font-size: 14px;\n    color: #bbb;\n    margin-top: -5px;\n}\n\n/* ✅ 포지션 + 마이크 아이콘을 한 줄로 정렬 */\n.opponent-position-mic-container {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n    justify-content: center;\n    margin-bottom: 15px;\n}\n\n/* ✅ 포지션 아이콘 스타일 */\n.position-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n.position-icon {\n    width: var(--icon-size, 60px);\n    height: var(--icon-size, 60px);\n}\n\n.position-text {\n    margin-top: 5px;\n    font-size: 14px;\n}\n\n/* ✅ 마이크 아이콘 스타일 */\n.mic-item {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n/* ✅ 마이크 ON 아이콘 (icons/mic-on.png) 크기 조절 */\n.mic-icon[src*=\"mic-on.png\"] {\n    width: 35px;\n    /* 원하는 크기로 변경 */\n    height: 60px;\n    /* 원하는 크기로 변경 */\n}\n\n/* ✅ 마이크 OFF 아이콘 (icons/mic-off.png) 크기 조절 */\n.mic-icon[src*=\"mic-off.png\"] {\n    width: 45px;\n    /* 원하는 크기로 변경 */\n    height: 60px;\n    /* 원하는 크기로 변경 */\n}\n\n.mic-text {\n    margin-top: 5px;\n    font-size: 14px;\n}\n\n/* ✅ 인게임 정보 */\n.ingame-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 15px;\n    margin-top: 20px;\n}\n\n/* ✅ Game Tier */\n.ingame-tier,\n.ingame-champions {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n/* ✅ Game Tier 아이콘 스타일 */\n.ingame-tier .ingame-icon {\n    width: 150px;\n    height: 150px;\n    margin-bottom: 5px;\n}\n\n/* ✅ Most Champions 영역 */\n.most-played-champions {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    margin-top: 20px;\n}\n\n/* ✅ 챔피언 리스트 (한 줄로 정렬) */\n.champion-list {\n    display: flex;\n    flex-direction: row;\n    gap: 10px;\n    /* 챔피언 아이콘 간격 */\n    justify-content: center;\n    width: 100%;\n}\n\n/* ✅ 챔피언 아이템 컨테이너 */\n.champion-item {\n    display: flex;\n    flex-direction: column;\n    /* 세로 정렬 */\n    align-items: center;\n    text-align: center;\n    position: relative;\n}\n\n/* ✅ 챔피언 아이콘 */\n.champion-icon {\n    width: 80px;\n    height: 80px;\n}\n\n/* ✅ 숙련도 아이콘 및 박스 */\n.mastery-wrapper {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    position: relative;\n    margin-top: -10px;\n    /* 아이콘과 살짝 겹치게 */\n}\n\n/* ✅ 마스터리 아이콘 */\n.mastery-icon {\n    width: 40px;\n    height: 30px;\n    position: relative;\n}\n\n/* ✅ 마스터리 박스 스타일 (크기 1/4로 줄이고 내부 정렬) */\n.mastery-box {\n    position: relative;\n    width: 25px;\n    /* 마스터리 박스 크기 */\n    height: 15px;\n    display: flex;\n    justify-content: center;\n    /* 중앙 정렬 */\n    align-items: center;\n    /* 수직 중앙 정렬 */\n}\n\n/* ✅ 마스터리 박스 크기 */\n.high-mastery-icon {\n    width: 25px;\n    height: 10px;\n    position: relative;\n    /* 숫자를 내부에 넣기 위해 필요 */\n}\n\n/* ✅ 마스터리 숫자 (박스 내부 중앙 + 살짝 더 위로) */\n.high-mastery-level {\n    position: absolute;\n    top: 25%;\n    /* 기존보다 더 위로 */\n    left: 50%;\n    transform: translate(-50%, -85%);\n    /* Y축 이동량 미세 조정 */\n    font-size: 8px;\n    /* 글자 크기 유지 */\n    font-weight: bold;\n    color: #2c1b05;\n    /* 가독성을 위해 어두운 색상 */\n    text-align: center;\n    width: 100%;\n}\n\n/* ✅ 챔피언 이름을 맨 아래로 배치 */\n.champion-name {\n    margin-top: 10px;\n    /* 박스와 간격 조정 */\n    font-size: 16px;\n    font-weight: bold;\n}\n\n/* ✅ 채팅창 영역 */\n.chat-room {\n    flex: 0.7;\n    background-color: rgb(33, 33, 33);\n    color: white;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    padding: 20px;\n    overflow: auto;\n    /* 내부 요소 스크롤 가능 */\n}\n\n/* ✅ 채팅 헤더 */\n.chat-header {\n    width: 100%;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 10px;\n}\n\n.leave-button {\n    padding: 8px 16px;\n    background-color: rgb(21, 81, 55);\n    color: white;\n    border: none;\n    border-radius: 45px;\n    cursor: pointer;\n}\n\n/* ✅ 채팅창 내부 스크롤 */\n.chat-window {\n    flex: 1;\n    overflow-y: auto;\n    width: 80%;\n    max-height: 70vh;\n    padding: 10px;\n    overscroll-behavior: contain;\n    /* 스크롤이 부모 요소로 전달되지 않도록 방지 */\n}\n\n/* ✅ 채팅 메시지 */\n.chat-message {\n    display: flex;\n    flex-direction: column;\n    margin-bottom: 10px;\n    align-items: flex-start;\n}\n\n.my-message {\n    align-items: flex-end;\n}\n\n/* ✅ 메시지 내용 */\n.message-content {\n    background: rgb(66, 66, 66);\n    padding: 10px;\n    border-radius: 45px;\n    max-width: 70%;\n}\n\n.my-message .message-content {\n    background: rgb(21, 81, 55);\n    color: white;\n    padding: 10px;\n    border-radius: 45px;\n}\n\n/* ✅ 메시지 시간 */\n.message-meta {\n    margin-top: 4px;\n}\n\n.message-time {\n    font-size: 12px;\n    color: #666;\n}\n\n/* ✅ 채팅 입력창 */\n.chat-input {\n    display: flex;\n    width: 90%;\n    padding: 10px;\n    background: rgb(66, 66, 66);\n    border-radius: 45px;\n    align-items: center;\n}\n\n.chat-input input {\n    flex: 1;\n    padding: 10px;\n    background: none;\n    color: white;\n    border: none;\n}\n\n.chat-input button {\n    padding: 10px 20px;\n    background: rgb(21, 81, 55);\n    color: white;\n    border: none;\n    border-radius: 45px;\n    cursor: pointer;\n}\n\n/* ✅ 작은 화면에서도 원본 크기 유지 */\n@media (max-width: 768px) {\n    .chat-container {\n        flex-direction: row;\n        /* 줄바꿈 방지 */\n        overflow: auto;\n        /* 전체 컨테이너에서 스크롤 가능하도록 설정 */\n    }\n\n    .opponent-info,\n    .chat-room {\n        height: 100vh;\n        /* 상대방 정보와 채팅창 높이 유지 */\n        overflow: auto;\n        /* 내부 스크롤 */\n    }\n}\n\n/* WebKit 기반 브라우저 (Chrome, Edge, Safari 등) */\n.chat-window::-webkit-scrollbar {\n    width: 8px;\n}\n\n.chat-window::-webkit-scrollbar-track {\n    background: rgb(33, 33, 33);\n    /* 채팅창 배경과 동일한 색상 */\n    border-radius: 10px;\n}\n\n.chat-window::-webkit-scrollbar-thumb {\n    background-color: rgb(85, 85, 85);\n    /* 배경보다 밝은 톤으로 대비 부여 */\n    border-radius: 10px;\n    border: 2px solid rgb(33, 33, 33);\n    /* 배경색과 동일한 테두리 */\n}\n\n.chat-window::-webkit-scrollbar-thumb:hover {\n    background-color: rgb(105, 105, 105);\n    /* 호버 시 살짝 더 밝게 */\n}\n\n/* Firefox */\n.chat-window {\n    scrollbar-width: thin;\n    scrollbar-color: rgb(85, 85, 85) rgb(33, 33, 33);\n    /* thumb 색상, track 색상 */\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}