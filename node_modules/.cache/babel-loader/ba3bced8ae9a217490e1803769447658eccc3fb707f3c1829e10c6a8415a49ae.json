{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, toDisplayString as _toDisplayString, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"reset-password\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_cache[6] || (_cache[6] = _createElementVNode(\"h1\", null, \"비밀번호 변경\", -1 /* HOISTED */)), _createElementVNode(\"form\", {\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.resetPassword && $options.resetPassword(...args), [\"prevent\"]))\n  }, [_createElementVNode(\"div\", null, [_cache[3] || (_cache[3] = _createElementVNode(\"label\", {\n    for: \"newPassword\"\n  }, \"새 비밀번호:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"newPassword\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPassword = $event),\n    placeholder: \"새 비밀번호를 입력하세요\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPassword]])]), _createElementVNode(\"div\", null, [_cache[4] || (_cache[4] = _createElementVNode(\"label\", {\n    for: \"confirmPassword\"\n  }, \"비밀번호 확인:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.confirmPassword = $event),\n    placeholder: \"비밀번호를 다시 입력하세요\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _cache[5] || (_cache[5] = _createElementVNode(\"button\", {\n    type: \"submit\"\n  }, \"비밀번호 변경\", -1 /* HOISTED */))], 32 /* NEED_HYDRATION */), $data.message ? (_openBlock(), _createElementBlock(\"p\", {\n    key: 0,\n    class: _normalizeClass($data.success ? 'success' : 'error')\n  }, _toDisplayString($data.message), 3 /* TEXT, CLASS */)) : _createCommentVNode(\"v-if\", true)]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","onSubmit","_cache","_withModifiers","args","$options","resetPassword","for","type","id","$event","$data","newPassword","placeholder","required","confirmPassword","message","key","_normalizeClass","success","_createCommentVNode"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/ResetPassword.vue"],"sourcesContent":["<template>\n    <div class=\"reset-password\">\n        <h1>비밀번호 변경</h1>\n        <form @submit.prevent=\"resetPassword\">\n            <div>\n                <label for=\"newPassword\">새 비밀번호:</label>\n                <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" placeholder=\"새 비밀번호를 입력하세요\" required />\n            </div>\n            <div>\n                <label for=\"confirmPassword\">비밀번호 확인:</label>\n                <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" placeholder=\"비밀번호를 다시 입력하세요\"\n                    required />\n            </div>\n            <button type=\"submit\">비밀번호 변경</button>\n        </form>\n        <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            newPassword: '',\n            confirmPassword: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async resetPassword() {\n            const token = new URLSearchParams(window.location.search).get('token');\n            if (!token) {\n                this.success = false;\n                this.message = '유효하지 않은 요청입니다.';\n                return;\n            }\n\n            if (this.newPassword !== this.confirmPassword) {\n                this.success = false;\n                this.message = '비밀번호가 일치하지 않습니다.';\n                return;\n            }\n\n            try {\n                const response = await fetch(`${process.env.VUE_APP_API_URL}/reset-password`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ token, newPassword: this.newPassword }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error resetting password:', error);\n                this.success = false;\n                this.message = '비밀번호 변경 중 오류가 발생했습니다.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n</style>"],"mappings":";;EACSA,KAAK,EAAC;AAAgB;;uBAA3BC,mBAAA,CAeM,OAfNC,UAeM,G,0BAdFC,mBAAA,CAAgB,YAAZ,SAAO,sBACXA,mBAAA,CAWO;IAXAC,QAAM,EAAAC,MAAA,QAAAA,MAAA,MAHrBC,cAAA,KAAAC,IAAA,KAG+BC,QAAA,CAAAC,aAAA,IAAAD,QAAA,CAAAC,aAAA,IAAAF,IAAA,CAAa;MAChCJ,mBAAA,CAGM,c,0BAFFA,mBAAA,CAAwC;IAAjCO,GAAG,EAAC;EAAa,GAAC,SAAO,sB,gBAChCP,mBAAA,CAAqG;IAA9FQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,aAAa;IANvD,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAMiEC,KAAA,CAAAC,WAAW,GAAAF,MAAA;IAAEG,WAAW,EAAC,eAAe;IAACC,QAAQ,EAAR;iDAAzCH,KAAA,CAAAC,WAAW,E,KAEhEZ,mBAAA,CAIM,c,0BAHFA,mBAAA,CAA6C;IAAtCO,GAAG,EAAC;EAAiB,GAAC,UAAQ,sB,gBACrCP,mBAAA,CACe;IADRQ,IAAI,EAAC,UAAU;IAACC,EAAE,EAAC,iBAAiB;IAV3D,uBAAAP,MAAA,QAAAA,MAAA,MAAAQ,MAAA,IAUqEC,KAAA,CAAAI,eAAe,GAAAL,MAAA;IAAEG,WAAW,EAAC,gBAAgB;IAC9FC,QAAQ,EAAR;iDADiDH,KAAA,CAAAI,eAAe,E,+BAGxEf,mBAAA,CAAsC;IAA9BQ,IAAI,EAAC;EAAQ,GAAC,SAAO,qB,4BAExBG,KAAA,CAAAK,OAAO,I,cAAhBlB,mBAAA,CAA0E;IAflFmB,GAAA;IAe2BpB,KAAK,EAfhCqB,eAAA,CAekCP,KAAA,CAAAQ,OAAO;sBAA2BR,KAAA,CAAAK,OAAO,2BAf3EI,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}