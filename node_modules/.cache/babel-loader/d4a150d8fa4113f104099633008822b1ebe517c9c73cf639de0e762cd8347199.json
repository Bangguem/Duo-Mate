{"ast":null,"code":"import { createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"match-queue\"\n};\nconst _hoisted_2 = {\n  class: \"match-container\"\n};\nconst _hoisted_3 = {\n  class: \"profile-rank-container\"\n};\nconst _hoisted_4 = {\n  class: \"profile-section\"\n};\nconst _hoisted_5 = {\n  class: \"profile-picture\"\n};\nconst _hoisted_6 = [\"src\"];\nconst _hoisted_7 = {\n  class: \"user-rank-container\"\n};\nconst _hoisted_8 = {\n  class: \"rank-info\"\n};\nconst _hoisted_9 = [\"src\"];\nconst _hoisted_10 = {\n  class: \"rank-text\"\n};\nconst _hoisted_11 = {\n  class: \"selection-section\"\n};\nconst _hoisted_12 = {\n  class: \"position-options\"\n};\nconst _hoisted_13 = [\"onClick\"];\nconst _hoisted_14 = [\"src\", \"alt\"];\nconst _hoisted_15 = {\n  class: \"selection-section\"\n};\nconst _hoisted_16 = {\n  class: \"voice-options\"\n};\nconst _hoisted_17 = [\"onClick\"];\nconst _hoisted_18 = [\"src\", \"alt\"];\nconst _hoisted_19 = {\n  class: \"selection-section\"\n};\nconst _hoisted_20 = {\n  class: \"game-mode-options\"\n};\nconst _hoisted_21 = [\"onClick\"];\nconst _hoisted_22 = [\"src\", \"alt\"];\nconst _hoisted_23 = [\"disabled\"];\nconst _hoisted_24 = {\n  key: 0,\n  class: \"match-confirmation\"\n};\nconst _hoisted_25 = {\n  class: \"match-info\"\n};\nconst _hoisted_26 = {\n  class: \"match-buttons\"\n};\nconst _hoisted_27 = {\n  key: 1,\n  class: \"waiting-popup\"\n};\nconst _hoisted_28 = {\n  key: 2,\n  class: \"popup-overlay\"\n};\nconst _hoisted_29 = {\n  class: \"popup-content\"\n};\nconst _hoisted_30 = {\n  class: \"waiting-time\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"img\", {\n    src: `http://ddragon.leagueoflegends.com/cdn/14.22.1/img/profileicon/${$data.userInfo.summonerInfo?.profileIconId}.png`,\n    alt: \"소환사 아이콘\",\n    class: \"summoner-icon\"\n  }, null, 8, _hoisted_6)]), _createElementVNode(\"span\", null, \"안녕하세요, \" + _toDisplayString($data.userInfo.nickname) + \"님!\", 1), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"img\", {\n    src: $data.userInfo.summonerRank?.[0] ? `https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/${$data.userInfo.summonerRank[0].tier.toLowerCase()}.png` : 'https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/unranked.png',\n    alt: \"티어 아이콘\",\n    class: \"rank-icon\"\n  }, null, 8, _hoisted_9), _createElementVNode(\"span\", _hoisted_10, _toDisplayString($data.userInfo.summonerRank?.[0] ? $data.userInfo.summonerRank[0].tier + ' ' + $data.userInfo.summonerRank[0].rank : '랭크 정보 없음'), 1)]), _createElementVNode(\"button\", {\n    class: \"refresh-button\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.fetchLatestMatchData && $options.fetchLatestMatchData(...args))\n  }, \"전적 갱신\")])])]), _createElementVNode(\"div\", _hoisted_11, [_cache[5] || (_cache[5] = _createElementVNode(\"h2\", null, \"포지션 (중복 2개 가능)\", -1)), _createElementVNode(\"div\", _hoisted_12, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.positions, pos => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: pos.value,\n      class: _normalizeClass({\n        selected: $data.selectedPositions.includes(pos.value)\n      }),\n      onClick: $event => $options.togglePosition(pos.value)\n    }, [_createElementVNode(\"img\", {\n      src: pos.icon,\n      alt: pos.label\n    }, null, 8, _hoisted_14), _createElementVNode(\"span\", null, _toDisplayString(pos.label), 1)], 10, _hoisted_13);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_15, [_cache[6] || (_cache[6] = _createElementVNode(\"h2\", null, \"음성 채팅 사용 여부\", -1)), _createElementVNode(\"div\", _hoisted_16, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.voiceOptions, voice => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: voice.value,\n      class: _normalizeClass({\n        active: $data.microphone === voice.value\n      }),\n      onClick: $event => $data.microphone = voice.value\n    }, [_createElementVNode(\"img\", {\n      src: voice.icon,\n      alt: voice.label\n    }, null, 8, _hoisted_18), _createElementVNode(\"span\", null, _toDisplayString(voice.label), 1)], 10, _hoisted_17);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_19, [_cache[7] || (_cache[7] = _createElementVNode(\"h2\", null, \"일반 / 랭크\", -1)), _createElementVNode(\"div\", _hoisted_20, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.gameModes, mode => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: mode.value,\n      class: _normalizeClass({\n        active: $data.matchType === mode.value\n      }),\n      onClick: $event => $data.matchType = mode.value\n    }, [_createElementVNode(\"img\", {\n      src: mode.icon,\n      alt: mode.label\n    }, null, 8, _hoisted_22), _createElementVNode(\"span\", null, _toDisplayString(mode.label), 1)], 10, _hoisted_21);\n  }), 128))])]), _createElementVNode(\"button\", {\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.startMatching && $options.startMatching(...args)),\n    disabled: $data.isMatching,\n    class: \"match-button\"\n  }, \" 매칭 시작 \", 8, _hoisted_23)]), $data.matchFound && !$data.waitingForOpponent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_24, [_createElementVNode(\"div\", _hoisted_25, [_cache[8] || (_cache[8] = _createElementVNode(\"p\", {\n    class: \"match-text\"\n  }, \"매칭 완료!!\", -1)), _createElementVNode(\"p\", null, \"남은 시간: \" + _toDisplayString($data.countdown) + \"초\", 1)]), _createElementVNode(\"div\", _hoisted_26, [_createElementVNode(\"button\", {\n    class: \"reject-button\",\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.rejectMatch && $options.rejectMatch(...args))\n  }, \"거절\"), _createElementVNode(\"button\", {\n    class: \"accept-button\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.acceptMatch && $options.acceptMatch(...args))\n  }, \"수락\")])])) : _createCommentVNode(\"\", true), $data.waitingForOpponent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_27, _cache[9] || (_cache[9] = [_createElementVNode(\"div\", {\n    class: \"popup-content\"\n  }, [_createElementVNode(\"p\", null, \"상대방의 응답을 기다리고 있습니다...\"), _createElementVNode(\"img\", {\n    src: \"/icons/loading.png\",\n    alt: \"Loading\",\n    class: \"loading-icon\"\n  })], -1)]))) : _createCommentVNode(\"\", true), $data.isMatching && !$data.matchFound && !$data.waitingForOpponent ? (_openBlock(), _createElementBlock(\"div\", _hoisted_28, [_createElementVNode(\"div\", _hoisted_29, [_cache[10] || (_cache[10] = _createElementVNode(\"img\", {\n    src: \"/icons/loading.png\",\n    alt: \"Loading\",\n    class: \"loading-icon\"\n  }, null, -1)), _createElementVNode(\"p\", _hoisted_30, _toDisplayString($options.formattedTime), 1), _cache[11] || (_cache[11] = _createElementVNode(\"p\", null, \"상대를 찾고 있습니다. 잠시만 기다려 주세요.\", -1)), _createElementVNode(\"button\", {\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.cancelMatching && $options.cancelMatching(...args))\n  }, \"취소\")])])) : _createCommentVNode(\"\", true)]);\n}","map":{"version":3,"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","_hoisted_4","_hoisted_5","src","$data","userInfo","summonerInfo","profileIconId","alt","_hoisted_6","_toDisplayString","nickname","_hoisted_7","_hoisted_8","summonerRank","tier","toLowerCase","_hoisted_9","_hoisted_10","rank","onClick","_cache","args","$options","fetchLatestMatchData","_hoisted_11","_hoisted_12","_Fragment","_renderList","positions","pos","value","_normalizeClass","selected","selectedPositions","includes","$event","togglePosition","icon","label","_hoisted_14","_hoisted_13","_hoisted_15","_hoisted_16","voiceOptions","voice","active","microphone","_hoisted_18","_hoisted_17","_hoisted_19","_hoisted_20","gameModes","mode","matchType","_hoisted_22","_hoisted_21","startMatching","disabled","isMatching","_hoisted_23","matchFound","waitingForOpponent","_hoisted_24","_hoisted_25","countdown","_hoisted_26","rejectMatch","acceptMatch","_createCommentVNode","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","formattedTime","cancelMatching"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/MatchQueue.vue"],"sourcesContent":["<template>\n    <div class=\"match-queue\">\n        <div class=\"match-container\">\n            <!-- ✅ 프로필 & 티어 정보 -->\n            <div class=\"profile-rank-container\">\n                <div class=\"profile-section\">\n                    <div class=\"profile-picture\">\n                        <img :src=\"`http://ddragon.leagueoflegends.com/cdn/14.22.1/img/profileicon/${userInfo.summonerInfo?.profileIconId}.png`\"\n                            alt=\"소환사 아이콘\" class=\"summoner-icon\" />\n                    </div>\n                    <span>안녕하세요, {{ userInfo.nickname }}님!</span>\n                    <div class=\"user-rank-container\">\n                        <div class=\"rank-info\">\n                            <img :src=\"userInfo.summonerRank?.[0]\n                                ? `https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/${userInfo.summonerRank[0].tier.toLowerCase()}.png`\n                                : 'https://raw.communitydragon.org/latest/plugins/rcp-fe-lol-shared-components/global/default/unranked.png'\"\n                                alt=\"티어 아이콘\" class=\"rank-icon\" />\n                            <span class=\"rank-text\">\n                                {{ userInfo.summonerRank?.[0]\n                                    ? userInfo.summonerRank[0].tier + ' ' + userInfo.summonerRank[0].rank\n                                    : '랭크 정보 없음' }}\n                            </span>\n                        </div>\n                        <button class=\"refresh-button\" @click=\"fetchLatestMatchData\">전적 갱신</button>\n                    </div>\n                </div>\n            </div>\n\n            <!-- ✅ 포지션 선택 -->\n            <div class=\"selection-section\">\n                <h2>포지션 (중복 2개 가능)</h2>\n                <div class=\"position-options\">\n                    <div v-for=\"pos in positions\" :key=\"pos.value\"\n                        :class=\"{ selected: selectedPositions.includes(pos.value) }\" @click=\"togglePosition(pos.value)\">\n                        <img :src=\"pos.icon\" :alt=\"pos.label\" />\n                        <span>{{ pos.label }}</span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- ✅ 음성 채팅 사용 여부 -->\n            <div class=\"selection-section\">\n                <h2>음성 채팅 사용 여부</h2>\n                <div class=\"voice-options\">\n                    <div v-for=\"voice in voiceOptions\" :key=\"voice.value\"\n                        :class=\"{ active: microphone === voice.value }\" @click=\"microphone = voice.value\">\n                        <img :src=\"voice.icon\" :alt=\"voice.label\" />\n                        <span>{{ voice.label }}</span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- ✅ 일반/랭크 선택 -->\n            <div class=\"selection-section\">\n                <h2>일반 / 랭크</h2>\n                <div class=\"game-mode-options\">\n                    <div v-for=\"mode in gameModes\" :key=\"mode.value\" :class=\"{ active: matchType === mode.value }\"\n                        @click=\"matchType = mode.value\">\n                        <img :src=\"mode.icon\" :alt=\"mode.label\" />\n                        <span>{{ mode.label }}</span>\n                    </div>\n                </div>\n            </div>\n\n            <!-- ✅ 매칭 버튼 -->\n            <button @click=\"startMatching\" :disabled=\"isMatching\" class=\"match-button\">\n                매칭 시작\n            </button>\n        </div>\n\n        <!-- ✅ 매칭 완료 팝업 -->\n        <div class=\"match-confirmation\" v-if=\"matchFound && !waitingForOpponent\">\n            <div class=\"match-info\">\n                <p class=\"match-text\">매칭 완료!!</p>\n                <!-- 15초 카운트 다운 표시 -->\n                <p>남은 시간: {{ countdown }}초</p>\n            </div>\n            <div class=\"match-buttons\">\n                <button class=\"reject-button\" @click=\"rejectMatch\">거절</button>\n                <button class=\"accept-button\" @click=\"acceptMatch\">수락</button>\n            </div>\n        </div>\n\n        <!-- ✅ \"상대방 응답 대기\" 팝업 -->\n        <div class=\"waiting-popup\" v-if=\"waitingForOpponent\">\n            <div class=\"popup-content\">\n                <p>상대방의 응답을 기다리고 있습니다...</p>\n                <img src=\"/icons/loading.png\" alt=\"Loading\" class=\"loading-icon\" />\n            </div>\n        </div>\n\n        <!-- ✅ \"매칭 중\" UI -->\n        <div class=\"popup-overlay\" v-if=\"isMatching && !matchFound && !waitingForOpponent\">\n            <div class=\"popup-content\">\n                <img src=\"/icons/loading.png\" alt=\"Loading\" class=\"loading-icon\" />\n                <p class=\"waiting-time\">{{ formattedTime }}</p>\n                <p>상대를 찾고 있습니다. 잠시만 기다려 주세요.</p>\n                <button @click=\"cancelMatching\">취소</button>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { io } from \"socket.io-client\";\n\nexport default {\n    data() {\n        return {\n            socket: null,\n            isLoggedIn: false,\n            userInfo: {},\n            selectedPositions: [],\n            microphone: \"미사용\",\n            matchType: \"일반\",\n            isMatching: false,\n            matchFound: false,\n            matchId: null,\n            opponentAccepted: false, // 🔹 상대방 수락 여부\n            waitingForOpponent: false, // 🔹 상대 응답 대기 상태\n            waitingTime: 0,\n            timer: null,\n\n            // 15초 카운트 다운 관련 변수 추가\n            countdown: 15,\n            countdownTimer: null,\n\n            positionIconSize: 40,\n            voiceIconWidth: 50,\n            voiceIconHeight: 80,\n            gameModeIconSize: 120,\n\n            positions: [\n                { label: \"탑\", value: \"탑\", icon: \"/icons/top.png\" },\n                { label: \"정글\", value: \"정글\", icon: \"/icons/jungle.png\" },\n                { label: \"미드\", value: \"미드\", icon: \"/icons/mid.png\" },\n                { label: \"원딜\", value: \"원딜\", icon: \"/icons/adc.png\" },\n                { label: \"서포터\", value: \"서포터\", icon: \"/icons/support.png\" },\n                { label: \"없음\", value: \"없음\", icon: \"/icons/none.png\" },\n            ],\n\n            voiceOptions: [\n                { label: \"사용\", value: \"사용\", icon: \"/icons/mic-on.png\" },\n                { label: \"미사용\", value: \"미사용\", icon: \"/icons/mic-off.png\" }\n            ],\n\n            gameModes: [\n                { label: \"일반\", value: \"일반\", icon: \"/icons/normal.png\" },\n                { label: \"랭크\", value: \"랭크\", icon: \"/icons/rank.png\" }\n            ]\n        };\n    },\n\n    async mounted() {\n        await this.checkLoginStatus(); // 로그인 상태 확인\n        this.initializeSocket();\n    },\n\n    methods: {\n        async fetchLatestMatchData() {\n            try {\n                const response = await fetch(`${process.env.VUE_APP_API_URL}/updateSummonerInfo`, {\n                    method: \"POST\",\n                    credentials: \"include\",\n                    headers: { \"Content-Type\": \"application/json\" }\n                });\n                const result = await response.json();\n                if (result.success) {\n                    alert(\"소환사 정보 갱신 성공\");\n                    await this.checkLoginStatus();\n                } else {\n                    alert(\"소환사 정보 갱신 실패: \" + result.message);\n                }\n            } catch (error) {\n                console.error(\"소환사 정보 갱신 오류:\", error);\n                alert(\"소환사 정보 갱신 중 오류 발생\");\n            }\n        },\n\n        async checkLoginStatus() {\n            try {\n                const response = await fetch(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n                    method: \"GET\",\n                    credentials: \"include\",\n                });\n                if (response.ok) {\n                    const data = await response.json();\n                    this.isLoggedIn = data.loggedIn;\n                    if (data.loggedIn) {\n                        this.userInfo = data.user || {};\n                    } else {\n                        this.handleUnauthenticatedUser();\n                    }\n                } else {\n                    this.handleUnauthenticatedUser();\n                }\n            } catch (error) {\n                console.error(\"❌ 로그인 상태 확인 오류:\", error);\n                this.handleUnauthenticatedUser();\n            }\n        },\n\n        handleUnauthenticatedUser() {\n            this.isLoggedIn = false;\n            this.userInfo = {};\n            alert(\"로그인이 필요합니다. 메인 화면으로 이동합니다.\");\n            this.$router.push(\"/\");\n        },\n\n        resetUserData() {\n            this.isLoggedIn = false;\n            this.userInfo = {};\n        },\n\n        initializeSocket() {\n            this.socket = io(`${process.env.VUE_APP_API_URL}`, { withCredentials: true });\n\n            this.socket.on(\"disconnect\", () => {\n                console.log(\"❌ 서버 연결 해제됨. 대기열에서 제거\");\n                this.isMatching = false;\n                this.matchFound = false;\n                this.waitingForOpponent = false;\n                this.opponentAccepted = false;\n                if (this.timer) clearInterval(this.timer);\n                this.clearAcceptCountdown();\n            });\n\n            this.socket.on(\"matchSuccess\", (data) => {\n                console.log(\"🔹 매칭 성공:\", data);\n                this.matchId = data.matchId;\n                this.matchFound = true;\n                this.waitingForOpponent = false;\n                // 매칭 성공 시 15초 카운트 다운 시작\n                this.startAcceptCountdown();\n            });\n\n            this.socket.on(\"matchRejected\", () => {\n                console.log(\"❌ 상대방이 매칭을 거절함\");\n                this.matchFound = false;\n                this.isMatching = false;\n                this.waitingForOpponent = false;\n                this.opponentAccepted = false;\n                if (this.timer) clearInterval(this.timer);\n                this.clearAcceptCountdown();\n                alert(\"⚠️ 상대방이 매칭을 거부했습니다. 다시 시도해주세요!\");\n            });\n\n            this.socket.on(\"matchConfirmed\", async (data) => {\n                if (data.matchId === this.matchId) {\n                    this.opponentAccepted = true; // 🔹 상대방 수락\n                    this.clearAcceptCountdown();\n                    if (this.waitingForOpponent) {\n                        // ✅ 둘 다 수락했으므로 채팅방으로 이동\n                        this.$router.push(`/chatroom?matchId=${this.matchId}`);\n                    }\n                }\n            });\n\n            this.socket.on(\"matchCancelled\", () => {\n                console.log(\"❌ 매칭 취소됨\");\n                this.matchFound = false;\n                this.isMatching = false;\n                this.waitingForOpponent = false;\n                this.opponentAccepted = false;\n                if (this.timer) clearInterval(this.timer);\n                this.clearAcceptCountdown();\n            });\n\n            this.socket.on('matchError', ({ message }) => {\n                alert(`⚠️ 매칭 오류: ${message}`);\n                this.isMatching = false;\n                this.matchFound = false;\n                this.waitingForOpponent = false;\n                this.opponentAccepted = false;\n                if (this.timer) clearInterval(this.timer);\n                this.clearAcceptCountdown();\n            });\n        },\n\n        togglePosition(position) {\n            if (this.selectedPositions.includes(position)) {\n                this.selectedPositions = this.selectedPositions.filter(p => p !== position);\n            } else if (this.selectedPositions.length < 2) {\n                this.selectedPositions.push(position);\n            }\n        },\n\n        startMatching() {\n            this.isMatching = true;\n            this.waitingTime = 0;\n            this.timer = setInterval(() => {\n                this.waitingTime++;\n            }, 1000);\n            this.socket.emit(\n                this.matchType === \"일반\" ? \"request normalmatch\" : \"request rankmatch\",\n                { position: this.selectedPositions, microphone: this.microphone }\n            );\n        },\n\n        acceptMatch() {\n            if (this.matchId) {\n                this.socket.emit(\"acceptMatch\", { matchId: this.matchId });\n                this.waitingForOpponent = true; // 🔹 상대방 응답 대기 상태 활성화\n                this.clearAcceptCountdown();\n            }\n            if (this.opponentAccepted) {\n                // ✅ 상대방도 수락한 상태 → 채팅방으로 이동\n                this.$router.push(`/chatroom?matchId=${this.matchId}`);\n            }\n        },\n\n        rejectMatch() {\n            if (this.matchId) {\n                this.socket.emit(\"rejectMatch\", { matchId: this.matchId });\n            }\n            this.isMatching = false;\n            this.matchFound = false;\n            this.waitingForOpponent = false;\n            this.opponentAccepted = false;\n            if (this.timer) clearInterval(this.timer);\n            this.clearAcceptCountdown();\n        },\n\n        cancelMatching() {\n            if (this.timer) clearInterval(this.timer);\n            this.isMatching = false;\n            this.socket.emit(\"cancel match\");\n            this.clearAcceptCountdown();\n        },\n\n        // 15초 수락 카운트 다운 시작\n        startAcceptCountdown() {\n            this.countdown = 15;\n            if (this.countdownTimer) clearInterval(this.countdownTimer);\n            this.countdownTimer = setInterval(() => {\n                if (this.countdown > 0) {\n                    this.countdown--;\n                } else {\n                    clearInterval(this.countdownTimer);\n                    this.countdownTimer = null;\n                    // 남은 시간이 0초가 되면 자동 거절 처리\n                    this.rejectMatch();\n                    alert(\"⚠️ 수락 시간이 초과되어 매칭이 거절되었습니다.\");\n                }\n            }, 1000);\n        },\n\n        // 카운트 다운 타이머 정리\n        clearAcceptCountdown() {\n            if (this.countdownTimer) {\n                clearInterval(this.countdownTimer);\n                this.countdownTimer = null;\n            }\n        }\n    },\n\n    computed: {\n        formattedTime() {\n            const minutes = Math.floor(this.waitingTime / 60);\n            const seconds = this.waitingTime % 60;\n            return `${minutes.toString().padStart(2, \"0\")}: ${seconds\n                .toString()\n                .padStart(2, \"0\")\n                }`;\n        }\n    },\n\n    beforeUnmount() {\n        if (this.timer) clearInterval(this.timer);\n        if (this.socket) this.socket.disconnect();\n        this.clearAcceptCountdown();\n    }\n};\n</script>\n\n<style scoped>\n.match-queue {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100vh;\n    width: 100vw;\n    background-color: #1e1e1e;\n}\n\n.match-container {\n    background-color: #333;\n    padding: 20px;\n    border-radius: 10px;\n    color: white;\n    width: 600px;\n    max-width: 80%;\n}\n\n/* ✅ 프로필 영역 */\n.profile-section {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n}\n\n.profile-picture {\n    width: 80px;\n    height: 80px;\n    background-color: #2c2c2c;\n    border-radius: 50%;\n    overflow: hidden;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.summoner-icon {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n    border-radius: 50%;\n}\n\n.profile-section span {\n    font-size: 18px;\n    font-weight: bold;\n    color: white;\n}\n\n.profile-rank-container {\n    position: relative;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    width: 100%;\n    max-width: 600px;\n    margin-bottom: 20px;\n}\n\n.user-rank-container {\n    position: absolute;\n    top: 0;\n    right: 0;\n    display: flex;\n    align-items: center;\n    gap: 10px;\n}\n\n.rank-info {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n    gap: 5px;\n}\n\n.rank-icon {\n    width: 70px;\n    height: 70px;\n    object-fit: contain;\n}\n\n.rank-text {\n    font-size: 18px;\n    font-weight: bold;\n    color: white;\n    margin-top: -5px;\n}\n\n.refresh-button {\n    padding: 10px 15px;\n    background: rgb(21, 81, 55);\n    color: white;\n    font-size: 14px;\n    font-weight: bold;\n    border: none;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: background 0.3s ease, transform 0.2s ease;\n}\n\n.refresh-button:hover {\n    background: rgb(30, 100, 70);\n    transform: scale(1.05);\n}\n\n/* ✅ 포지션, 음성채팅, 게임모드 선택 스타일 */\n.position-options,\n.voice-options,\n.game-mode-options {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 20px;\n    flex-wrap: wrap;\n}\n\n.position-options div,\n.voice-options div,\n.game-mode-options div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n}\n\n.position-options img {\n    width: 70px;\n    height: 70px;\n    transition: transform 0.2s;\n}\n\n.voice-options img[src*=\"mic-on.png\"] {\n    width: 50px;\n    height: 90px;\n}\n\n.voice-options img[src*=\"mic-off.png\"] {\n    width: 70px;\n    height: 90px;\n}\n\n.game-mode-options img {\n    width: 140px;\n    height: 140px;\n    transition: transform 0.2s;\n}\n\n.position-options img:hover,\n.voice-options img:hover,\n.game-mode-options img:hover {\n    transform: scale(1.1);\n}\n\n.selected img,\n.active img {\n    border: 3px solid rgb(21, 81, 55);\n    border-radius: 10px;\n}\n\n/* ✅ 매칭 버튼 */\n.match-button {\n    display: block;\n    margin: 20px auto;\n    width: 50%;\n    padding: 10px;\n    font-size: 16px;\n    background-color: rgb(21, 81, 55);\n    color: white;\n    border: none;\n    border-radius: 90px;\n    cursor: pointer;\n}\n\n.match-button:disabled {\n    background-color: #555;\n    cursor: not-allowed;\n}\n\n/* ✅ 매칭 완료 팝업 (크기 완전히 고정) */\n.match-confirmation {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    width: 400px !important;\n    /* 고정된 가로 크기 */\n    height: 200px !important;\n    /* 고정된 세로 크기 */\n    background: #222;\n    color: white;\n    border-radius: 15px;\n    padding: 20px;\n    text-align: center;\n    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.5);\n}\n\n/* ✅ 수락/거절 버튼 컨테이너 */\n.match-buttons {\n    display: flex;\n    gap: 10px;\n    margin-top: 15px;\n}\n\n.reject-button,\n.accept-button {\n    padding: 12px 30px;\n    font-size: 16px;\n    border: none;\n    cursor: pointer;\n    border-radius: 45px;\n}\n\n.reject-button {\n    background: none;\n    border: 2px solid white;\n    color: white;\n}\n\n.accept-button {\n    background: rgb(21, 81, 55);\n    color: white;\n}\n\n/* ✅ 작은 화면에서도 크기 유지 */\n@media (max-width: 768px) {\n    .match-confirmation {\n        width: 400px !important;\n        /* 모바일에서도 크기 고정 */\n        height: 200px !important;\n    }\n}\n\n/* ✅ 매칭 중 UI 배경 (팝업 전체 배경) */\n.popup-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.8);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.popup-content {\n    background: rgb(66, 66, 66);\n    padding: 30px;\n    border-radius: 15px;\n    text-align: center;\n    width: 300px;\n    height: 500px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n}\n\n.popup-content p {\n    color: white;\n    font-size: 15px;\n    font-weight: bold;\n    text-align: center;\n    margin-bottom: 10px;\n}\n\n.loading-icon {\n    width: 80px;\n    height: 80px;\n    margin-top: 10px;\n    animation: spin 1s linear infinite;\n}\n\n@keyframes spin {\n    from {\n        transform: rotate(0deg);\n    }\n\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n.popup-content button {\n    padding: 12px 20px;\n    background: rgb(66, 66, 66);\n    color: white;\n    font-size: 16px;\n    border: 1px solid white;\n    border-radius: 10px;\n    cursor: pointer;\n    margin-top: 15px;\n    transition: transform 0.2s ease;\n}\n\n.popup-content button:hover {\n    transform: scale(1.05);\n}\n\n.waiting-popup {\n    position: fixed;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    background: rgb(66, 66, 66);\n    color: white;\n    padding: 30px;\n    border-radius: 12px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    width: 300px;\n    height: 400px;\n}\n\n.waiting-time {\n    font-size: 24px;\n    font-weight: bold;\n    margin: 10px 0;\n}\n\n@media (max-width: 768px) {\n    .match-container {\n        width: 90%;\n    }\n\n    .match-confirmation {\n        width: 90%;\n        height: auto;\n    }\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}