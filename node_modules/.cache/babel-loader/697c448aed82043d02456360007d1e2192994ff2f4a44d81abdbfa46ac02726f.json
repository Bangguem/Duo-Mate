{"ast":null,"code":"import \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      updates: [],\n      loading: false,\n      error: false,\n      currentPage: 'list',\n      sortOrder: 'latest',\n      searchQuery: '',\n      title: '',\n      content: '',\n      currentUser: null // ✅ 로그인 사용자 정보\n    };\n  },\n  computed: {\n    // 검색 필터링\n    filteredUpdates() {\n      if (!this.searchQuery.trim()) return this.updates;\n      return this.updates.filter(update => {\n        return update.title && update.title.toLowerCase().includes(this.searchQuery.toLowerCase()) || update.content && update.content.toLowerCase().includes(this.searchQuery.toLowerCase()) || update.date && update.date.toString().includes(this.searchQuery);\n      });\n    },\n    // ✅ Admin 여부 판별\n    isAdmin() {\n      return this.currentUser?.userid === 'Admin';\n    }\n  },\n  created() {\n    Promise.all([this.fetchUpdates(), this.checkLogin()]);\n  },\n  methods: {\n    // ✅ 로그인 유저 정보 확인\n    async checkLogin() {\n      try {\n        const res = await axios.get(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          withCredentials: true\n        });\n        if (res.data.loggedIn) {\n          this.currentUser = res.data.user;\n        }\n      } catch (err) {\n        console.error('로그인 정보 확인 실패:', err);\n      }\n    },\n    async fetchUpdates() {\n      this.loading = true;\n      this.error = false;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/updates?sort=${this.sortOrder}`);\n        this.updates = response.data;\n      } catch (err) {\n        console.error('업데이트를 가져오는 중 오류:', err);\n        this.error = true;\n      } finally {\n        this.loading = false;\n      }\n    },\n    sortUpdates(order) {\n      this.sortOrder = order;\n      this.fetchUpdates();\n    },\n    filterUpdates() {\n      // computed에서 처리됨\n    },\n    async submitUpdate() {\n      try {\n        await axios.post(`${process.env.VUE_APP_API_URL}/api/updates`, {\n          title: this.title,\n          content: this.content\n        }, {\n          withCredentials: true\n        }); // ✅ 쿠키 인증 필요\n        this.title = '';\n        this.content = '';\n        this.fetchUpdates();\n        this.currentPage = 'list';\n      } catch (err) {\n        console.error('업데이트 작성 중 오류:', err);\n        alert('작성 실패! 관리자만 작성 가능합니다.');\n      }\n    },\n    // ✅ Admin만 작성 페이지 이동 가능\n    goToWritePage() {\n      if (!this.isAdmin) {\n        alert('관리자만 작성할 수 있습니다.');\n        return;\n      }\n      this.currentPage = 'write';\n    },\n    goToListPage() {\n      this.currentPage = 'list';\n    },\n    convertNewLinesToBreaks(text) {\n      return text ? text.replace(/\\n/g, '<br>') : text;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","updates","loading","error","currentPage","sortOrder","searchQuery","title","content","currentUser","computed","filteredUpdates","trim","filter","update","toLowerCase","includes","date","toString","isAdmin","userid","created","Promise","all","fetchUpdates","checkLogin","methods","res","get","process","env","VUE_APP_API_URL","withCredentials","loggedIn","user","err","console","response","sortUpdates","order","filterUpdates","submitUpdate","post","alert","goToWritePage","goToListPage","convertNewLinesToBreaks","text","replace","formatDate","Date","toLocaleDateString"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/UpdatePage.vue"],"sourcesContent":["<template>\n  <div class=\"contents\">\n    <!-- 목록 상단 필터 -->\n    <section class=\"contents-header\" v-if=\"currentPage === 'list'\">\n      <div class=\"header-left\">\n        <button @click=\"sortUpdates('latest')\" class=\"filter-button\">최신순</button>\n        <button @click=\"sortUpdates('oldest')\" class=\"filter-button\">오래된순</button>\n      </div>\n      <div class=\"header-right\">\n        <div class=\"search-box\">\n          <input v-model=\"searchQuery\" type=\"text\" placeholder=\"검색\" class=\"search-input\" />\n          <span class=\"search-icon\" @click=\"filterUpdates\">🔍</span>\n        </div>\n      </div>\n    </section>\n\n    <!-- ✅ 관리자일 때만 보이는 작성 버튼 -->\n    <div class=\"write-button-container\" v-if=\"currentPage === 'list' && isAdmin\">\n      <button @click=\"goToWritePage\" class=\"write-button\">업데이트 작성</button>\n    </div>\n\n    <!-- 업데이트 목록 -->\n    <div v-if=\"currentPage === 'list'\" class=\"feed-container\">\n      <div v-if=\"loading\" class=\"loading\">로딩 중...</div>\n      <div v-else-if=\"error\" class=\"error\">업데이트를 불러오는 데 실패했습니다.</div>\n      <div v-else-if=\"filteredUpdates.length\" class=\"feed-list\">\n        <div v-for=\"update in filteredUpdates\" :key=\"update._id\" class=\"feed-card\">\n          <div class=\"feed-header\">\n            <img src=\"@/assets/icon_setting.png\" alt=\"업데이트 아이콘\" class=\"patch-icon\" />\n            <div class=\"patch-info\">\n              <router-link :to=\"{ name: 'UpdateDetail', params: { id: update._id } }\" class=\"patch-title\">\n                {{ update.title }}\n              </router-link>\n              <p class=\"patch-date\">{{ formatDate(update.date) }}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div v-else class=\"no-updates\">업데이트가 없습니다.</div>\n    </div>\n\n    <!-- 업데이트 작성 폼 -->\n    <div v-if=\"currentPage === 'write'\" class=\"update-form\">\n      <h2>업데이트 작성</h2>\n      <form @submit.prevent=\"submitUpdate\">\n        <input v-model=\"title\" type=\"text\" placeholder=\"제목 입력\" required />\n        <textarea v-model=\"content\" placeholder=\"업데이트 내용 입력\" required></textarea>\n        <div class=\"form-buttons\">\n          <button type=\"submit\" class=\"submit-button\">작성</button>\n          <button type=\"button\" @click=\"goToListPage\" class=\"cancel-button\">취소</button>\n        </div>\n      </form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      updates: [],\n      loading: false,\n      error: false,\n      currentPage: 'list',\n      sortOrder: 'latest',\n      searchQuery: '',\n      title: '',\n      content: '',\n      currentUser: null // ✅ 로그인 사용자 정보\n    };\n  },\n  computed: {\n    // 검색 필터링\n    filteredUpdates() {\n      if (!this.searchQuery.trim()) return this.updates;\n      return this.updates.filter(update => {\n        return (\n          (update.title && update.title.toLowerCase().includes(this.searchQuery.toLowerCase())) ||\n          (update.content && update.content.toLowerCase().includes(this.searchQuery.toLowerCase())) ||\n          (update.date && update.date.toString().includes(this.searchQuery))\n        );\n      });\n    },\n    // ✅ Admin 여부 판별\n    isAdmin() {\n      return this.currentUser?.userid === 'Admin';\n    }\n  },\n  created() {\n    Promise.all([\n      this.fetchUpdates(),\n      this.checkLogin()\n    ]);\n  },\n  methods: {\n    // ✅ 로그인 유저 정보 확인\n    async checkLogin() {\n      try {\n        const res = await axios.get(`${process.env.VUE_APP_API_URL}/auth/check-login`, {\n          withCredentials: true\n        });\n        if (res.data.loggedIn) {\n          this.currentUser = res.data.user;\n        }\n      } catch (err) {\n        console.error('로그인 정보 확인 실패:', err);\n      }\n    },\n\n    async fetchUpdates() {\n      this.loading = true;\n      this.error = false;\n      try {\n        const response = await axios.get(`${process.env.VUE_APP_API_URL}/api/updates?sort=${this.sortOrder}`);\n        this.updates = response.data;\n      } catch (err) {\n        console.error('업데이트를 가져오는 중 오류:', err);\n        this.error = true;\n      } finally {\n        this.loading = false;\n      }\n    },\n    sortUpdates(order) {\n      this.sortOrder = order;\n      this.fetchUpdates();\n    },\n    filterUpdates() {\n      // computed에서 처리됨\n    },\n    async submitUpdate() {\n      try {\n        await axios.post(`${process.env.VUE_APP_API_URL}/api/updates`, {\n          title: this.title,\n          content: this.content\n        }, { withCredentials: true }); // ✅ 쿠키 인증 필요\n        this.title = '';\n        this.content = '';\n        this.fetchUpdates();\n        this.currentPage = 'list';\n      } catch (err) {\n        console.error('업데이트 작성 중 오류:', err);\n        alert('작성 실패! 관리자만 작성 가능합니다.');\n      }\n    },\n    // ✅ Admin만 작성 페이지 이동 가능\n    goToWritePage() {\n      if (!this.isAdmin) {\n        alert('관리자만 작성할 수 있습니다.');\n        return;\n      }\n      this.currentPage = 'write';\n    },\n    goToListPage() {\n      this.currentPage = 'list';\n    },\n    convertNewLinesToBreaks(text) {\n      return text ? text.replace(/\\n/g, '<br>') : text;\n    },\n    formatDate(date) {\n      return new Date(date).toLocaleDateString();\n    }\n  }\n};\n</script>\n\n<style scoped>\n/* 기존 스타일 그대로 유지 */\n.contents {\n  width: 100%;\n  max-width: 1260px;\n  margin: 0 auto;\n  padding: 20px 50px;\n}\n\n.contents-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: #424242;\n  padding: 15px;\n  border-radius: 10px;\n  margin-bottom: 10px;\n}\n\n.header-left,\n.header-right {\n  display: flex;\n  align-items: center;\n}\n\n.filter-button {\n  background-color: #333;\n  color: white;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  margin-right: 10px;\n}\n\n.search-box {\n  display: flex;\n  align-items: center;\n  background-color: black;\n  border-radius: 20px;\n  padding: 5px 10px;\n}\n\n.search-input {\n  background: none;\n  border: none;\n  color: white;\n  outline: none;\n}\n\n.search-icon {\n  color: gray;\n  cursor: pointer;\n}\n\n.write-button-container {\n  text-align: center;\n  margin-bottom: 10px;\n}\n\n.write-button {\n  background-color: transparent;\n  border: 1px solid #42b983;\n  color: white;\n  padding: 10px 20px;\n  border-radius: 20px;\n  cursor: pointer;\n}\n\n.feed-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.feed-list {\n  width: 100%;\n  max-width: 600px;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.feed-card {\n  background-color: #333;\n  padding: 15px;\n  border-radius: 12px;\n  color: white;\n}\n\n.feed-header {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n}\n\n.patch-icon {\n  width: 40px;\n  height: 40px;\n}\n\n.patch-info {\n  display: flex;\n  flex-direction: column;\n  margin-left: 20px;\n  flex: 1;\n}\n\n.patch-title {\n  font-size: 16px;\n  font-weight: bold;\n  color: white;\n  text-decoration: none;\n}\n\n.patch-title:hover {\n  text-decoration: underline;\n}\n\n.patch-date {\n  font-size: 14px;\n  color: #bbb !important;\n}\n\n.no-updates,\n.loading,\n.error {\n  color: white;\n  text-align: center;\n}\n\n.update-form {\n  background-color: #424242;\n  padding: 20px;\n  border-radius: 12px;\n  max-width: 500px;\n  margin: 0 auto;\n}\n\n.update-form h2 {\n  color: white;\n  margin-bottom: 15px;\n}\n\n.update-form input,\n.update-form textarea {\n  width: 100%;\n  padding: 10px;\n  margin-bottom: 10px;\n  border-radius: 8px;\n  border: none;\n  background-color: #222;\n  color: white;\n}\n\n.form-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.submit-button {\n  background-color: #42b983;\n  border: none;\n  padding: 10px 20px;\n  color: white;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.cancel-button {\n  background-color: gray;\n  border: none;\n  padding: 10px 20px;\n  color: white;\n  border-radius: 8px;\n  cursor: pointer;\n}\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}