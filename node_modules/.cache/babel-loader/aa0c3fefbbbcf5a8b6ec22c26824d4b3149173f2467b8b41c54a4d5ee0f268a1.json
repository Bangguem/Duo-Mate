{"ast":null,"code":"import \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nexport default {\n  data() {\n    return {\n      newPassword: '',\n      confirmPassword: '',\n      message: '',\n      success: false\n    };\n  },\n  methods: {\n    async resetPassword() {\n      const token = new URLSearchParams(window.location.search).get('token');\n      if (!token) {\n        this.success = false;\n        this.message = '유효하지 않은 요청입니다.';\n        return;\n      }\n      if (this.newPassword !== this.confirmPassword) {\n        this.success = false;\n        this.message = '비밀번호가 일치하지 않습니다.';\n        return;\n      }\n      try {\n        const response = await fetch(`${process.env.VUE_APP_API_URL}/reset-password`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            token,\n            newPassword: this.newPassword\n          })\n        });\n        const result = await response.json();\n        this.success = result.success;\n        this.message = result.message;\n      } catch (error) {\n        console.error('Error resetting password:', error);\n        this.success = false;\n        this.message = '비밀번호 변경 중 오류가 발생했습니다.';\n      }\n    }\n  }\n};","map":{"version":3,"names":["data","newPassword","confirmPassword","message","success","methods","resetPassword","token","URLSearchParams","window","location","search","get","response","fetch","process","env","VUE_APP_API_URL","method","headers","body","JSON","stringify","result","json","error","console"],"sources":["/Users/bangguem/Desktop/머지/Duo-Mate/src/components/ResetPassword.vue"],"sourcesContent":["<template>\n    <div class=\"reset-password\">\n        <h1>비밀번호 변경</h1>\n        <form @submit.prevent=\"resetPassword\">\n            <div>\n                <label for=\"newPassword\">새 비밀번호:</label>\n                <input type=\"password\" id=\"newPassword\" v-model=\"newPassword\" placeholder=\"새 비밀번호를 입력하세요\" required />\n            </div>\n            <div>\n                <label for=\"confirmPassword\">비밀번호 확인:</label>\n                <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" placeholder=\"비밀번호를 다시 입력하세요\"\n                    required />\n            </div>\n            <button type=\"submit\">비밀번호 변경</button>\n        </form>\n        <p v-if=\"message\" :class=\"success ? 'success' : 'error'\">{{ message }}</p>\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            newPassword: '',\n            confirmPassword: '',\n            message: '',\n            success: false,\n        };\n    },\n    methods: {\n        async resetPassword() {\n            const token = new URLSearchParams(window.location.search).get('token');\n            if (!token) {\n                this.success = false;\n                this.message = '유효하지 않은 요청입니다.';\n                return;\n            }\n\n            if (this.newPassword !== this.confirmPassword) {\n                this.success = false;\n                this.message = '비밀번호가 일치하지 않습니다.';\n                return;\n            }\n\n            try {\n                const response = await fetch(`${process.env.VUE_APP_API_URL}/reset-password`, {\n                    method: 'POST',\n                    headers: { 'Content-Type': 'application/json' },\n                    body: JSON.stringify({ token, newPassword: this.newPassword }),\n                });\n\n                const result = await response.json();\n                this.success = result.success;\n                this.message = result.message;\n            } catch (error) {\n                console.error('Error resetting password:', error);\n                this.success = false;\n                this.message = '비밀번호 변경 중 오류가 발생했습니다.';\n            }\n        },\n    },\n};\n</script>\n\n<style scoped>\n.success {\n    color: green;\n}\n\n.error {\n    color: red;\n}\n</style>"],"mappings":";;;AAoBA,eAAe;EACXA,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,WAAW,EAAE,EAAE;MACfC,eAAe,EAAE,EAAE;MACnBC,OAAO,EAAE,EAAE;MACXC,OAAO,EAAE;IACb,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACL,MAAMC,aAAaA,CAAA,EAAG;MAClB,MAAMC,KAAI,GAAI,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAACC,GAAG,CAAC,OAAO,CAAC;MACtE,IAAI,CAACL,KAAK,EAAE;QACR,IAAI,CAACH,OAAM,GAAI,KAAK;QACpB,IAAI,CAACD,OAAM,GAAI,gBAAgB;QAC/B;MACJ;MAEA,IAAI,IAAI,CAACF,WAAU,KAAM,IAAI,CAACC,eAAe,EAAE;QAC3C,IAAI,CAACE,OAAM,GAAI,KAAK;QACpB,IAAI,CAACD,OAAM,GAAI,kBAAkB;QACjC;MACJ;MAEA,IAAI;QACA,MAAMU,QAAO,GAAI,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,eAAe,iBAAiB,EAAE;UAC1EC,MAAM,EAAE,MAAM;UACdC,OAAO,EAAE;YAAE,cAAc,EAAE;UAAmB,CAAC;UAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;YAAEf,KAAK;YAAEN,WAAW,EAAE,IAAI,CAACA;UAAY,CAAC;QACjE,CAAC,CAAC;QAEF,MAAMsB,MAAK,GAAI,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;QACpC,IAAI,CAACpB,OAAM,GAAImB,MAAM,CAACnB,OAAO;QAC7B,IAAI,CAACD,OAAM,GAAIoB,MAAM,CAACpB,OAAO;MACjC,EAAE,OAAOsB,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjD,IAAI,CAACrB,OAAM,GAAI,KAAK;QACpB,IAAI,CAACD,OAAM,GAAI,uBAAuB;MAC1C;IACJ;EACJ;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}